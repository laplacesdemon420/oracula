{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testAskQuestion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805462ff00ff19166201000117905534801561002157600080fd5b506129cc806100316000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630a9254e4146100675780633a76846314610071578063ba414fa6146100a9578063db861b6c146100c1578063f8ccbf47146100c9578063fa7626d4146100dc575b600080fd5b61006f6100e9565b005b61008c737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b161062e565b60405190151581526020016100a0565b61006f610759565b6000546100b19062010000900460ff1681565b6000546100b19060ff1681565b600980546001600160a01b031916737109709ecfa91a80626ff3989d68f67f5b1dd12d17905560405161011b90610b8d565b604051809103906000f080158015610137573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b0392909216918217905560405161016390610b9a565b6001600160a01b039091168152602001604051809103906000f08015801561018f573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b03929092169190911790556040516101bc90610ba7565b604051809103906000f0801580156101d8573d6000803e3d6000fd5b50600b80546001600160a01b0319166001600160a01b039290921691909117905560405161020590610ba7565b604051809103906000f080158015610221573d6000803e3d6000fd5b50600c80546001600160a01b0319166001600160a01b03928316179055600b54604051911690600090683635c9adc5dea000009082818181858883f19350505050158015610273573d6000803e3d6000fd5b50600c546040516001600160a01b0390911690600090683635c9adc5dea000009082818181858883f193505050501580156102b2573d6000803e3d6000fd5b50600a546040516340c10f1960e01b815230600482015269d3c21bcecceda100000060248201526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561030857600080fd5b505af115801561031c573d6000803e3d6000fd5b5050600a54600b546040516340c10f1960e01b81526001600160a01b03918216600482015269d3c21bcecceda10000006024820152911692506340c10f199150604401600060405180830381600087803b15801561037957600080fd5b505af115801561038d573d6000803e3d6000fd5b5050600a54600c546040516340c10f1960e01b81526001600160a01b03918216600482015269d3c21bcecceda10000006024820152911692506340c10f199150604401600060405180830381600087803b1580156103ea57600080fd5b505af11580156103fe573d6000803e3d6000fd5b5050600a5460405163095ea7b360e01b81526001600160a01b03909116600482018190526000196024830152925063095ea7b391506044016020604051808303816000875af1158015610455573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104799190610bb4565b50600954600b5460405163ca669fa760e01b81526001600160a01b03918216600482015291169063ca669fa790602401600060405180830381600087803b1580156104c357600080fd5b505af11580156104d7573d6000803e3d6000fd5b5050600a5460405163095ea7b360e01b81526001600160a01b03909116600482018190526000196024830152925063095ea7b391506044016020604051808303816000875af115801561052e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105529190610bb4565b50600954600c5460405163ca669fa760e01b81526001600160a01b03918216600482015291169063ca669fa790602401600060405180830381600087803b15801561059c57600080fd5b505af11580156105b0573d6000803e3d6000fd5b5050600a5460405163095ea7b360e01b81526001600160a01b03909116600482018190526000196024830152925063095ea7b391506044016020604051808303816000875af1158015610607573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062b9190610bb4565b50565b60008054610100900460ff161561064e5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156107545760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916106dc917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610c0d565b60408051601f19818403018152908290526106f691610c3e565b6000604051808303816000865af19150503d8060008114610733576040519150601f19603f3d011682016040523d82523d6000602084013e610738565b606091505b50915050808060200190518101906107509190610bb4565b9150505b919050565b600854604080516371faa0f760e11b81526004810191909152601d60448201527f77696c6c20455448206265206f76657220316b20746f6d6f72726f773f00000060648201526103e860248201526001600160a01b039091169063e3f541ee90608401600060405180830381600087803b1580156107d657600080fd5b505af11580156107ea573d6000803e3d6000fd5b50506008546040805163cc3b43b160e01b81526004810191909152601d60448201527f77696c6c20455448206265206f76657220316b20746f6d6f72726f773f00000060648201526103e86024820152600093506001600160a01b03909116915063c6844d0690829063cc3b43b190608401602060405180830381865afa158015610879573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089d9190610c5a565b6040518263ffffffff1660e01b81526004016108bb91815260200190565b600060405180830381865afa1580156108d8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109009190810190610cf2565b905061062b81600001516040518060400160405280601d81526020017f77696c6c20455448206265206f76657220316b20746f6d6f72726f773f000000815250806040516020016109519190610c3e565b60405160208183030381529060405280519060200120826040516020016109789190610c3e565b6040516020818303038152906040528051906020012014610a7d577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516109ff9060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051610a369190610e07565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358382604051610a6d9190610e3b565b60405180910390a1610a7d610a81565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610b7c5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052610b1b9291602001610c0d565b60408051601f1981840301815290829052610b3591610c3e565b6000604051808303816000865af19150503d8060008114610b72576040519150601f19603f3d011682016040523d82523d6000602084013e610b77565b606091505b505050505b6000805461ff001916610100179055565b610a9580610e7083390190565b610c888061190583390190565b61040a8061258d83390190565b600060208284031215610bc657600080fd5b81518015158114610bd657600080fd5b9392505050565b60005b83811015610bf8578181015183820152602001610be0565b83811115610c07576000848401525b50505050565b6001600160e01b0319831681528151600090610c30816004850160208701610bdd565b919091016004019392505050565b60008251610c50818460208701610bdd565b9190910192915050565b600060208284031215610c6c57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715610cac57610cac610c73565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610cdb57610cdb610c73565b604052919050565b80516003811061075457600080fd5b60006020808385031215610d0557600080fd5b825167ffffffffffffffff80821115610d1d57600080fd5b9084019060808287031215610d3157600080fd5b610d39610c89565b825182811115610d4857600080fd5b8301601f81018813610d5957600080fd5b805183811115610d6b57610d6b610c73565b610d7d601f8201601f19168701610cb2565b93508084528886828401011115610d9357600080fd5b610da281878601888501610bdd565b50508181528383015184820152610dbb60408401610ce3565b6040820152610dcc60608401610ce3565b60608201529695505050505050565b60008151808452610df3816020860160208601610bdd565b601f01601f19169290920160200192915050565b60408152600a6040820152690808115e1c1958dd195960b21b6060820152608060208201526000610bd66080830184610ddb565b60408152600a604082015269080808081058dd1d585b60b21b6060820152608060208201526000610bd66080830184610ddb56fe608060405234801561001057600080fd5b506040805180820182526004808252634f50544960e01b60208084018281528551808701909652928552840152815191929161004e9160039161006a565b50805161006290600490602084019061006a565b50505061013d565b82805461007690610103565b90600052602060002090601f01602090048101928261009857600085556100de565b82601f106100b157805160ff19168380011785556100de565b828001600101855582156100de579182015b828111156100de5782518255916020019190600101906100c3565b506100ea9291506100ee565b5090565b5b808211156100ea57600081556001016100ef565b600181811c9082168061011757607f821691505b60208210810361013757634e487b7160e01b600052602260045260246000fd5b50919050565b6109498061014c6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461014157806370a082311461015657806395d89b411461017f578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101c0565b6040516100ce9190610787565b60405180910390f35b6100ea6100e53660046107f8565b610252565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a366004610822565b61026a565b604051601281526020016100ce565b6100ea61013c3660046107f8565b61028e565b61015461014f3660046107f8565b6102b0565b005b6100fe61016436600461085e565b6001600160a01b031660009081526020819052604090205490565b6100c16102be565b6100ea6101953660046107f8565b6102cd565b6100ea6101a83660046107f8565b61034d565b6100fe6101bb366004610880565b61035b565b6060600380546101cf906108b3565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb906108b3565b80156102485780601f1061021d57610100808354040283529160200191610248565b820191906000526020600020905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b600033610260818585610386565b5060019392505050565b6000336102788582856104aa565b610283858585610524565b506001949350505050565b6000336102608185856102a1838361035b565b6102ab91906108ed565b610386565b6102ba82826106c8565b5050565b6060600480546101cf906108b3565b600033816102db828661035b565b9050838110156103405760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102838286868403610386565b600033610260818585610524565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103e85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610337565b6001600160a01b0382166104495760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610337565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104b6848461035b565b9050600019811461051e57818110156105115760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610337565b61051e8484848403610386565b50505050565b6001600160a01b0383166105885760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610337565b6001600160a01b0382166105ea5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610337565b6001600160a01b038316600090815260208190526040902054818110156106625760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610337565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361051e565b6001600160a01b03821661071e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610337565b806002600082825461073091906108ed565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b818110156107b457858101830151858201604001528201610798565b818111156107c6576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146107f357600080fd5b919050565b6000806040838503121561080b57600080fd5b610814836107dc565b946020939093013593505050565b60008060006060848603121561083757600080fd5b610840846107dc565b925061084e602085016107dc565b9150604084013590509250925092565b60006020828403121561087057600080fd5b610879826107dc565b9392505050565b6000806040838503121561089357600080fd5b61089c836107dc565b91506108aa602084016107dc565b90509250929050565b600181811c908216806108c757607f821691505b6020821081036108e757634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561090e57634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212202befb42b7eb71f065c73653187486c60b319381473d4b3e2f05d98b55a62737064736f6c634300080d0033608060405234801561001057600080fd5b50604051610c88380380610c8883398101604081905261002f91610068565b600380546001600160a01b0319166001600160a01b0392909216919091179055683635c9adc5dea0000060045562015180600555610098565b60006020828403121561007a57600080fd5b81516001600160a01b038116811461009157600080fd5b9392505050565b610be1806100a76000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063c6844d0611610071578063c6844d0614610122578063cc3b43b114610142578063df6d798b14610155578063e3f541ee146101b4578063e5a6b10f146101c7578063ed3dccaa146101f257600080fd5b8063369431ef146100ae5780634c8714bf146100da5780636af97c05146100ef578063a5bbe22b14610102578063bcacc70a14610119575b600080fd5b6100c16100bc3660046108da565b61021b565b6040516100d19493929190610977565b60405180910390f35b6100ed6100e83660046109b9565b6102d2565b005b6100ed6100fd3660046108da565b61047e565b61010b60055481565b6040519081526020016100d1565b61010b60045481565b6101356101303660046108da565b6105cc565b6040516100d191906109db565b61010b610150366004610a4c565b6106f9565b61018f6101633660046108da565b60016020819052600091825260409091208054918101546002909101546001600160a01b039092169183565b604080516001600160a01b0390941684526020840192909252908201526060016100d1565b6100ed6101c2366004610a4c565b61072c565b6003546101da906001600160a01b031681565b6040516001600160a01b0390911681526020016100d1565b6101da6102003660046108da565b6002602052600090815260409020546001600160a01b031681565b60006020819052908152604090208054819061023690610b01565b80601f016020809104026020016040519081016040528092919081815260200182805461026290610b01565b80156102af5780601f10610284576101008083540402835291602001916102af565b820191906000526020600020905b81548152906001019060200180831161029257829003601f168201915b50505050600183015460029093015491929160ff80821692506101009091041684565b6000828152602081905260409020600181015442101561032d5760405162461bcd60e51b81526020600482015260116024820152704e6f74207965742061742065787069727960781b60448201526064015b60405180910390fd5b600060028083015460ff169081111561034857610348610940565b146103955760405162461bcd60e51b815260206004820181905260248201527f5175657374696f6e20616c7265616479206861766520612070726f706f73616c6044820152606401610324565b60408051606081018252338152602080820185815242838501908152600088815260019384905294909420925183546001600160a01b0319166001600160a01b03909116178355518282015591516002918201558201805460ff191682800217905550600354600480546040516323b872dd60e01b8152339281019290925230602483015260448201526001600160a01b03909116906323b872dd906064015b6020604051808303816000875af1158015610454573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104789190610b3b565b50505050565b6000818152602081905260409020600160028083015460ff16908111156104a7576104a7610940565b146104f45760405162461bcd60e51b815260206004820152601b60248201527f5175657374696f6e2063616e6e6f7420626520646973707574656400000000006044820152606401610324565b600082815260016020526040902060028101546005546105149042610b64565b106105575760405162461bcd60e51b8152602060048201526013602482015272746f6f206c61746520746f206469737075746560681b6044820152606401610324565b6002828101805460ff191682179055600084815260209190915260409081902080546001600160a01b031916339081179091556003546004805493516323b872dd60e01b81529081019290925230602483015260448201929092526001600160a01b03909116906323b872dd90606401610435565b6105d4610809565b600082815260208190526040908190208151608081019092528054829082906105fc90610b01565b80601f016020809104026020016040519081016040528092919081815260200182805461062890610b01565b80156106755780601f1061064a57610100808354040283529160200191610675565b820191906000526020600020905b81548152906001019060200180831161065857829003601f168201915b50505091835250506001820154602082015260028083015460409092019160ff16908111156106a6576106a6610940565b60028111156106b7576106b7610940565b81526020016002820160019054906101000a900460ff1660028111156106df576106df610940565b60028111156106f0576106f0610940565b90525092915050565b6000828260405160200161070e929190610b89565b60405160208183030381529060405280519060200120905092915050565b600061073883836106f9565b9050600060405180608001604052808581526020018481526020016000600281111561076657610766610940565b815260200160009052600083815260208181526040909120825180519394508493919261079892849290910190610841565b506020820151816001015560408201518160020160006101000a81548160ff021916908360028111156107cd576107cd610940565b021790555060608201518160020160016101000a81548160ff021916908360028111156107fc576107fc610940565b0217905550505050505050565b604051806080016040528060608152602001600081526020016000600281111561083557610835610940565b81526020016000905290565b82805461084d90610b01565b90600052602060002090601f01602090048101928261086f57600085556108b5565b82601f1061088857805160ff19168380011785556108b5565b828001600101855582156108b5579182015b828111156108b557825182559160200191906001019061089a565b506108c19291506108c5565b5090565b5b808211156108c157600081556001016108c6565b6000602082840312156108ec57600080fd5b5035919050565b6000815180845260005b81811015610919576020818501810151868301820152016108fd565b8181111561092b576000602083870101525b50601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b6003811061097457634e487b7160e01b600052602160045260246000fd5b50565b60808152600061098a60808301876108f3565b905084602083015261099b84610956565b8360408301526109aa83610956565b82606083015295945050505050565b600080604083850312156109cc57600080fd5b50508035926020909101359150565b6020815260008251608060208401526109f760a08401826108f3565b9050602084015160408401526040840151610a1181610956565b806060850152506060840151610a2681610956565b6080939093019290925250919050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610a5f57600080fd5b823567ffffffffffffffff80821115610a7757600080fd5b818501915085601f830112610a8b57600080fd5b813581811115610a9d57610a9d610a36565b604051601f8201601f19908116603f01168101908382118183101715610ac557610ac5610a36565b81604052828152886020848701011115610ade57600080fd5b826020860160208301376000602093820184015298969091013596505050505050565b600181811c90821680610b1557607f821691505b602082108103610b3557634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610b4d57600080fd5b81518015158114610b5d57600080fd5b9392505050565b600082821015610b8457634e487b7160e01b600052601160045260246000fd5b500390565b604081526000610b9c60408301856108f3565b9050826020830152939250505056fea26469706673582212201808b6da4a89051419b6f84dc627b34dd876761aff62689064e79f91c931888f64736f6c634300080d0033608060405234801561001057600080fd5b506103ea806100206000396000f3fe6080604052600436106100385760003560e01c806301ffc9a714610044578063bc197c8114610079578063f23a6e61146100be57600080fd5b3661003f57005b600080fd5b34801561005057600080fd5b5061006461005f366004610121565b6100ea565b60405190151581526020015b60405180910390f35b34801561008557600080fd5b506100a56100943660046102a5565b63bc197c8160e01b95945050505050565b6040516001600160e01b03199091168152602001610070565b3480156100ca57600080fd5b506100a56100d936600461034f565b63f23a6e6160e01b95945050505050565b60006001600160e01b03198216630271189760e51b148061011b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006020828403121561013357600080fd5b81356001600160e01b03198116811461014b57600080fd5b9392505050565b80356001600160a01b038116811461016957600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156101ad576101ad61016e565b604052919050565b600082601f8301126101c657600080fd5b8135602067ffffffffffffffff8211156101e2576101e261016e565b8160051b6101f1828201610184565b928352848101820192828101908785111561020b57600080fd5b83870192505b8483101561022a57823582529183019190830190610211565b979650505050505050565b600082601f83011261024657600080fd5b813567ffffffffffffffff8111156102605761026061016e565b610273601f8201601f1916602001610184565b81815284602083860101111561028857600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156102bd57600080fd5b6102c686610152565b94506102d460208701610152565b9350604086013567ffffffffffffffff808211156102f157600080fd5b6102fd89838a016101b5565b9450606088013591508082111561031357600080fd5b61031f89838a016101b5565b9350608088013591508082111561033557600080fd5b5061034288828901610235565b9150509295509295909350565b600080600080600060a0868803121561036757600080fd5b61037086610152565b945061037e60208701610152565b93506040860135925060608601359150608086013567ffffffffffffffff8111156103a857600080fd5b6103428882890161023556fea26469706673582212205b6bc27a6372e76676cebb3676436c93d22f747956be74d33ee15acfe05fd31264736f6c634300080d0033a26469706673582212200d527439b733317d5bba2f287113ff14cd84a1930c9e4c601894eb1302af549e64736f6c634300080d0033",
    "sourceMap": "437:1203:19:-:0;;;1572:26:0;;;-1:-1:-1;;170:28:1;;;;;437:1203:19;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80630a9254e4146100675780633a76846314610071578063ba414fa6146100a9578063db861b6c146100c1578063f8ccbf47146100c9578063fa7626d4146100dc575b600080fd5b61006f6100e9565b005b61008c737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b161062e565b60405190151581526020016100a0565b61006f610759565b6000546100b19062010000900460ff1681565b6000546100b19060ff1681565b600980546001600160a01b031916737109709ecfa91a80626ff3989d68f67f5b1dd12d17905560405161011b90610b8d565b604051809103906000f080158015610137573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b0392909216918217905560405161016390610b9a565b6001600160a01b039091168152602001604051809103906000f08015801561018f573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b03929092169190911790556040516101bc90610ba7565b604051809103906000f0801580156101d8573d6000803e3d6000fd5b50600b80546001600160a01b0319166001600160a01b039290921691909117905560405161020590610ba7565b604051809103906000f080158015610221573d6000803e3d6000fd5b50600c80546001600160a01b0319166001600160a01b03928316179055600b54604051911690600090683635c9adc5dea000009082818181858883f19350505050158015610273573d6000803e3d6000fd5b50600c546040516001600160a01b0390911690600090683635c9adc5dea000009082818181858883f193505050501580156102b2573d6000803e3d6000fd5b50600a546040516340c10f1960e01b815230600482015269d3c21bcecceda100000060248201526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561030857600080fd5b505af115801561031c573d6000803e3d6000fd5b5050600a54600b546040516340c10f1960e01b81526001600160a01b03918216600482015269d3c21bcecceda10000006024820152911692506340c10f199150604401600060405180830381600087803b15801561037957600080fd5b505af115801561038d573d6000803e3d6000fd5b5050600a54600c546040516340c10f1960e01b81526001600160a01b03918216600482015269d3c21bcecceda10000006024820152911692506340c10f199150604401600060405180830381600087803b1580156103ea57600080fd5b505af11580156103fe573d6000803e3d6000fd5b5050600a5460405163095ea7b360e01b81526001600160a01b03909116600482018190526000196024830152925063095ea7b391506044016020604051808303816000875af1158015610455573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104799190610bb4565b50600954600b5460405163ca669fa760e01b81526001600160a01b03918216600482015291169063ca669fa790602401600060405180830381600087803b1580156104c357600080fd5b505af11580156104d7573d6000803e3d6000fd5b5050600a5460405163095ea7b360e01b81526001600160a01b03909116600482018190526000196024830152925063095ea7b391506044016020604051808303816000875af115801561052e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105529190610bb4565b50600954600c5460405163ca669fa760e01b81526001600160a01b03918216600482015291169063ca669fa790602401600060405180830381600087803b15801561059c57600080fd5b505af11580156105b0573d6000803e3d6000fd5b5050600a5460405163095ea7b360e01b81526001600160a01b03909116600482018190526000196024830152925063095ea7b391506044016020604051808303816000875af1158015610607573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062b9190610bb4565b50565b60008054610100900460ff161561064e5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156107545760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916106dc917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610c0d565b60408051601f19818403018152908290526106f691610c3e565b6000604051808303816000865af19150503d8060008114610733576040519150601f19603f3d011682016040523d82523d6000602084013e610738565b606091505b50915050808060200190518101906107509190610bb4565b9150505b919050565b600854604080516371faa0f760e11b81526004810191909152601d60448201527f77696c6c20455448206265206f76657220316b20746f6d6f72726f773f00000060648201526103e860248201526001600160a01b039091169063e3f541ee90608401600060405180830381600087803b1580156107d657600080fd5b505af11580156107ea573d6000803e3d6000fd5b50506008546040805163cc3b43b160e01b81526004810191909152601d60448201527f77696c6c20455448206265206f76657220316b20746f6d6f72726f773f00000060648201526103e86024820152600093506001600160a01b03909116915063c6844d0690829063cc3b43b190608401602060405180830381865afa158015610879573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089d9190610c5a565b6040518263ffffffff1660e01b81526004016108bb91815260200190565b600060405180830381865afa1580156108d8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109009190810190610cf2565b905061062b81600001516040518060400160405280601d81526020017f77696c6c20455448206265206f76657220316b20746f6d6f72726f773f000000815250806040516020016109519190610c3e565b60405160208183030381529060405280519060200120826040516020016109789190610c3e565b6040516020818303038152906040528051906020012014610a7d577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516109ff9060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051610a369190610e07565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358382604051610a6d9190610e3b565b60405180910390a1610a7d610a81565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610b7c5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052610b1b9291602001610c0d565b60408051601f1981840301815290829052610b3591610c3e565b6000604051808303816000865af19150503d8060008114610b72576040519150601f19603f3d011682016040523d82523d6000602084013e610b77565b606091505b505050505b6000805461ff001916610100179055565b610a9580610e7083390190565b610c888061190583390190565b61040a8061258d83390190565b600060208284031215610bc657600080fd5b81518015158114610bd657600080fd5b9392505050565b60005b83811015610bf8578181015183820152602001610be0565b83811115610c07576000848401525b50505050565b6001600160e01b0319831681528151600090610c30816004850160208701610bdd565b919091016004019392505050565b60008251610c50818460208701610bdd565b9190910192915050565b600060208284031215610c6c57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715610cac57610cac610c73565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610cdb57610cdb610c73565b604052919050565b80516003811061075457600080fd5b60006020808385031215610d0557600080fd5b825167ffffffffffffffff80821115610d1d57600080fd5b9084019060808287031215610d3157600080fd5b610d39610c89565b825182811115610d4857600080fd5b8301601f81018813610d5957600080fd5b805183811115610d6b57610d6b610c73565b610d7d601f8201601f19168701610cb2565b93508084528886828401011115610d9357600080fd5b610da281878601888501610bdd565b50508181528383015184820152610dbb60408401610ce3565b6040820152610dcc60608401610ce3565b60608201529695505050505050565b60008151808452610df3816020860160208601610bdd565b601f01601f19169290920160200192915050565b60408152600a6040820152690808115e1c1958dd195960b21b6060820152608060208201526000610bd66080830184610ddb565b60408152600a604082015269080808081058dd1d585b60b21b6060820152608060208201526000610bd66080830184610ddb56fe608060405234801561001057600080fd5b506040805180820182526004808252634f50544960e01b60208084018281528551808701909652928552840152815191929161004e9160039161006a565b50805161006290600490602084019061006a565b50505061013d565b82805461007690610103565b90600052602060002090601f01602090048101928261009857600085556100de565b82601f106100b157805160ff19168380011785556100de565b828001600101855582156100de579182015b828111156100de5782518255916020019190600101906100c3565b506100ea9291506100ee565b5090565b5b808211156100ea57600081556001016100ef565b600181811c9082168061011757607f821691505b60208210810361013757634e487b7160e01b600052602260045260246000fd5b50919050565b6109498061014c6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461014157806370a082311461015657806395d89b411461017f578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101c0565b6040516100ce9190610787565b60405180910390f35b6100ea6100e53660046107f8565b610252565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a366004610822565b61026a565b604051601281526020016100ce565b6100ea61013c3660046107f8565b61028e565b61015461014f3660046107f8565b6102b0565b005b6100fe61016436600461085e565b6001600160a01b031660009081526020819052604090205490565b6100c16102be565b6100ea6101953660046107f8565b6102cd565b6100ea6101a83660046107f8565b61034d565b6100fe6101bb366004610880565b61035b565b6060600380546101cf906108b3565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb906108b3565b80156102485780601f1061021d57610100808354040283529160200191610248565b820191906000526020600020905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b600033610260818585610386565b5060019392505050565b6000336102788582856104aa565b610283858585610524565b506001949350505050565b6000336102608185856102a1838361035b565b6102ab91906108ed565b610386565b6102ba82826106c8565b5050565b6060600480546101cf906108b3565b600033816102db828661035b565b9050838110156103405760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102838286868403610386565b600033610260818585610524565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103e85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610337565b6001600160a01b0382166104495760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610337565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104b6848461035b565b9050600019811461051e57818110156105115760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610337565b61051e8484848403610386565b50505050565b6001600160a01b0383166105885760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610337565b6001600160a01b0382166105ea5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610337565b6001600160a01b038316600090815260208190526040902054818110156106625760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610337565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361051e565b6001600160a01b03821661071e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610337565b806002600082825461073091906108ed565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b818110156107b457858101830151858201604001528201610798565b818111156107c6576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146107f357600080fd5b919050565b6000806040838503121561080b57600080fd5b610814836107dc565b946020939093013593505050565b60008060006060848603121561083757600080fd5b610840846107dc565b925061084e602085016107dc565b9150604084013590509250925092565b60006020828403121561087057600080fd5b610879826107dc565b9392505050565b6000806040838503121561089357600080fd5b61089c836107dc565b91506108aa602084016107dc565b90509250929050565b600181811c908216806108c757607f821691505b6020821081036108e757634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561090e57634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212202befb42b7eb71f065c73653187486c60b319381473d4b3e2f05d98b55a62737064736f6c634300080d0033608060405234801561001057600080fd5b50604051610c88380380610c8883398101604081905261002f91610068565b600380546001600160a01b0319166001600160a01b0392909216919091179055683635c9adc5dea0000060045562015180600555610098565b60006020828403121561007a57600080fd5b81516001600160a01b038116811461009157600080fd5b9392505050565b610be1806100a76000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063c6844d0611610071578063c6844d0614610122578063cc3b43b114610142578063df6d798b14610155578063e3f541ee146101b4578063e5a6b10f146101c7578063ed3dccaa146101f257600080fd5b8063369431ef146100ae5780634c8714bf146100da5780636af97c05146100ef578063a5bbe22b14610102578063bcacc70a14610119575b600080fd5b6100c16100bc3660046108da565b61021b565b6040516100d19493929190610977565b60405180910390f35b6100ed6100e83660046109b9565b6102d2565b005b6100ed6100fd3660046108da565b61047e565b61010b60055481565b6040519081526020016100d1565b61010b60045481565b6101356101303660046108da565b6105cc565b6040516100d191906109db565b61010b610150366004610a4c565b6106f9565b61018f6101633660046108da565b60016020819052600091825260409091208054918101546002909101546001600160a01b039092169183565b604080516001600160a01b0390941684526020840192909252908201526060016100d1565b6100ed6101c2366004610a4c565b61072c565b6003546101da906001600160a01b031681565b6040516001600160a01b0390911681526020016100d1565b6101da6102003660046108da565b6002602052600090815260409020546001600160a01b031681565b60006020819052908152604090208054819061023690610b01565b80601f016020809104026020016040519081016040528092919081815260200182805461026290610b01565b80156102af5780601f10610284576101008083540402835291602001916102af565b820191906000526020600020905b81548152906001019060200180831161029257829003601f168201915b50505050600183015460029093015491929160ff80821692506101009091041684565b6000828152602081905260409020600181015442101561032d5760405162461bcd60e51b81526020600482015260116024820152704e6f74207965742061742065787069727960781b60448201526064015b60405180910390fd5b600060028083015460ff169081111561034857610348610940565b146103955760405162461bcd60e51b815260206004820181905260248201527f5175657374696f6e20616c7265616479206861766520612070726f706f73616c6044820152606401610324565b60408051606081018252338152602080820185815242838501908152600088815260019384905294909420925183546001600160a01b0319166001600160a01b03909116178355518282015591516002918201558201805460ff191682800217905550600354600480546040516323b872dd60e01b8152339281019290925230602483015260448201526001600160a01b03909116906323b872dd906064015b6020604051808303816000875af1158015610454573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104789190610b3b565b50505050565b6000818152602081905260409020600160028083015460ff16908111156104a7576104a7610940565b146104f45760405162461bcd60e51b815260206004820152601b60248201527f5175657374696f6e2063616e6e6f7420626520646973707574656400000000006044820152606401610324565b600082815260016020526040902060028101546005546105149042610b64565b106105575760405162461bcd60e51b8152602060048201526013602482015272746f6f206c61746520746f206469737075746560681b6044820152606401610324565b6002828101805460ff191682179055600084815260209190915260409081902080546001600160a01b031916339081179091556003546004805493516323b872dd60e01b81529081019290925230602483015260448201929092526001600160a01b03909116906323b872dd90606401610435565b6105d4610809565b600082815260208190526040908190208151608081019092528054829082906105fc90610b01565b80601f016020809104026020016040519081016040528092919081815260200182805461062890610b01565b80156106755780601f1061064a57610100808354040283529160200191610675565b820191906000526020600020905b81548152906001019060200180831161065857829003601f168201915b50505091835250506001820154602082015260028083015460409092019160ff16908111156106a6576106a6610940565b60028111156106b7576106b7610940565b81526020016002820160019054906101000a900460ff1660028111156106df576106df610940565b60028111156106f0576106f0610940565b90525092915050565b6000828260405160200161070e929190610b89565b60405160208183030381529060405280519060200120905092915050565b600061073883836106f9565b9050600060405180608001604052808581526020018481526020016000600281111561076657610766610940565b815260200160009052600083815260208181526040909120825180519394508493919261079892849290910190610841565b506020820151816001015560408201518160020160006101000a81548160ff021916908360028111156107cd576107cd610940565b021790555060608201518160020160016101000a81548160ff021916908360028111156107fc576107fc610940565b0217905550505050505050565b604051806080016040528060608152602001600081526020016000600281111561083557610835610940565b81526020016000905290565b82805461084d90610b01565b90600052602060002090601f01602090048101928261086f57600085556108b5565b82601f1061088857805160ff19168380011785556108b5565b828001600101855582156108b5579182015b828111156108b557825182559160200191906001019061089a565b506108c19291506108c5565b5090565b5b808211156108c157600081556001016108c6565b6000602082840312156108ec57600080fd5b5035919050565b6000815180845260005b81811015610919576020818501810151868301820152016108fd565b8181111561092b576000602083870101525b50601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b6003811061097457634e487b7160e01b600052602160045260246000fd5b50565b60808152600061098a60808301876108f3565b905084602083015261099b84610956565b8360408301526109aa83610956565b82606083015295945050505050565b600080604083850312156109cc57600080fd5b50508035926020909101359150565b6020815260008251608060208401526109f760a08401826108f3565b9050602084015160408401526040840151610a1181610956565b806060850152506060840151610a2681610956565b6080939093019290925250919050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610a5f57600080fd5b823567ffffffffffffffff80821115610a7757600080fd5b818501915085601f830112610a8b57600080fd5b813581811115610a9d57610a9d610a36565b604051601f8201601f19908116603f01168101908382118183101715610ac557610ac5610a36565b81604052828152886020848701011115610ade57600080fd5b826020860160208301376000602093820184015298969091013596505050505050565b600181811c90821680610b1557607f821691505b602082108103610b3557634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610b4d57600080fd5b81518015158114610b5d57600080fd5b9392505050565b600082821015610b8457634e487b7160e01b600052601160045260246000fd5b500390565b604081526000610b9c60408301856108f3565b9050826020830152939250505056fea26469706673582212201808b6da4a89051419b6f84dc627b34dd876761aff62689064e79f91c931888f64736f6c634300080d0033608060405234801561001057600080fd5b506103ea806100206000396000f3fe6080604052600436106100385760003560e01c806301ffc9a714610044578063bc197c8114610079578063f23a6e61146100be57600080fd5b3661003f57005b600080fd5b34801561005057600080fd5b5061006461005f366004610121565b6100ea565b60405190151581526020015b60405180910390f35b34801561008557600080fd5b506100a56100943660046102a5565b63bc197c8160e01b95945050505050565b6040516001600160e01b03199091168152602001610070565b3480156100ca57600080fd5b506100a56100d936600461034f565b63f23a6e6160e01b95945050505050565b60006001600160e01b03198216630271189760e51b148061011b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006020828403121561013357600080fd5b81356001600160e01b03198116811461014b57600080fd5b9392505050565b80356001600160a01b038116811461016957600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156101ad576101ad61016e565b604052919050565b600082601f8301126101c657600080fd5b8135602067ffffffffffffffff8211156101e2576101e261016e565b8160051b6101f1828201610184565b928352848101820192828101908785111561020b57600080fd5b83870192505b8483101561022a57823582529183019190830190610211565b979650505050505050565b600082601f83011261024657600080fd5b813567ffffffffffffffff8111156102605761026061016e565b610273601f8201601f1916602001610184565b81815284602083860101111561028857600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156102bd57600080fd5b6102c686610152565b94506102d460208701610152565b9350604086013567ffffffffffffffff808211156102f157600080fd5b6102fd89838a016101b5565b9450606088013591508082111561031357600080fd5b61031f89838a016101b5565b9350608088013591508082111561033557600080fd5b5061034288828901610235565b9150509295509295909350565b600080600080600060a0868803121561036757600080fd5b61037086610152565b945061037e60208701610152565b93506040860135925060608601359150608086013567ffffffffffffffff8111156103a857600080fd5b6103428882890161023556fea26469706673582212205b6bc27a6372e76676cebb3676436c93d22f747956be74d33ee15acfe05fd31264736f6c634300080d0033a26469706673582212200d527439b733317d5bba2f287113ff14cd84a1930c9e4c601894eb1302af549e64736f6c634300080d0033",
    "sourceMap": "437:1203:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;627:690;;;:::i;:::-;;321:38:1;;250:64;321:38;;;;;-1:-1:-1;;;;;189:32:22;;;171:51;;159:2;144:18;321:38:1;;;;;;;;1819:584:0;;;:::i;:::-;;;398:14:22;;391:22;373:41;;361:2;346:18;1819:584:0;233:187:22;1323:315:19;;;:::i;170:28:1:-;;;;;;;;;;;;1572:26:0;;;;;;;;;627:690:19;661:6;:33;;-1:-1:-1;;;;;;661:33:19;1671:64:0;661:33:19;;;711:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;704:4:19;:17;;-1:-1:-1;;;;;;704:17:19;-1:-1:-1;;;;;704:17:19;;;;;;;;;736:35;;;;;:::i;:::-;-1:-1:-1;;;;;189:32:22;;;171:51;;159:2;144:18;736:35:19;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;731:2:19;:40;;-1:-1:-1;;;;;;731:40:19;-1:-1:-1;;;;;731:40:19;;;;;;;;;;797:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;781:5:19;:36;;-1:-1:-1;;;;;;781:36:19;-1:-1:-1;;;;;781:36:19;;;;;;;;;;841:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;827:3:19;:34;;-1:-1:-1;;;;;;827:34:19;-1:-1:-1;;;;;827:34:19;;;;;;879:5;;871:35;;879:5;;;-1:-1:-1;;895:10:19;;-1:-1:-1;871:35:19;-1:-1:-1;871:35:19;895:10;879:5;-1:-1:-1;871:35:19;;;;;;;;;;;;;;;;;;;-1:-1:-1;924:3:19;;916:33;;-1:-1:-1;;;;;924:3:19;;;;;;938:10;;924:3;916:33;924:3;916:33;938:10;924:3;;916:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;960:4:19;;:41;;-1:-1:-1;;;960:41:19;;978:4;960:41;;;839:51:22;985:15:19;906:18:22;;;899:34;-1:-1:-1;;;;;960:4:19;;;;:9;;812:18:22;;960:41:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1011:4:19;;1021:5;;1011:33;;-1:-1:-1;;;1011:33:19;;-1:-1:-1;;;;;1021:5:19;;;1011:33;;;839:51:22;1028:15:19;906:18:22;;;899:34;1011:4:19;;;-1:-1:-1;1011:9:19;;-1:-1:-1;812:18:22;;1011:33:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1054:4:19;;1064:3;;1054:31;;-1:-1:-1;;;1054:31:19;;-1:-1:-1;;;;;1064:3:19;;;1054:31;;;839:51:22;1069:15:19;906:18:22;;;899:34;1054:4:19;;;-1:-1:-1;1054:9:19;;-1:-1:-1;812:18:22;;1054:31:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1096:4:19;;:46;;-1:-1:-1;;;1096:46:19;;-1:-1:-1;;;;;1096:4:19;;;:46;;;839:51:22;;;-1:-1:-1;;906:18:22;;;899:34;1096:4:19;-1:-1:-1;1096:12:19;;-1:-1:-1;812:18:22;;1096:46:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1152:6:19;;1165:5;;1152:19;;-1:-1:-1;;;1152:19:19;;-1:-1:-1;;;;;1165:5:19;;;1152:19;;;171:51:22;1152:6:19;;;:12;;144:18:22;;1152:19:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1181:4:19;;:46;;-1:-1:-1;;;1181:46:19;;-1:-1:-1;;;;;1181:4:19;;;:46;;;839:51:22;;;-1:-1:-1;;906:18:22;;;899:34;1181:4:19;-1:-1:-1;1181:12:19;;-1:-1:-1;812:18:22;;1181:46:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1237:6:19;;1250:3;;1237:17;;-1:-1:-1;;;1237:17:19;;-1:-1:-1;;;;;1250:3:19;;;1237:17;;;171:51:22;1237:6:19;;;:12;;144:18:22;;1237:17:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1264:4:19;;:46;;-1:-1:-1;;;1264:46:19;;-1:-1:-1;;;;;1264:4:19;;;:46;;;839:51:22;;;-1:-1:-1;;906:18:22;;;899:34;1264:4:19;-1:-1:-1;1264:12:19;;-1:-1:-1;812:18:22;;1264:46:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;627:690::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;839:51:22;;;-1:-1:-1;;;906:18:22;;;899:34;2196:43:0;;;;;;;;;812:18:22;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;1323:315:19:-;1367:2;;:53;;;-1:-1:-1;;;1367:53:19;;;;;2925:21:22;;;;2982:2;2962:18;;;2955:30;3021:31;3001:18;;;2994:59;1415:4:19;3105:20:22;;;3098:36;-1:-1:-1;;;;;1367:2:19;;;;:14;;3070:19:22;;1367:53:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1457:2:19;;1489:55;;;-1:-1:-1;;;1489:55:19;;;;;2925:21:22;;;;2982:2;2962:18;;;2955:30;3021:31;3001:18;;;2994:59;1539:4:19;3105:20:22;;;3098:36;1430:24:19;;-1:-1:-1;;;;;;1457:2:19;;;;-1:-1:-1;1457:18:19;;:2;;1489:16;;3070:19:22;;1489:55:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1457:97;;;;;;;;;;;;;3480:25:22;;3468:2;3453:18;;3334:177;1457:97:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1457:97:19;;;;;;;;;;;;:::i;:::-;1430:124;;1565:66;1574:8;:23;;;1565:66;;;;;;;;;;;;;;;;;14824:1:0;14807:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14797:30;;;;;;14790:1;14773:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14763:30;;;;;;:64;14759:267;;14848:43;;;;;6024:2:22;6006:21;;;6063:2;6043:18;;;6036:30;6102:34;6097:2;6082:18;;6075:62;-1:-1:-1;;;6168:2:22;6153:18;;6146:34;6212:3;6197:19;;5822:400;14848:43:0;;;;;;;;14910:33;14941:1;14910:33;;;;;;:::i;:::-;;;;;;;;14962;14993:1;14962:33;;;;;;:::i;:::-;;;;;;;;15009:6;:4;:6::i;:::-;14688:344;;:::o;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;7606:51:22;;;-1:-1:-1;;;7673:18:22;;;7666:34;;;;2705:4:0;7716:18:22;;;7709:34;2482:11:0;;1671:64;2579:43;;7579:18:22;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;1223:277:22:-;1290:6;1343:2;1331:9;1322:7;1318:23;1314:32;1311:52;;;1359:1;1356;1349:12;1311:52;1391:9;1385:16;1444:5;1437:13;1430:21;1423:5;1420:32;1410:60;;1466:1;1463;1456:12;1410:60;1489:5;1223:277;-1:-1:-1;;;1223:277:22:o;1784:258::-;1856:1;1866:113;1880:6;1877:1;1874:13;1866:113;;;1956:11;;;1950:18;1937:11;;;1930:39;1902:2;1895:10;1866:113;;;1997:6;1994:1;1991:13;1988:48;;;2032:1;2023:6;2018:3;2014:16;2007:27;1988:48;;1784:258;;;:::o;2047:371::-;-1:-1:-1;;;;;;2232:33:22;;2220:46;;2289:13;;2202:3;;2311:61;2289:13;2361:1;2352:11;;2345:4;2333:17;;2311:61;:::i;:::-;2392:16;;;;2410:1;2388:24;;2047:371;-1:-1:-1;;;2047:371:22:o;2423:274::-;2552:3;2590:6;2584:13;2606:53;2652:6;2647:3;2640:4;2632:6;2628:17;2606:53;:::i;:::-;2675:16;;;;;2423:274;-1:-1:-1;;2423:274:22:o;3145:184::-;3215:6;3268:2;3256:9;3247:7;3243:23;3239:32;3236:52;;;3284:1;3281;3274:12;3236:52;-1:-1:-1;3307:16:22;;3145:184;-1:-1:-1;3145:184:22:o;3516:127::-;3577:10;3572:3;3568:20;3565:1;3558:31;3608:4;3605:1;3598:15;3632:4;3629:1;3622:15;3648:253;3720:2;3714:9;3762:4;3750:17;;3797:18;3782:34;;3818:22;;;3779:62;3776:88;;;3844:18;;:::i;:::-;3880:2;3873:22;3648:253;:::o;3906:275::-;3977:2;3971:9;4042:2;4023:13;;-1:-1:-1;;4019:27:22;4007:40;;4077:18;4062:34;;4098:22;;;4059:62;4056:88;;;4124:18;;:::i;:::-;4160:2;4153:22;3906:275;;-1:-1:-1;3906:275:22:o;4186:150::-;4268:13;;4310:1;4300:12;;4290:40;;4326:1;4323;4316:12;4341:1195;4438:6;4469:2;4512;4500:9;4491:7;4487:23;4483:32;4480:52;;;4528:1;4525;4518:12;4480:52;4561:9;4555:16;4590:18;4631:2;4623:6;4620:14;4617:34;;;4647:1;4644;4637:12;4617:34;4670:22;;;;4726:4;4708:16;;;4704:27;4701:47;;;4744:1;4741;4734:12;4701:47;4770:22;;:::i;:::-;4823:2;4817:9;4851:2;4841:8;4838:16;4835:36;;;4867:1;4864;4857:12;4835:36;4890:17;;4938:4;4930:13;;4926:27;-1:-1:-1;4916:55:22;;4967:1;4964;4957:12;4916:55;4996:2;4990:9;5018:2;5014;5011:10;5008:36;;;5024:18;;:::i;:::-;5066:53;5109:2;5090:13;;-1:-1:-1;;5086:27:22;5082:36;;5066:53;:::i;:::-;5053:66;;5142:2;5135:5;5128:17;5182:7;5177:2;5172;5168;5164:11;5160:20;5157:33;5154:53;;;5203:1;5200;5193:12;5154:53;5216:54;5267:2;5262;5255:5;5251:14;5246:2;5242;5238:11;5216:54;:::i;:::-;;;5293:5;5286;5279:20;5345:2;5341;5337:11;5331:18;5326:2;5319:5;5315:14;5308:42;5382:45;5423:2;5419;5415:11;5382:45;:::i;:::-;5377:2;5370:5;5366:14;5359:69;5460:45;5501:2;5497;5493:11;5460:45;:::i;:::-;5455:2;5444:14;;5437:69;5448:5;4341:1195;-1:-1:-1;;;;;;4341:1195:22:o;6227:258::-;6269:3;6307:5;6301:12;6334:6;6329:3;6322:19;6350:63;6406:6;6399:4;6394:3;6390:14;6383:4;6376:5;6372:16;6350:63;:::i;:::-;6467:2;6446:15;-1:-1:-1;;6442:29:22;6433:39;;;;6474:4;6429:50;;6227:258;-1:-1:-1;;6227:258:22:o;6490:452::-;6740:2;6729:9;6722:21;6779:2;6774;6763:9;6759:18;6752:30;-1:-1:-1;;;6813:2:22;6802:9;6798:18;6791:40;6869:3;6862:4;6851:9;6847:20;6840:33;6703:4;6890:46;6931:3;6920:9;6916:19;6908:6;6890:46;:::i;6947:452::-;7197:2;7186:9;7179:21;7236:2;7231;7220:9;7216:18;7209:30;-1:-1:-1;;;7270:2:22;7259:9;7255:18;7248:40;7326:3;7319:4;7308:9;7304:20;7297:33;7160:4;7347:46;7388:3;7377:9;7373:19;7365:6;7347:46;:::i",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/Users/alexander/dev/opti/contracts/src/test/OptimisticOracleTest.sol",
    "exportedSymbols": {
      "CheatCodes": [
        24621
      ],
      "DSTest": [
        1786
      ],
      "ERC1155Holder": [
        23292
      ],
      "OPTI": [
        24649
      ],
      "OptimisticOracle": [
        24323
      ],
      "OptimisticOracleTest": [
        24565
      ],
      "Proposal": [
        24340
      ],
      "Question": [
        24351
      ],
      "Result": [
        24329
      ],
      "Script": [
        2049
      ],
      "Stage": [
        24333
      ],
      "StdStorage": [
        5077
      ],
      "Test": [
        4979
      ],
      "TokenReceiver": [
        24572
      ],
      "Vm": [
        7072
      ],
      "console": [
        15136
      ],
      "console2": [
        23200
      ],
      "stdError": [
        5049
      ],
      "stdJson": [
        2409
      ],
      "stdMath": [
        6318
      ],
      "stdStorage": [
        6179
      ]
    },
    "id": 24573,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 24364,
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:19"
      },
      {
        "absolutePath": "/Users/alexander/dev/opti/contracts/lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "id": 24365,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24573,
        "sourceUnit": 6319,
        "src": "64:28:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/opti/contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        "file": "openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        "id": 24367,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24573,
        "sourceUnit": 23293,
        "src": "93:101:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24366,
              "name": "ERC1155Holder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23292,
              "src": "101:13:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/opti/contracts/src/test/helpers/CheatCodes.sol",
        "file": "./helpers/CheatCodes.sol",
        "id": 24369,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24573,
        "sourceUnit": 24622,
        "src": "195:52:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24368,
              "name": "CheatCodes",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24621,
              "src": "203:10:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/opti/contracts/src/test/helpers/MockERC20.sol",
        "file": "./helpers/MockERC20.sol",
        "id": 24371,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24573,
        "sourceUnit": 24650,
        "src": "248:45:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24370,
              "name": "OPTI",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24649,
              "src": "256:4:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/opti/contracts/src/OptimisticOracle.sol",
        "file": "../OptimisticOracle.sol",
        "id": 24373,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24573,
        "sourceUnit": 24324,
        "src": "294:57:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24372,
              "name": "OptimisticOracle",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24323,
              "src": "302:16:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/opti/contracts/src/datastructures/structures.sol",
        "file": "../datastructures/structures.sol",
        "id": 24378,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24573,
        "sourceUnit": 24352,
        "src": "352:83:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24374,
              "name": "Result",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24329,
              "src": "360:6:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 24375,
              "name": "Stage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24333,
              "src": "368:5:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 24376,
              "name": "Proposal",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24340,
              "src": "375:8:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 24377,
              "name": "Question",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24351,
              "src": "385:8:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24379,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4979,
              "src": "470:4:19"
            },
            "id": 24380,
            "nodeType": "InheritanceSpecifier",
            "src": "470:4:19"
          }
        ],
        "canonicalName": "OptimisticOracleTest",
        "contractDependencies": [
          24323,
          24572,
          24649
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 24565,
        "linearizedBaseContracts": [
          24565,
          4979,
          2049,
          1786
        ],
        "name": "OptimisticOracleTest",
        "nameLocation": "446:20:19",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 24383,
            "mutability": "mutable",
            "name": "oo",
            "nameLocation": "507:2:19",
            "nodeType": "VariableDeclaration",
            "scope": 24565,
            "src": "481:28:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OptimisticOracle_$24323",
              "typeString": "contract OptimisticOracle"
            },
            "typeName": {
              "id": 24382,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24381,
                "name": "OptimisticOracle",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24323,
                "src": "481:16:19"
              },
              "referencedDeclaration": 24323,
              "src": "481:16:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OptimisticOracle_$24323",
                "typeString": "contract OptimisticOracle"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24386,
            "mutability": "mutable",
            "name": "cheats",
            "nameLocation": "535:6:19",
            "nodeType": "VariableDeclaration",
            "scope": 24565,
            "src": "515:26:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CheatCodes_$24621",
              "typeString": "contract CheatCodes"
            },
            "typeName": {
              "id": 24385,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24384,
                "name": "CheatCodes",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24621,
                "src": "515:10:19"
              },
              "referencedDeclaration": 24621,
              "src": "515:10:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CheatCodes_$24621",
                "typeString": "contract CheatCodes"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24389,
            "mutability": "mutable",
            "name": "opti",
            "nameLocation": "561:4:19",
            "nodeType": "VariableDeclaration",
            "scope": 24565,
            "src": "547:18:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OPTI_$24649",
              "typeString": "contract OPTI"
            },
            "typeName": {
              "id": 24388,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24387,
                "name": "OPTI",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24649,
                "src": "547:4:19"
              },
              "referencedDeclaration": 24649,
              "src": "547:4:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OPTI_$24649",
                "typeString": "contract OPTI"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24391,
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "589:5:19",
            "nodeType": "VariableDeclaration",
            "scope": 24565,
            "src": "572:22:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 24390,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "572:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24393,
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "617:3:19",
            "nodeType": "VariableDeclaration",
            "scope": 24565,
            "src": "600:20:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 24392,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "600:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 24534,
              "nodeType": "Block",
              "src": "651:666:19",
              "statements": [
                {
                  "expression": {
                    "id": 24400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24396,
                      "name": "cheats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24386,
                      "src": "661:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CheatCodes_$24621",
                        "typeString": "contract CheatCodes"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 24398,
                          "name": "HEVM_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "681:12:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 24397,
                        "name": "CheatCodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24621,
                        "src": "670:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CheatCodes_$24621_$",
                          "typeString": "type(contract CheatCodes)"
                        }
                      },
                      "id": 24399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "670:24:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CheatCodes_$24621",
                        "typeString": "contract CheatCodes"
                      }
                    },
                    "src": "661:33:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CheatCodes_$24621",
                      "typeString": "contract CheatCodes"
                    }
                  },
                  "id": 24401,
                  "nodeType": "ExpressionStatement",
                  "src": "661:33:19"
                },
                {
                  "expression": {
                    "id": 24407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24402,
                      "name": "opti",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24389,
                      "src": "704:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OPTI_$24649",
                        "typeString": "contract OPTI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 24405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "711:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_OPTI_$24649_$",
                          "typeString": "function () returns (contract OPTI)"
                        },
                        "typeName": {
                          "id": 24404,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24403,
                            "name": "OPTI",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24649,
                            "src": "715:4:19"
                          },
                          "referencedDeclaration": 24649,
                          "src": "715:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OPTI_$24649",
                            "typeString": "contract OPTI"
                          }
                        }
                      },
                      "id": 24406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "711:10:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OPTI_$24649",
                        "typeString": "contract OPTI"
                      }
                    },
                    "src": "704:17:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OPTI_$24649",
                      "typeString": "contract OPTI"
                    }
                  },
                  "id": 24408,
                  "nodeType": "ExpressionStatement",
                  "src": "704:17:19"
                },
                {
                  "expression": {
                    "id": 24418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24409,
                      "name": "oo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24383,
                      "src": "731:2:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticOracle_$24323",
                        "typeString": "contract OptimisticOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 24415,
                              "name": "opti",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24389,
                              "src": "765:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OPTI_$24649",
                                "typeString": "contract OPTI"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OPTI_$24649",
                                "typeString": "contract OPTI"
                              }
                            ],
                            "id": 24414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "757:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 24413,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "757:7:19",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "757:13:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 24412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "736:20:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_OptimisticOracle_$24323_$",
                          "typeString": "function (address) returns (contract OptimisticOracle)"
                        },
                        "typeName": {
                          "id": 24411,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24410,
                            "name": "OptimisticOracle",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24323,
                            "src": "740:16:19"
                          },
                          "referencedDeclaration": 24323,
                          "src": "740:16:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracle_$24323",
                            "typeString": "contract OptimisticOracle"
                          }
                        }
                      },
                      "id": 24417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "736:35:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticOracle_$24323",
                        "typeString": "contract OptimisticOracle"
                      }
                    },
                    "src": "731:40:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimisticOracle_$24323",
                      "typeString": "contract OptimisticOracle"
                    }
                  },
                  "id": 24419,
                  "nodeType": "ExpressionStatement",
                  "src": "731:40:19"
                },
                {
                  "expression": {
                    "id": 24428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24420,
                      "name": "alice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24391,
                      "src": "781:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 24425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "797:17:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TokenReceiver_$24572_$",
                              "typeString": "function () returns (contract TokenReceiver)"
                            },
                            "typeName": {
                              "id": 24424,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 24423,
                                "name": "TokenReceiver",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 24572,
                                "src": "801:13:19"
                              },
                              "referencedDeclaration": 24572,
                              "src": "801:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenReceiver_$24572",
                                "typeString": "contract TokenReceiver"
                              }
                            }
                          },
                          "id": 24426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "797:19:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenReceiver_$24572",
                            "typeString": "contract TokenReceiver"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TokenReceiver_$24572",
                            "typeString": "contract TokenReceiver"
                          }
                        ],
                        "id": 24422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "789:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 24421,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "789:7:19",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 24427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "789:28:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "781:36:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24429,
                  "nodeType": "ExpressionStatement",
                  "src": "781:36:19"
                },
                {
                  "expression": {
                    "id": 24438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24430,
                      "name": "bob",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24393,
                      "src": "827:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 24435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "841:17:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TokenReceiver_$24572_$",
                              "typeString": "function () returns (contract TokenReceiver)"
                            },
                            "typeName": {
                              "id": 24434,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 24433,
                                "name": "TokenReceiver",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 24572,
                                "src": "845:13:19"
                              },
                              "referencedDeclaration": 24572,
                              "src": "845:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenReceiver_$24572",
                                "typeString": "contract TokenReceiver"
                              }
                            }
                          },
                          "id": 24436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "841:19:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenReceiver_$24572",
                            "typeString": "contract TokenReceiver"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TokenReceiver_$24572",
                            "typeString": "contract TokenReceiver"
                          }
                        ],
                        "id": 24432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "833:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 24431,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "833:7:19",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 24437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "833:28:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "827:34:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24439,
                  "nodeType": "ExpressionStatement",
                  "src": "827:34:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 24445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "895:10:19",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 24442,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24391,
                            "src": "879:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "871:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 24440,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "871:8:19",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "871:14:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 24444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "871:23:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 24446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "871:35:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24447,
                  "nodeType": "ExpressionStatement",
                  "src": "871:35:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 24453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "938:10:19",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 24450,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24393,
                            "src": "924:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "916:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 24448,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "916:8:19",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "916:12:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 24452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "916:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 24454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "916:33:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24455,
                  "nodeType": "ExpressionStatement",
                  "src": "916:33:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24461,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "978:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$24565",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$24565",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          ],
                          "id": 24460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "970:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24459,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "970:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "970:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "315f3030305f303030",
                        "id": 24463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "985:15:19",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        "value": "1_000_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 24456,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24389,
                        "src": "960:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$24649",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 24458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24648,
                      "src": "960:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 24464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "960:41:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24465,
                  "nodeType": "ExpressionStatement",
                  "src": "960:41:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24469,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24391,
                        "src": "1021:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "315f3030305f303030",
                        "id": 24470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1028:15:19",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        "value": "1_000_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 24466,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24389,
                        "src": "1011:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$24649",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 24468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24648,
                      "src": "1011:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 24471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1011:33:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24472,
                  "nodeType": "ExpressionStatement",
                  "src": "1011:33:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24476,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24393,
                        "src": "1064:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "315f3030305f303030",
                        "id": 24477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1069:15:19",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        "value": "1_000_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 24473,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24389,
                        "src": "1054:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$24649",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 24475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24648,
                      "src": "1054:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 24478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1054:31:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24479,
                  "nodeType": "ExpressionStatement",
                  "src": "1054:31:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24485,
                            "name": "opti",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24389,
                            "src": "1117:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OPTI_$24649",
                              "typeString": "contract OPTI"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OPTI_$24649",
                              "typeString": "contract OPTI"
                            }
                          ],
                          "id": 24484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1109:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24483,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1109:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1109:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 24489,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1129:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 24488,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1129:7:19",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 24487,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1124:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 24490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1124:13:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 24491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1124:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24480,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24389,
                        "src": "1096:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$24649",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 24482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23493,
                      "src": "1096:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 24492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1096:46:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24493,
                  "nodeType": "ExpressionStatement",
                  "src": "1096:46:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24497,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24391,
                        "src": "1165:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24494,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24386,
                        "src": "1152:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$24621",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 24496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24579,
                      "src": "1152:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 24498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1152:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24499,
                  "nodeType": "ExpressionStatement",
                  "src": "1152:19:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24505,
                            "name": "opti",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24389,
                            "src": "1202:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OPTI_$24649",
                              "typeString": "contract OPTI"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OPTI_$24649",
                              "typeString": "contract OPTI"
                            }
                          ],
                          "id": 24504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1194:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24503,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1194:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1194:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 24509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1214:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 24508,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1214:7:19",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 24507,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1209:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 24510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1209:13:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 24511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1209:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24500,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24389,
                        "src": "1181:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$24649",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 24502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23493,
                      "src": "1181:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 24512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1181:46:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24513,
                  "nodeType": "ExpressionStatement",
                  "src": "1181:46:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24517,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24393,
                        "src": "1250:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24514,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24386,
                        "src": "1237:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$24621",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 24516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24579,
                      "src": "1237:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 24518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1237:17:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24519,
                  "nodeType": "ExpressionStatement",
                  "src": "1237:17:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24525,
                            "name": "opti",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24389,
                            "src": "1285:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OPTI_$24649",
                              "typeString": "contract OPTI"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OPTI_$24649",
                              "typeString": "contract OPTI"
                            }
                          ],
                          "id": 24524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1277:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24523,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1277:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1277:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 24529,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1297:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 24528,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1297:7:19",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 24527,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1292:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 24530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1292:13:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 24531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1292:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24520,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24389,
                        "src": "1264:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$24649",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 24522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23493,
                      "src": "1264:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 24532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1264:46:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24533,
                  "nodeType": "ExpressionStatement",
                  "src": "1264:46:19"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "id": 24535,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "636:5:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "641:2:19"
            },
            "returnParameters": {
              "id": 24395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "651:0:19"
            },
            "scope": 24565,
            "src": "627:690:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24563,
              "nodeType": "Block",
              "src": "1357:281:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "77696c6c20455448206265206f76657220316b20746f6d6f72726f773f",
                        "id": 24541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1382:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        "value": "will ETH be over 1k tomorrow?"
                      },
                      {
                        "hexValue": "31303030",
                        "id": 24542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1415:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 24538,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24383,
                        "src": "1367:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24323",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 24540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "askQuestion",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24161,
                      "src": "1367:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) external"
                      }
                    },
                    "id": 24543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1367:53:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24544,
                  "nodeType": "ExpressionStatement",
                  "src": "1367:53:19"
                },
                {
                  "assignments": [
                    24547
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24547,
                      "mutability": "mutable",
                      "name": "question",
                      "nameLocation": "1446:8:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 24563,
                      "src": "1430:24:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$24351_memory_ptr",
                        "typeString": "struct Question"
                      },
                      "typeName": {
                        "id": 24546,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24545,
                          "name": "Question",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24351,
                          "src": "1430:8:19"
                        },
                        "referencedDeclaration": 24351,
                        "src": "1430:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$24351_storage_ptr",
                          "typeString": "struct Question"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24556,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "77696c6c20455448206265206f76657220316b20746f6d6f72726f773f",
                            "id": 24552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1506:31:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                              "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                            },
                            "value": "will ETH be over 1k tomorrow?"
                          },
                          {
                            "hexValue": "31303030",
                            "id": 24553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1539:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                              "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                            },
                            {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            }
                          ],
                          "expression": {
                            "id": 24550,
                            "name": "oo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24383,
                            "src": "1489:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracle_$24323",
                              "typeString": "contract OptimisticOracle"
                            }
                          },
                          "id": 24551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getQuestionId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24322,
                          "src": "1489:16:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                            "typeString": "function (string memory,uint256) pure external returns (bytes32)"
                          }
                        },
                        "id": 24554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1489:55:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 24548,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24383,
                        "src": "1457:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24323",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 24549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getQuestionById",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24304,
                      "src": "1457:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Question_$24351_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct Question memory)"
                      }
                    },
                    "id": 24555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1457:97:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$24351_memory_ptr",
                      "typeString": "struct Question memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1430:124:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 24558,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24547,
                          "src": "1574:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$24351_memory_ptr",
                            "typeString": "struct Question memory"
                          }
                        },
                        "id": 24559,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "questionString",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24342,
                        "src": "1574:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "77696c6c20455448206265206f76657220316b20746f6d6f72726f773f",
                        "id": 24560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1599:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        "value": "will ETH be over 1k tomorrow?"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        }
                      ],
                      "id": 24557,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 1639,
                      "src": "1565:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 24561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1565:66:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24562,
                  "nodeType": "ExpressionStatement",
                  "src": "1565:66:19"
                }
              ]
            },
            "functionSelector": "db861b6c",
            "id": 24564,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAskQuestion",
            "nameLocation": "1332:15:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1347:2:19"
            },
            "returnParameters": {
              "id": 24537,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1357:0:19"
            },
            "scope": 24565,
            "src": "1323:315:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 24573,
        "src": "437:1203:19",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24566,
              "name": "ERC1155Holder",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23292,
              "src": "1668:13:19"
            },
            "id": 24567,
            "nodeType": "InheritanceSpecifier",
            "src": "1668:13:19"
          }
        ],
        "canonicalName": "TokenReceiver",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 24572,
        "linearizedBaseContracts": [
          24572,
          23292,
          23326,
          23241,
          24062,
          24074
        ],
        "name": "TokenReceiver",
        "nameLocation": "1651:13:19",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 24570,
              "nodeType": "Block",
              "src": "1715:2:19",
              "statements": []
            },
            "id": 24571,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1695:2:19"
            },
            "returnParameters": {
              "id": 24569,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1715:0:19"
            },
            "scope": 24572,
            "src": "1688:29:19",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 24573,
        "src": "1642:77:19",
        "usedErrors": []
      }
    ],
    "src": "39:1681:19"
  }
}