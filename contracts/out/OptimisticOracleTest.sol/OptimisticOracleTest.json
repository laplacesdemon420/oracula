{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testQuestionHappyPath",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testQuestionSadPath",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "437:4396:19:-:0;;;1572:26:0;;;-1:-1:-1;;170:28:1;;;;;437:4396:19;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "437:4396:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;681:774;;;:::i;:::-;;321:38:1;;250:64;321:38;;;;;-1:-1:-1;;;;;189:32:22;;;171:51;;159:2;144:18;321:38:1;;;;;;;;2877:1954:19;;;:::i;1819:584:0:-;;;:::i;:::-;;;398:14:22;;391:22;373:41;;361:2;346:18;1819:584:0;233:187:22;1461:1410:19;;;:::i;170:28:1:-;;;;;;;;;;;;1572:26:0;;;;;;;;;681:774:19;715:6;:33;;-1:-1:-1;;;;;;715:33:19;1671:64:0;715:33:19;;;765:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;758:4:19;:17;;-1:-1:-1;;;;;;758:17:19;-1:-1:-1;;;;;758:17:19;;;;;;;;;790:35;;;;;:::i;:::-;-1:-1:-1;;;;;189:32:22;;;171:51;;159:2;144:18;790:35:19;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;785:2:19;:40;;-1:-1:-1;;;;;;785:40:19;-1:-1:-1;;;;;785:40:19;;;;;;;;;;851:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;835:5:19;:36;;-1:-1:-1;;;;;;835:36:19;-1:-1:-1;;;;;835:36:19;;;;;;;;;;895:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;881:3:19;:34;;-1:-1:-1;;;;;;881:34:19;-1:-1:-1;;;;;881:34:19;;;;;;;;;;940:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;925:4:19;:35;;-1:-1:-1;;;;;;925:35:19;-1:-1:-1;;;;;925:35:19;;;;;;;;;;985:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;970:4:19;:35;;-1:-1:-1;;;;;;970:35:19;-1:-1:-1;;;;;970:35:19;;;;;;1023:5;;1015:35;;1023:5;;;-1:-1:-1;;1039:10:19;;-1:-1:-1;1015:35:19;-1:-1:-1;1015:35:19;1039:10;1023:5;-1:-1:-1;1015:35:19;;;;;;;;;;;;;;;;;;;-1:-1:-1;1068:3:19;;1060:33;;-1:-1:-1;;;;;1068:3:19;;;;;;1082:10;;1068:3;1060:33;1068:3;1060:33;1082:10;1068:3;;1060:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;1104:4:19;;:41;;-1:-1:-1;;;1104:41:19;;1122:4;1104:41;;;839:51:22;1129:15:19;906:18:22;;;899:34;-1:-1:-1;;;;;1104:4:19;;;;:9;;812:18:22;;1104:41:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1155:4:19;;1165:5;;1155:33;;-1:-1:-1;;;1155:33:19;;-1:-1:-1;;;;;1165:5:19;;;1155:33;;;839:51:22;1172:15:19;906:18:22;;;899:34;1155:4:19;;;-1:-1:-1;1155:9:19;;-1:-1:-1;812:18:22;;1155:33:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1198:4:19;;1208:3;;1198:31;;-1:-1:-1;;;1198:31:19;;-1:-1:-1;;;;;1208:3:19;;;1198:31;;;839:51:22;1213:15:19;906:18:22;;;899:34;1198:4:19;;;-1:-1:-1;1198:9:19;;-1:-1:-1;812:18:22;;1198:31:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1240:4:19;;1261:2;;1240:44;;-1:-1:-1;;;1240:44:19;;-1:-1:-1;;;;;1261:2:19;;;1240:44;;;839:51:22;-1:-1:-1;;906:18:22;;;899:34;1240:4:19;;;-1:-1:-1;1240:12:19;;-1:-1:-1;812:18:22;;1240:44:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1294:6:19;;1307:5;;1294:19;;-1:-1:-1;;;1294:19:19;;-1:-1:-1;;;;;1307:5:19;;;1294:19;;;171:51:22;1294:6:19;;;:12;;144:18:22;;1294:19:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1323:4:19;;1344:2;;1323:44;;-1:-1:-1;;;1323:44:19;;-1:-1:-1;;;;;1344:2:19;;;1323:44;;;839:51:22;-1:-1:-1;;906:18:22;;;899:34;1323:4:19;;;-1:-1:-1;1323:12:19;;-1:-1:-1;812:18:22;;1323:44:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1377:6:19;;1390:3;;1377:17;;-1:-1:-1;;;1377:17:19;;-1:-1:-1;;;;;1390:3:19;;;1377:17;;;171:51:22;1377:6:19;;;:12;;144:18:22;;1377:17:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1404:4:19;;1425:2;;1404:44;;-1:-1:-1;;;1404:44:19;;-1:-1:-1;;;;;1425:2:19;;;1404:44;;;839:51:22;-1:-1:-1;;906:18:22;;;899:34;1404:4:19;;;-1:-1:-1;1404:12:19;;-1:-1:-1;812:18:22;;1404:44:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;681:774::o;2877:1954::-;2949:2;;:124;;-1:-1:-1;;;2949:124:19;;-1:-1:-1;;;;;2949:2:19;;;;:14;;:124;;3059:4;;2949:124;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3104:2:19;;:126;;-1:-1:-1;;;3104:126:19;;3083:18;;-1:-1:-1;;;;;;3104:2:19;;;;-1:-1:-1;3104:16:19;;:126;;3216:4;;3104:126;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3267:2;;:30;;-1:-1:-1;;;3267:30:19;;;;;2526:25:22;;;3083:147:19;;-1:-1:-1;3240:24:19;;-1:-1:-1;;;;;3267:2:19;;;;:18;;2499::22;;3267:30:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3267:30:19;;;;;;;;;;;;:::i;:::-;3240:57;;3307:66;3316:8;:23;;;3307:66;;;;;;;;;;;;;;;;;:8;:66::i;:::-;3410:6;;:17;;-1:-1:-1;;;3410:17:19;;3422:4;3410:17;;;2526:25:22;-1:-1:-1;;;;;3410:6:19;;;;:11;;2499:18:22;;3410:17:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3455:4:19;;:29;;-1:-1:-1;;;3455:29:19;;3478:4;3455:29;;;171:51:22;3437:15:19;;-1:-1:-1;;;;;;3455:4:19;;;;-1:-1:-1;3455:14:19;;144:18:22;;3455:29:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3494:2;;:40;;-1:-1:-1;;;3494:40:19;;3437:47;;-1:-1:-1;;;;;;3494:2:19;;:16;;:40;;3511:10;;3494:2;;:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3574:4:19;;:29;;-1:-1:-1;;;3574:29:19;;3597:4;3574:29;;;171:51:22;3556:59:19;;-1:-1:-1;3565:7:19;;-1:-1:-1;;;;;;3574:4:19;;;;:14;;144:18:22;;3574:29:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;3606:8;3574:40;:::i;:::-;3556:8;:59::i;:::-;3678:2;;:38;;-1:-1:-1;;;3678:38:19;;;;;2526:25:22;;;3651:24:19;;-1:-1:-1;;;;;3678:2:19;;:26;;2499:18:22;;3678:38:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3651:65;;3726:55;3743:8;:15;;;3735:24;;;;;;;;:::i;:::-;3769:10;3556:8;:59::i;3726:55::-;3830:4;;3845:3;;3830:19;;-1:-1:-1;;;3830:19:19;;-1:-1:-1;;;;;3845:3:19;;;3830:19;;;171:51:22;3830:4:19;;;:14;;144:18:22;;3830:19:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3859:6;;3872:3;;3859:17;;-1:-1:-1;;;3859:17:19;;-1:-1:-1;;;;;3872:3:19;;;3859:17;;;171:51:22;3820:29:19;;-1:-1:-1;3859:6:19;;:12;;144:18:22;;3859:17:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3886:2:19;;:30;;-1:-1:-1;;;3886:30:19;;;;;2526:25:22;;;-1:-1:-1;;;;;3886:2:19;;;;-1:-1:-1;3886:18:19;;-1:-1:-1;2499:18:22;;3886:30:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3944:4:19;;3959:3;;3944:19;;-1:-1:-1;;;3944:19:19;;-1:-1:-1;;;;;3959:3:19;;;3944:19;;;171:51:22;3926:49:19;;-1:-1:-1;3935:7:19;;-1:-1:-1;3944:4:19;;;:14;;144:18:22;;3944:19:19;14:214:22;3926:49:19;4040:6;;4052:2;;:19;;;-1:-1:-1;;;4052:19:19;;;;-1:-1:-1;;;;;4040:6:19;;;;:11;;4052:2;;:17;;:19;;;;;;;;;;;;;;:2;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;4074:4;4052:26;:::i;:::-;4040:39;;;;;;;;;;;;;2526:25:22;;2514:2;2499:18;;2380:177;4040:39:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4089:6:19;;:61;;-1:-1:-1;;;4089:61:19;;7625:2:22;4089:61:19;;;7607:21:22;7664:2;7644:18;;;7637:30;7703:34;7683:18;;;7676:62;-1:-1:-1;;;7754:18:22;;;7747:36;-1:-1:-1;;;;;4089:6:19;;;;-1:-1:-1;4089:19:19;;-1:-1:-1;7800:19:22;;4089:61:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4160:2:19;;:31;;-1:-1:-1;;;4160:31:19;;;;;2526:25:22;;;-1:-1:-1;;;;;4160:2:19;;;;-1:-1:-1;4160:19:19;;-1:-1:-1;2499:18:22;;4160:31:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4201:6:19;;:17;;-1:-1:-1;;;4201:17:19;;4213:4;4201:17;;;2526:25:22;-1:-1:-1;;;;;4201:6:19;;;;-1:-1:-1;4201:11:19;;-1:-1:-1;2499:18:22;;4201:17:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4247:6:19;;4260:5;;4247:19;;-1:-1:-1;;;4247:19:19;;-1:-1:-1;;;;;4260:5:19;;;4247:19;;;171:51:22;4247:6:19;;;-1:-1:-1;4247:12:19;;-1:-1:-1;144:18:22;;4247:19:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4276:2:19;;:35;;-1:-1:-1;;;4276:35:19;;-1:-1:-1;;;;;4276:2:19;;;;-1:-1:-1;4276:11:19;;-1:-1:-1;4276:35:19;;4288:10;;4276:2;;:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4321:6:19;;4334:3;;4321:17;;-1:-1:-1;;;4321:17:19;;-1:-1:-1;;;;;4334:3:19;;;4321:17;;;171:51:22;4321:6:19;;;-1:-1:-1;4321:12:19;;-1:-1:-1;144:18:22;;4321:17:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4348:2:19;;:35;;-1:-1:-1;;;4348:35:19;;-1:-1:-1;;;;;4348:2:19;;;;-1:-1:-1;4348:11:19;;-1:-1:-1;4348:35:19;;4360:10;;4348:2;;:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4393:6:19;;4406:4;;4393:18;;-1:-1:-1;;;4393:18:19;;-1:-1:-1;;;;;4406:4:19;;;4393:18;;;171:51:22;4393:6:19;;;-1:-1:-1;4393:12:19;;-1:-1:-1;144:18:22;;4393::19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4421:2:19;;:35;;-1:-1:-1;;;4421:35:19;;-1:-1:-1;;;;;4421:2:19;;;;-1:-1:-1;4421:11:19;;-1:-1:-1;4421:35:19;;4433:10;;4421:2;;:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4466:6:19;;4479:4;;4466:18;;-1:-1:-1;;;4466:18:19;;-1:-1:-1;;;;;4479:4:19;;;4466:18;;;171:51:22;4466:6:19;;;-1:-1:-1;4466:12:19;;-1:-1:-1;144:18:22;;4466::19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4494:2:19;;:34;;-1:-1:-1;;;4494:34:19;;-1:-1:-1;;;;;4494:2:19;;;;-1:-1:-1;4494:11:19;;-1:-1:-1;4494:34:19;;4506:10;;4518:9;;4494:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4564:6:19;;4576:2;;:18;;;-1:-1:-1;;;4576:18:19;;;;-1:-1:-1;;;;;4564:6:19;;;;-1:-1:-1;4564:11:19;;-1:-1:-1;4576:2:19;;;;;:16;;:18;;;;;;;;;;;;;;:2;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:25;;4597:4;4576:25;:::i;:::-;4564:38;;;;;;;;;;;;;2526:25:22;;2514:2;2499:18;;2380:177;4564:38:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4612:2:19;;:27;;-1:-1:-1;;;4612:27:19;;;;;2526:25:22;;;-1:-1:-1;;;;;4612:2:19;;;;-1:-1:-1;4612:15:19;;-1:-1:-1;2499:18:22;;4612:27:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4660:2:19;;:30;;-1:-1:-1;;;4660:30:19;;;;;2526:25:22;;;-1:-1:-1;;;;;4660:2:19;;;;-1:-1:-1;4660:18:19;;-1:-1:-1;2499:18:22;;4660:30:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4660:30:19;;;;;;;;;;;;:::i;:::-;4649:41;;4700:59;4717:8;:14;;;4709:23;;;;;;;;:::i;:::-;4742:15;3556:8;:59::i;4700:::-;4769:55;4786:8;:15;;;4778:24;;;;;;;;:::i;4769:55::-;2915:1916;;;;2877:1954::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;839:51:22;;;-1:-1:-1;;;906:18:22;;;899:34;2196:43:0;;;;;;;;;812:18:22;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;1461:1410:19:-;1535:2;;:124;;-1:-1:-1;;;1535:124:19;;-1:-1:-1;;;;;1535:2:19;;;;:14;;:124;;1645:4;;1535:124;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1690:2:19;;:126;;-1:-1:-1;;;1690:126:19;;1669:18;;-1:-1:-1;;;;;;1690:2:19;;;;-1:-1:-1;1690:16:19;;:126;;1802:4;;1690:126;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1853:2;;:30;;-1:-1:-1;;;1853:30:19;;;;;2526:25:22;;;1669:147:19;;-1:-1:-1;1826:24:19;;-1:-1:-1;;;;;1853:2:19;;;;:18;;2499::22;;1853:30:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1853:30:19;;;;;;;;;;;;:::i;:::-;1826:57;;1893:66;1902:8;:23;;;1893:66;;;;;;;;;;;;;;;;;:8;:66::i;:::-;1996:6;;:17;;-1:-1:-1;;;1996:17:19;;2008:4;1996:17;;;2526:25:22;-1:-1:-1;;;;;1996:6:19;;;;:11;;2499:18:22;;1996:17:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2041:4:19;;:29;;-1:-1:-1;;;2041:29:19;;2064:4;2041:29;;;171:51:22;2023:15:19;;-1:-1:-1;;;;;;2041:4:19;;;;-1:-1:-1;2041:14:19;;144:18:22;;2041:29:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2080:2;;:40;;-1:-1:-1;;;2080:40:19;;2023:47;;-1:-1:-1;;;;;;2080:2:19;;:16;;:40;;2097:10;;2080:2;;:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2160:4:19;;:29;;-1:-1:-1;;;2160:29:19;;2183:4;2160:29;;;171:51:22;2142:59:19;;-1:-1:-1;2151:7:19;;-1:-1:-1;;;;;;2160:4:19;;;;:14;;144:18:22;;2160:29:19;14:214:22;2142:59:19;2264:2;;:38;;-1:-1:-1;;;2264:38:19;;;;;2526:25:22;;;2237:24:19;;-1:-1:-1;;;;;2264:2:19;;:26;;2499:18:22;;2264:38:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2237:65;;2312:55;2329:8;:15;;;2321:24;;;;;;;;:::i;2312:55::-;2407:6;;2419:2;;:19;;;-1:-1:-1;;;2419:19:19;;;;-1:-1:-1;;;;;2407:6:19;;;;:11;;2419:2;;:17;;:19;;;;;;;;;;;;;;:2;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;2441:4;2419:26;:::i;:::-;2407:39;;;;;;;;;;;;;2526:25:22;;2514:2;2499:18;;2380:177;2407:39:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2456:2:19;;:31;;-1:-1:-1;;;2456:31:19;;;;;2526:25:22;;;-1:-1:-1;;;;;2456:2:19;;;;-1:-1:-1;2456:19:19;;-1:-1:-1;2499:18:22;;2456:31:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2508:2:19;;:30;;-1:-1:-1;;;2508:30:19;;;;;2526:25:22;;;-1:-1:-1;;;;;2508:2:19;;;;-1:-1:-1;2508:18:19;;-1:-1:-1;2499:18:22;;2508:30:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2508:30:19;;;;;;;;;;;;:::i;:::-;2497:41;;2548:59;2565:8;:14;;;2557:23;;;;;;;;:::i;2548:59::-;2617:60;2634:8;:15;;;2626:24;;;;;;;;:::i;:::-;2660:8;:15;;;2652:24;;;;;;;;:::i;2617:60::-;2718:2;;:20;;;-1:-1:-1;;;2718:20:19;;;;2688:27;;-1:-1:-1;;;;;2718:2:19;;:18;;:20;;;;;2688:27;;2718:20;;;;;;;:2;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2718:20:19;;;;;;;;;;;;:::i;:::-;2759:2;;:30;;-1:-1:-1;;;2759:30:19;;;;;2526:25:22;;;2688:50:19;;-1:-1:-1;;;;;;2759:2:19;;:18;;2499::22;;2759:30:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2759:30:19;;;;;;;;;;;;:::i;:::-;2748:41;;2800:64;2817:9;2827:1;2817:12;;;;;;;;:::i;:::-;;;;;;;:19;;;2809:28;;;;;;;;:::i;:::-;2847:8;:15;;;2839:24;;;;;;;;:::i;2800:64::-;1501:1370;;;;;1461:1410::o;14688:344:0:-;14824:1;14807:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14797:30;;;;;;14790:1;14773:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14763:30;;;;;;:64;14759:267;;14848:43;;;;;10578:2:22;10560:21;;;10617:2;10597:18;;;10590:30;10656:34;10651:2;10636:18;;10629:62;-1:-1:-1;;;10722:2:22;10707:18;;10700:34;10766:3;10751:19;;10376:400;14848:43:0;;;;;;;;14910:33;14941:1;14910:33;;;;;;:::i;:::-;;;;;;;;14962;14993:1;14962:33;;;;;;:::i;:::-;;;;;;;;15009:6;:4;:6::i;:::-;14688:344;;:::o;5202:262::-;5264:1;5259;:6;5255:203;;5286:41;;;;;12464:2:22;12446:21;;;12503:2;12483:18;;;12476:30;12542:34;12537:2;12522:18;;12515:62;-1:-1:-1;;;12608:2:22;12593:18;;12586:32;12650:3;12635:19;;12262:398;5286:41:0;;;;;;;;5346:31;5375:1;5346:31;;;;;;:::i;:::-;;;;;;;;5396;5425:1;5396:31;;;;;;:::i;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;13573:51:22;;;-1:-1:-1;;;13640:18:22;;;13633:34;;;;2705:4:0;13683:18:22;;;13676:34;2482:11:0;;1671:64;2579:43;;13546:18:22;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;1223:277:22:-;1290:6;1343:2;1331:9;1322:7;1318:23;1314:32;1311:52;;;1359:1;1356;1349:12;1311:52;1391:9;1385:16;1444:5;1437:13;1430:21;1423:5;1420:32;1410:60;;1466:1;1463;1456:12;1410:60;1489:5;1223:277;-1:-1:-1;;;1223:277:22:o;1505:681::-;1847:2;1829:21;;;1886:2;1866:18;;;1859:30;1926:31;1920:3;1905:19;;1898:60;1996:3;1989:4;1974:20;;1967:33;;;2037:2;2016:19;;;2009:31;-1:-1:-1;;;2071:3:22;2056:19;;2049:52;-1:-1:-1;2153:18:22;;2146:34;;;;2133:3;2118:19;;1505:681::o;2191:184::-;2261:6;2314:2;2302:9;2293:7;2289:23;2285:32;2282:52;;;2330:1;2327;2320:12;2282:52;-1:-1:-1;2353:16:22;;2191:184;-1:-1:-1;2191:184:22:o;2562:127::-;2623:10;2618:3;2614:20;2611:1;2604:31;2654:4;2651:1;2644:15;2678:4;2675:1;2668:15;2694:253;2766:2;2760:9;2808:4;2796:17;;2843:18;2828:34;;2864:22;;;2825:62;2822:88;;;2890:18;;:::i;:::-;2926:2;2919:22;2694:253;:::o;2952:275::-;3023:2;3017:9;3088:2;3069:13;;-1:-1:-1;;3065:27:22;3053:40;;3123:18;3108:34;;3144:22;;;3105:62;3102:88;;;3170:18;;:::i;:::-;3206:2;3199:22;2952:275;;-1:-1:-1;2952:275:22:o;3232:258::-;3304:1;3314:113;3328:6;3325:1;3322:13;3314:113;;;3404:11;;;3398:18;3385:11;;;3378:39;3350:2;3343:10;3314:113;;;3445:6;3442:1;3439:13;3436:48;;;-1:-1:-1;;3480:1:22;3462:16;;3455:27;3232:258::o;3495:497::-;3549:5;3602:3;3595:4;3587:6;3583:17;3579:27;3569:55;;3620:1;3617;3610:12;3569:55;3649:6;3643:13;3675:18;3671:2;3668:26;3665:52;;;3697:18;;:::i;:::-;3741:55;3784:2;3765:13;;-1:-1:-1;;3761:27:22;3790:4;3757:38;3741:55;:::i;:::-;3821:2;3812:7;3805:19;3867:3;3860:4;3855:2;3847:6;3843:15;3839:26;3836:35;3833:55;;;3884:1;3881;3874:12;3833:55;3897:64;3958:2;3951:4;3942:7;3938:18;3931:4;3923:6;3919:17;3897:64;:::i;:::-;3979:7;3495:497;-1:-1:-1;;;;3495:497:22:o;3997:151::-;4080:13;;4122:1;4112:12;;4102:40;;4138:1;4135;4128:12;4153:855;4219:5;4267:4;4255:9;4250:3;4246:19;4242:30;4239:50;;;4285:1;4282;4275:12;4239:50;4307:22;;:::i;:::-;4298:31;;4358:9;4352:16;4387:18;4428:2;4420:6;4417:14;4414:34;;;4444:1;4441;4434:12;4414:34;4471:57;4524:3;4515:6;4504:9;4500:22;4471:57;:::i;:::-;4464:5;4457:72;4575:2;4564:9;4560:18;4554:25;4538:41;;4604:2;4594:8;4591:16;4588:36;;;4620:1;4617;4610:12;4588:36;;4656:59;4711:3;4700:8;4689:9;4685:24;4656:59;:::i;:::-;4651:2;4644:5;4640:14;4633:83;;4769:2;4758:9;4754:18;4748:25;4743:2;4736:5;4732:14;4725:49;4819:2;4808:9;4804:18;4798:25;4854:1;4845:7;4842:14;4832:42;;4870:1;4867;4860:12;4832:42;4901:2;4890:14;;4883:31;4947:54;4996:3;4981:19;;4947:54;:::i;:::-;4941:3;4934:5;4930:15;4923:79;4153:855;;;;:::o;5013:363::-;5110:6;5163:2;5151:9;5142:7;5138:23;5134:32;5131:52;;;5179:1;5176;5169:12;5131:52;5212:9;5206:16;5245:18;5237:6;5234:30;5231:50;;;5277:1;5274;5267:12;5231:50;5300:70;5362:7;5353:6;5342:9;5338:22;5300:70;:::i;5763:127::-;5824:10;5819:3;5815:20;5812:1;5805:31;5855:4;5852:1;5845:15;5879:4;5876:1;5869:15;5895:411;6079:25;;;6067:2;6052:18;;6134:1;6123:13;;6113:144;;6179:10;6174:3;6170:20;6167:1;6160:31;6214:4;6211:1;6204:15;6242:4;6239:1;6232:15;6113:144;6293:6;6288:2;6277:9;6273:18;6266:34;5895:411;;;;;:::o;6311:225::-;6351:3;6382:1;6378:6;6375:1;6372:13;6369:136;;;6427:10;6422:3;6418:20;6415:1;6408:31;6462:4;6459:1;6452:15;6490:4;6487:1;6480:15;6369:136;-1:-1:-1;6521:9:22;;6311:225::o;6541:696::-;6638:6;6691:2;6679:9;6670:7;6666:23;6662:32;6659:52;;;6707:1;6704;6697:12;6659:52;6740:2;6734:9;6782:2;6774:6;6770:15;6851:6;6839:10;6836:22;6815:18;6803:10;6800:34;6797:62;6794:88;;;6862:18;;:::i;:::-;6898:2;6891:22;6935:16;;-1:-1:-1;;;;;6980:31:22;;6970:42;;6960:70;;7026:1;7023;7016:12;6960:70;7039:21;;7093:53;7142:2;7127:18;;7093:53;:::i;:::-;7088:2;7080:6;7076:15;7069:78;7201:2;7190:9;7186:18;7180:25;7175:2;7167:6;7163:15;7156:50;7225:6;7215:16;;;6541:696;;;;:::o;8109:371::-;-1:-1:-1;;;;;;8294:33:22;;8282:46;;8351:13;;8264:3;;8373:61;8351:13;8423:1;8414:11;;8407:4;8395:17;;8373:61;:::i;:::-;8454:16;;;;8472:1;8450:24;;8109:371;-1:-1:-1;;;8109:371:22:o;8485:274::-;8614:3;8652:6;8646:13;8668:53;8714:6;8709:3;8702:4;8694:6;8690:17;8668:53;:::i;:::-;8737:16;;;;;8485:274;-1:-1:-1;;8485:274:22:o;8764:1194::-;8886:6;8917:2;8960;8948:9;8939:7;8935:23;8931:32;8928:52;;;8976:1;8973;8966:12;8928:52;9009:9;9003:16;9038:18;9079:2;9071:6;9068:14;9065:34;;;9095:1;9092;9085:12;9065:34;9133:6;9122:9;9118:22;9108:32;;9178:7;9171:4;9167:2;9163:13;9159:27;9149:55;;9200:1;9197;9190:12;9149:55;9229:2;9223:9;9251:2;9247;9244:10;9241:36;;;9257:18;;:::i;:::-;9303:2;9300:1;9296:10;9326:28;9350:2;9346;9342:11;9326:28;:::i;:::-;9388:15;;;9458:11;;;9454:20;;;9419:12;;;;9486:19;;;9483:39;;;9518:1;9515;9508:12;9483:39;9550:2;9546;9542:11;9531:22;;9562:366;9578:6;9573:3;9570:15;9562:366;;;9657:3;9651:10;9693:2;9680:11;9677:19;9674:109;;;9737:1;9766:2;9762;9755:14;9674:109;9808:77;9877:7;9872:2;9858:11;9854:2;9850:20;9846:29;9808:77;:::i;:::-;9796:90;;-1:-1:-1;9595:12:22;;;;9906;;;;9562:366;;;9947:5;8764:1194;-1:-1:-1;;;;;;;;;8764:1194:22:o;9963:127::-;10024:10;10019:3;10015:20;10012:1;10005:31;10055:4;10052:1;10045:15;10079:4;10076:1;10069:15;10945:258;10987:3;11025:5;11019:12;11052:6;11047:3;11040:19;11068:63;11124:6;11117:4;11112:3;11108:14;11101:4;11094:5;11090:16;11068:63;:::i;:::-;11185:2;11164:15;-1:-1:-1;;11160:29:22;11151:39;;;;11192:4;11147:50;;10945:258;-1:-1:-1;;10945:258:22:o;11208:440::-;11458:2;11447:9;11440:21;11421:4;11484:49;11529:2;11518:9;11514:18;10858:2;10846:15;;-1:-1:-1;;;10886:4:22;10877:14;;10870:36;10931:2;10922:12;;10781:159;11484:49;11581:9;11573:6;11569:22;11564:2;11553:9;11549:18;11542:50;11609:33;11635:6;11627;11609:33;:::i;11817:440::-;12067:2;12056:9;12049:21;12030:4;12093:49;12138:2;12127:9;12123:18;11730:2;11718:15;;-1:-1:-1;;;11758:4:22;11749:14;;11742:36;11803:2;11794:12;;11653:159;12665:348;12895:2;12884:9;12877:21;12858:4;12915:49;12960:2;12949:9;12945:18;10858:2;10846:15;;-1:-1:-1;;;10886:4:22;10877:14;;10870:36;10931:2;10922:12;;10781:159;12915:49;12907:57;;13000:6;12995:2;12984:9;12980:18;12973:34;12665:348;;;;:::o;13018:::-;13248:2;13237:9;13230:21;13211:4;13268:49;13313:2;13302:9;13298:18;11730:2;11718:15;;-1:-1:-1;;;11758:4:22;11749:14;;11742:36;11803:2;11794:12;;11653:159",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/Users/alexander/dev/opti/contracts/src/test/OptimisticOracleTest.sol",
    "exportedSymbols": {
      "CheatCodes": [
        25418
      ],
      "DSTest": [
        1786
      ],
      "ERC1155Holder": [
        23292
      ],
      "OPTI": [
        25446
      ],
      "OptimisticOracle": [
        24649
      ],
      "OptimisticOracleTest": [
        25362
      ],
      "Proposal": [
        24668
      ],
      "Question": [
        24690
      ],
      "Result": [
        24655
      ],
      "Script": [
        2049
      ],
      "Stage": [
        24660
      ],
      "StdStorage": [
        5077
      ],
      "Test": [
        4979
      ],
      "TokenReceiver": [
        25369
      ],
      "Vm": [
        7072
      ],
      "console": [
        15136
      ],
      "console2": [
        23200
      ],
      "stdError": [
        5049
      ],
      "stdJson": [
        2409
      ],
      "stdMath": [
        6318
      ],
      "stdStorage": [
        6179
      ]
    },
    "id": 25370,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 24738,
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:19"
      },
      {
        "absolutePath": "/Users/alexander/dev/opti/contracts/lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "id": 24739,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25370,
        "sourceUnit": 6319,
        "src": "64:28:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/opti/contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        "file": "openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        "id": 24741,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25370,
        "sourceUnit": 23293,
        "src": "93:101:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24740,
              "name": "ERC1155Holder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23292,
              "src": "101:13:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/opti/contracts/src/test/helpers/CheatCodes.sol",
        "file": "./helpers/CheatCodes.sol",
        "id": 24743,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25370,
        "sourceUnit": 25419,
        "src": "195:52:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24742,
              "name": "CheatCodes",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25418,
              "src": "203:10:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/opti/contracts/src/test/helpers/MockERC20.sol",
        "file": "./helpers/MockERC20.sol",
        "id": 24745,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25370,
        "sourceUnit": 25447,
        "src": "248:45:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24744,
              "name": "OPTI",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25446,
              "src": "256:4:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/opti/contracts/src/OptimisticOracle.sol",
        "file": "../OptimisticOracle.sol",
        "id": 24747,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25370,
        "sourceUnit": 24650,
        "src": "294:57:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24746,
              "name": "OptimisticOracle",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24649,
              "src": "302:16:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/opti/contracts/src/datastructures/structures.sol",
        "file": "../datastructures/structures.sol",
        "id": 24752,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25370,
        "sourceUnit": 24691,
        "src": "352:83:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24748,
              "name": "Result",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24655,
              "src": "360:6:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 24749,
              "name": "Stage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24660,
              "src": "368:5:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 24750,
              "name": "Proposal",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24668,
              "src": "375:8:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 24751,
              "name": "Question",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24690,
              "src": "385:8:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24753,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4979,
              "src": "470:4:19"
            },
            "id": 24754,
            "nodeType": "InheritanceSpecifier",
            "src": "470:4:19"
          }
        ],
        "canonicalName": "OptimisticOracleTest",
        "contractDependencies": [
          24649,
          25369,
          25446
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 25362,
        "linearizedBaseContracts": [
          25362,
          4979,
          2049,
          1786
        ],
        "name": "OptimisticOracleTest",
        "nameLocation": "446:20:19",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 24757,
            "mutability": "mutable",
            "name": "oo",
            "nameLocation": "507:2:19",
            "nodeType": "VariableDeclaration",
            "scope": 25362,
            "src": "481:28:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
              "typeString": "contract OptimisticOracle"
            },
            "typeName": {
              "id": 24756,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24755,
                "name": "OptimisticOracle",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24649,
                "src": "481:16:19"
              },
              "referencedDeclaration": 24649,
              "src": "481:16:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                "typeString": "contract OptimisticOracle"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24760,
            "mutability": "mutable",
            "name": "cheats",
            "nameLocation": "535:6:19",
            "nodeType": "VariableDeclaration",
            "scope": 25362,
            "src": "515:26:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CheatCodes_$25418",
              "typeString": "contract CheatCodes"
            },
            "typeName": {
              "id": 24759,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24758,
                "name": "CheatCodes",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25418,
                "src": "515:10:19"
              },
              "referencedDeclaration": 25418,
              "src": "515:10:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CheatCodes_$25418",
                "typeString": "contract CheatCodes"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24763,
            "mutability": "mutable",
            "name": "opti",
            "nameLocation": "561:4:19",
            "nodeType": "VariableDeclaration",
            "scope": 25362,
            "src": "547:18:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OPTI_$25446",
              "typeString": "contract OPTI"
            },
            "typeName": {
              "id": 24762,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24761,
                "name": "OPTI",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25446,
                "src": "547:4:19"
              },
              "referencedDeclaration": 25446,
              "src": "547:4:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OPTI_$25446",
                "typeString": "contract OPTI"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24765,
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "589:5:19",
            "nodeType": "VariableDeclaration",
            "scope": 25362,
            "src": "572:22:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 24764,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "572:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24767,
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "617:3:19",
            "nodeType": "VariableDeclaration",
            "scope": 25362,
            "src": "600:20:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 24766,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "600:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24769,
            "mutability": "mutable",
            "name": "john",
            "nameLocation": "643:4:19",
            "nodeType": "VariableDeclaration",
            "scope": 25362,
            "src": "626:21:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 24768,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "626:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24771,
            "mutability": "mutable",
            "name": "kyle",
            "nameLocation": "670:4:19",
            "nodeType": "VariableDeclaration",
            "scope": 25362,
            "src": "653:21:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 24770,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "653:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 24932,
              "nodeType": "Block",
              "src": "705:750:19",
              "statements": [
                {
                  "expression": {
                    "id": 24778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24774,
                      "name": "cheats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24760,
                      "src": "715:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CheatCodes_$25418",
                        "typeString": "contract CheatCodes"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 24776,
                          "name": "HEVM_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "735:12:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 24775,
                        "name": "CheatCodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25418,
                        "src": "724:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CheatCodes_$25418_$",
                          "typeString": "type(contract CheatCodes)"
                        }
                      },
                      "id": 24777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "724:24:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CheatCodes_$25418",
                        "typeString": "contract CheatCodes"
                      }
                    },
                    "src": "715:33:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CheatCodes_$25418",
                      "typeString": "contract CheatCodes"
                    }
                  },
                  "id": 24779,
                  "nodeType": "ExpressionStatement",
                  "src": "715:33:19"
                },
                {
                  "expression": {
                    "id": 24785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24780,
                      "name": "opti",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24763,
                      "src": "758:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OPTI_$25446",
                        "typeString": "contract OPTI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 24783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "765:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_OPTI_$25446_$",
                          "typeString": "function () returns (contract OPTI)"
                        },
                        "typeName": {
                          "id": 24782,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24781,
                            "name": "OPTI",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 25446,
                            "src": "769:4:19"
                          },
                          "referencedDeclaration": 25446,
                          "src": "769:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OPTI_$25446",
                            "typeString": "contract OPTI"
                          }
                        }
                      },
                      "id": 24784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "765:10:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OPTI_$25446",
                        "typeString": "contract OPTI"
                      }
                    },
                    "src": "758:17:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OPTI_$25446",
                      "typeString": "contract OPTI"
                    }
                  },
                  "id": 24786,
                  "nodeType": "ExpressionStatement",
                  "src": "758:17:19"
                },
                {
                  "expression": {
                    "id": 24796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24787,
                      "name": "oo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24757,
                      "src": "785:2:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                        "typeString": "contract OptimisticOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 24793,
                              "name": "opti",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24763,
                              "src": "819:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OPTI_$25446",
                                "typeString": "contract OPTI"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OPTI_$25446",
                                "typeString": "contract OPTI"
                              }
                            ],
                            "id": 24792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "811:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 24791,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "811:7:19",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "811:13:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 24790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "790:20:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_OptimisticOracle_$24649_$",
                          "typeString": "function (address) returns (contract OptimisticOracle)"
                        },
                        "typeName": {
                          "id": 24789,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24788,
                            "name": "OptimisticOracle",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24649,
                            "src": "794:16:19"
                          },
                          "referencedDeclaration": 24649,
                          "src": "794:16:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                            "typeString": "contract OptimisticOracle"
                          }
                        }
                      },
                      "id": 24795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "790:35:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                        "typeString": "contract OptimisticOracle"
                      }
                    },
                    "src": "785:40:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                      "typeString": "contract OptimisticOracle"
                    }
                  },
                  "id": 24797,
                  "nodeType": "ExpressionStatement",
                  "src": "785:40:19"
                },
                {
                  "expression": {
                    "id": 24806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24798,
                      "name": "alice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24765,
                      "src": "835:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 24803,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "851:17:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TokenReceiver_$25369_$",
                              "typeString": "function () returns (contract TokenReceiver)"
                            },
                            "typeName": {
                              "id": 24802,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 24801,
                                "name": "TokenReceiver",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 25369,
                                "src": "855:13:19"
                              },
                              "referencedDeclaration": 25369,
                              "src": "855:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenReceiver_$25369",
                                "typeString": "contract TokenReceiver"
                              }
                            }
                          },
                          "id": 24804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "851:19:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenReceiver_$25369",
                            "typeString": "contract TokenReceiver"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TokenReceiver_$25369",
                            "typeString": "contract TokenReceiver"
                          }
                        ],
                        "id": 24800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "843:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 24799,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "843:7:19",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 24805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "843:28:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "835:36:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24807,
                  "nodeType": "ExpressionStatement",
                  "src": "835:36:19"
                },
                {
                  "expression": {
                    "id": 24816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24808,
                      "name": "bob",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24767,
                      "src": "881:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 24813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "895:17:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TokenReceiver_$25369_$",
                              "typeString": "function () returns (contract TokenReceiver)"
                            },
                            "typeName": {
                              "id": 24812,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 24811,
                                "name": "TokenReceiver",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 25369,
                                "src": "899:13:19"
                              },
                              "referencedDeclaration": 25369,
                              "src": "899:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenReceiver_$25369",
                                "typeString": "contract TokenReceiver"
                              }
                            }
                          },
                          "id": 24814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "895:19:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenReceiver_$25369",
                            "typeString": "contract TokenReceiver"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TokenReceiver_$25369",
                            "typeString": "contract TokenReceiver"
                          }
                        ],
                        "id": 24810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "887:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 24809,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "887:7:19",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 24815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "887:28:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "881:34:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24817,
                  "nodeType": "ExpressionStatement",
                  "src": "881:34:19"
                },
                {
                  "expression": {
                    "id": 24826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24818,
                      "name": "john",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24769,
                      "src": "925:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 24823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "940:17:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TokenReceiver_$25369_$",
                              "typeString": "function () returns (contract TokenReceiver)"
                            },
                            "typeName": {
                              "id": 24822,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 24821,
                                "name": "TokenReceiver",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 25369,
                                "src": "944:13:19"
                              },
                              "referencedDeclaration": 25369,
                              "src": "944:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenReceiver_$25369",
                                "typeString": "contract TokenReceiver"
                              }
                            }
                          },
                          "id": 24824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "940:19:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenReceiver_$25369",
                            "typeString": "contract TokenReceiver"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TokenReceiver_$25369",
                            "typeString": "contract TokenReceiver"
                          }
                        ],
                        "id": 24820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "932:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 24819,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "932:7:19",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 24825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "932:28:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "925:35:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24827,
                  "nodeType": "ExpressionStatement",
                  "src": "925:35:19"
                },
                {
                  "expression": {
                    "id": 24836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24828,
                      "name": "kyle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24771,
                      "src": "970:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 24833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "985:17:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TokenReceiver_$25369_$",
                              "typeString": "function () returns (contract TokenReceiver)"
                            },
                            "typeName": {
                              "id": 24832,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 24831,
                                "name": "TokenReceiver",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 25369,
                                "src": "989:13:19"
                              },
                              "referencedDeclaration": 25369,
                              "src": "989:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenReceiver_$25369",
                                "typeString": "contract TokenReceiver"
                              }
                            }
                          },
                          "id": 24834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "985:19:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenReceiver_$25369",
                            "typeString": "contract TokenReceiver"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TokenReceiver_$25369",
                            "typeString": "contract TokenReceiver"
                          }
                        ],
                        "id": 24830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "977:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 24829,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "977:7:19",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 24835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "977:28:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "970:35:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24837,
                  "nodeType": "ExpressionStatement",
                  "src": "970:35:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 24843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1039:10:19",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 24840,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24765,
                            "src": "1023:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1015:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 24838,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1015:8:19",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1015:14:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 24842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1015:23:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 24844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1015:35:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24845,
                  "nodeType": "ExpressionStatement",
                  "src": "1015:35:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 24851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1082:10:19",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 24848,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24767,
                            "src": "1068:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1060:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 24846,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1060:8:19",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1060:12:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 24850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1060:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 24852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1060:33:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24853,
                  "nodeType": "ExpressionStatement",
                  "src": "1060:33:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24859,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1122:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$25362",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$25362",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          ],
                          "id": 24858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1114:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24857,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1114:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1114:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "315f3030305f303030",
                        "id": 24861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1129:15:19",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        "value": "1_000_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 24854,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24763,
                        "src": "1104:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25446",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 24856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25445,
                      "src": "1104:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 24862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1104:41:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24863,
                  "nodeType": "ExpressionStatement",
                  "src": "1104:41:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24867,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24765,
                        "src": "1165:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "315f3030305f303030",
                        "id": 24868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1172:15:19",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        "value": "1_000_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 24864,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24763,
                        "src": "1155:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25446",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 24866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25445,
                      "src": "1155:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 24869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1155:33:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24870,
                  "nodeType": "ExpressionStatement",
                  "src": "1155:33:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24874,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24767,
                        "src": "1208:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "315f3030305f303030",
                        "id": 24875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1213:15:19",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        "value": "1_000_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 24871,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24763,
                        "src": "1198:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25446",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 24873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25445,
                      "src": "1198:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 24876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1198:31:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24877,
                  "nodeType": "ExpressionStatement",
                  "src": "1198:31:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24883,
                            "name": "oo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24757,
                            "src": "1261:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                              "typeString": "contract OptimisticOracle"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                              "typeString": "contract OptimisticOracle"
                            }
                          ],
                          "id": 24882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1253:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24881,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1253:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1253:11:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 24887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1271:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 24886,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1271:7:19",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 24885,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1266:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 24888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1266:13:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 24889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1266:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24878,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24763,
                        "src": "1240:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25446",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 24880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23493,
                      "src": "1240:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 24890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1240:44:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24891,
                  "nodeType": "ExpressionStatement",
                  "src": "1240:44:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24895,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24765,
                        "src": "1307:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24892,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24760,
                        "src": "1294:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25418",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 24894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25376,
                      "src": "1294:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 24896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1294:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24897,
                  "nodeType": "ExpressionStatement",
                  "src": "1294:19:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24903,
                            "name": "oo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24757,
                            "src": "1344:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                              "typeString": "contract OptimisticOracle"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                              "typeString": "contract OptimisticOracle"
                            }
                          ],
                          "id": 24902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1336:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24901,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1336:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1336:11:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 24907,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1354:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 24906,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1354:7:19",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 24905,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1349:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 24908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1349:13:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 24909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1349:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24898,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24763,
                        "src": "1323:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25446",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 24900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23493,
                      "src": "1323:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 24910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1323:44:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24911,
                  "nodeType": "ExpressionStatement",
                  "src": "1323:44:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24915,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24767,
                        "src": "1390:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24912,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24760,
                        "src": "1377:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25418",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 24914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25376,
                      "src": "1377:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 24916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1377:17:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24917,
                  "nodeType": "ExpressionStatement",
                  "src": "1377:17:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24923,
                            "name": "oo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24757,
                            "src": "1425:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                              "typeString": "contract OptimisticOracle"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                              "typeString": "contract OptimisticOracle"
                            }
                          ],
                          "id": 24922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1417:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24921,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1417:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1417:11:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 24927,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1435:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 24926,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1435:7:19",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 24925,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1430:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 24928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1430:13:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 24929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1430:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24918,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24763,
                        "src": "1404:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25446",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 24920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23493,
                      "src": "1404:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 24930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1404:44:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24931,
                  "nodeType": "ExpressionStatement",
                  "src": "1404:44:19"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "id": 24933,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "690:5:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24772,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "695:2:19"
            },
            "returnParameters": {
              "id": 24773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "705:0:19"
            },
            "scope": 25362,
            "src": "681:774:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 25105,
              "nodeType": "Block",
              "src": "1501:1370:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "77696c6c20455448206265206f76657220316b20746f6d6f72726f773f",
                        "id": 24939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1563:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        "value": "will ETH be over 1k tomorrow?"
                      },
                      {
                        "hexValue": "68747470733a2f2f636f696e6765636b6f2e636f6d",
                        "id": 24940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1608:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b23b3d4ae85f5b8d09e37316325b8a4548b8b7ce65630611242948ce5487ad7",
                          "typeString": "literal_string \"https://coingecko.com\""
                        },
                        "value": "https://coingecko.com"
                      },
                      {
                        "hexValue": "31303030",
                        "id": 24941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1645:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b23b3d4ae85f5b8d09e37316325b8a4548b8b7ce65630611242948ce5487ad7",
                          "typeString": "literal_string \"https://coingecko.com\""
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 24936,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24757,
                        "src": "1535:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 24938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "askQuestion",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24186,
                      "src": "1535:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,string memory,uint256) external"
                      }
                    },
                    "id": 24942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1535:124:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24943,
                  "nodeType": "ExpressionStatement",
                  "src": "1535:124:19"
                },
                {
                  "assignments": [
                    24945
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24945,
                      "mutability": "mutable",
                      "name": "questionId",
                      "nameLocation": "1677:10:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25105,
                      "src": "1669:18:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 24944,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1669:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24952,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "77696c6c20455448206265206f76657220316b20746f6d6f72726f773f",
                        "id": 24948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1720:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        "value": "will ETH be over 1k tomorrow?"
                      },
                      {
                        "hexValue": "68747470733a2f2f636f696e6765636b6f2e636f6d",
                        "id": 24949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1765:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b23b3d4ae85f5b8d09e37316325b8a4548b8b7ce65630611242948ce5487ad7",
                          "typeString": "literal_string \"https://coingecko.com\""
                        },
                        "value": "https://coingecko.com"
                      },
                      {
                        "hexValue": "31303030",
                        "id": 24950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1802:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b23b3d4ae85f5b8d09e37316325b8a4548b8b7ce65630611242948ce5487ad7",
                          "typeString": "literal_string \"https://coingecko.com\""
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 24946,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24757,
                        "src": "1690:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 24947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getQuestionId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24602,
                      "src": "1690:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory,uint256) pure external returns (bytes32)"
                      }
                    },
                    "id": 24951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1690:126:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1669:147:19"
                },
                {
                  "assignments": [
                    24955
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24955,
                      "mutability": "mutable",
                      "name": "question",
                      "nameLocation": "1842:8:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25105,
                      "src": "1826:24:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$24690_memory_ptr",
                        "typeString": "struct Question"
                      },
                      "typeName": {
                        "id": 24954,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24953,
                          "name": "Question",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24690,
                          "src": "1826:8:19"
                        },
                        "referencedDeclaration": 24690,
                        "src": "1826:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$24690_storage_ptr",
                          "typeString": "struct Question"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24960,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24958,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24945,
                        "src": "1872:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 24956,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24757,
                        "src": "1853:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 24957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getQuestionById",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24568,
                      "src": "1853:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Question_$24690_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct Question memory)"
                      }
                    },
                    "id": 24959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1853:30:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$24690_memory_ptr",
                      "typeString": "struct Question memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1826:57:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 24962,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24955,
                          "src": "1902:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$24690_memory_ptr",
                            "typeString": "struct Question memory"
                          }
                        },
                        "id": 24963,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "questionString",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24679,
                        "src": "1902:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "77696c6c20455448206265206f76657220316b20746f6d6f72726f773f",
                        "id": 24964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1927:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        "value": "will ETH be over 1k tomorrow?"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        }
                      ],
                      "id": 24961,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 1639,
                      "src": "1893:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 24965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1893:66:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24966,
                  "nodeType": "ExpressionStatement",
                  "src": "1893:66:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 24970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2008:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 24967,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24760,
                        "src": "1996:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25418",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 24969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25391,
                      "src": "1996:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 24971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1996:17:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24972,
                  "nodeType": "ExpressionStatement",
                  "src": "1996:17:19"
                },
                {
                  "assignments": [
                    24974
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24974,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "2031:7:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25105,
                      "src": "2023:15:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24973,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2023:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24982,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24979,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2064:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$25362",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$25362",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          ],
                          "id": 24978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2056:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24977,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2056:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2056:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24975,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24763,
                        "src": "2041:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25446",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 24976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23425,
                      "src": "2041:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 24981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2041:29:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2023:47:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24986,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24945,
                        "src": "2097:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 24987,
                          "name": "Result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24655,
                          "src": "2109:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Result_$24655_$",
                            "typeString": "type(enum Result)"
                          }
                        },
                        "id": 24988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "YES",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24653,
                        "src": "2109:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$24655",
                          "typeString": "enum Result"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_enum$_Result_$24655",
                          "typeString": "enum Result"
                        }
                      ],
                      "expression": {
                        "id": 24983,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24757,
                        "src": "2080:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 24985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proposeAnswer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24251,
                      "src": "2080:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_enum$_Result_$24655_$returns$__$",
                        "typeString": "function (bytes32,enum Result) external"
                      }
                    },
                    "id": 24989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2080:40:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24990,
                  "nodeType": "ExpressionStatement",
                  "src": "2080:40:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24992,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24974,
                        "src": "2151:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 24997,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2183:4:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OptimisticOracleTest_$25362",
                                    "typeString": "contract OptimisticOracleTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_OptimisticOracleTest_$25362",
                                    "typeString": "contract OptimisticOracleTest"
                                  }
                                ],
                                "id": 24996,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2175:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 24995,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2175:7:19",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 24998,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2175:13:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 24993,
                              "name": "opti",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24763,
                              "src": "2160:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OPTI_$25446",
                                "typeString": "contract OPTI"
                              }
                            },
                            "id": 24994,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23425,
                            "src": "2160:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 24999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2160:29:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 25000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2192:8:19",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        "src": "2160:40:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24991,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2142:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2142:59:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25003,
                  "nodeType": "ExpressionStatement",
                  "src": "2142:59:19"
                },
                {
                  "assignments": [
                    25006
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25006,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nameLocation": "2253:8:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25105,
                      "src": "2237:24:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$24668_memory_ptr",
                        "typeString": "struct Proposal"
                      },
                      "typeName": {
                        "id": 25005,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 25004,
                          "name": "Proposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24668,
                          "src": "2237:8:19"
                        },
                        "referencedDeclaration": 24668,
                        "src": "2237:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$24668_storage_ptr",
                          "typeString": "struct Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25011,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25009,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24945,
                        "src": "2291:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25007,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24757,
                        "src": "2264:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getProposalByQuestionId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24581,
                      "src": "2264:26:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Proposal_$24668_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct Proposal memory)"
                      }
                    },
                    "id": 25010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2264:38:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$24668_memory_ptr",
                      "typeString": "struct Proposal memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2237:65:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25015,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25006,
                              "src": "2329:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$24668_memory_ptr",
                                "typeString": "struct Proposal memory"
                              }
                            },
                            "id": 25016,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "answer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24665,
                            "src": "2329:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24655",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24655",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2321:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25013,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2321:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2321:24:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25020,
                              "name": "Result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24655,
                              "src": "2355:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Result_$24655_$",
                                "typeString": "type(enum Result)"
                              }
                            },
                            "id": 25021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "YES",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24653,
                            "src": "2355:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24655",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24655",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2347:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25018,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2347:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2347:19:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25012,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2312:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2312:55:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25024,
                  "nodeType": "ExpressionStatement",
                  "src": "2312:55:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 25028,
                              "name": "oo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24757,
                              "src": "2419:2:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                                "typeString": "contract OptimisticOracle"
                              }
                            },
                            "id": 25029,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "DISPUTE_PERIOD",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24117,
                            "src": "2419:17:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 25030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2419:19:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31303031",
                          "id": 25031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2441:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1001_by_1",
                            "typeString": "int_const 1001"
                          },
                          "value": "1001"
                        },
                        "src": "2419:26:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25025,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24760,
                        "src": "2407:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25418",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25391,
                      "src": "2407:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 25033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2407:39:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25034,
                  "nodeType": "ExpressionStatement",
                  "src": "2407:39:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25038,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24945,
                        "src": "2476:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25035,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24757,
                        "src": "2456:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "finalizeProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24312,
                      "src": "2456:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 25039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2456:31:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25040,
                  "nodeType": "ExpressionStatement",
                  "src": "2456:31:19"
                },
                {
                  "expression": {
                    "id": 25046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25041,
                      "name": "question",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24955,
                      "src": "2497:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$24690_memory_ptr",
                        "typeString": "struct Question memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25044,
                          "name": "questionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24945,
                          "src": "2527:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 25042,
                          "name": "oo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24757,
                          "src": "2508:2:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                            "typeString": "contract OptimisticOracle"
                          }
                        },
                        "id": 25043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getQuestionById",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24568,
                        "src": "2508:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Question_$24690_memory_ptr_$",
                          "typeString": "function (bytes32) view external returns (struct Question memory)"
                        }
                      },
                      "id": 25045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2508:30:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$24690_memory_ptr",
                        "typeString": "struct Question memory"
                      }
                    },
                    "src": "2497:41:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$24690_memory_ptr",
                      "typeString": "struct Question memory"
                    }
                  },
                  "id": 25047,
                  "nodeType": "ExpressionStatement",
                  "src": "2497:41:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25051,
                              "name": "question",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24955,
                              "src": "2565:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Question_$24690_memory_ptr",
                                "typeString": "struct Question memory"
                              }
                            },
                            "id": 25052,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stage",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24686,
                            "src": "2565:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Stage_$24660",
                              "typeString": "enum Stage"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Stage_$24660",
                              "typeString": "enum Stage"
                            }
                          ],
                          "id": 25050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2557:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25049,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2557:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2557:23:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25056,
                              "name": "Stage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24660,
                              "src": "2590:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Stage_$24660_$",
                                "typeString": "type(enum Stage)"
                              }
                            },
                            "id": 25057,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "FINALIZED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24659,
                            "src": "2590:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Stage_$24660",
                              "typeString": "enum Stage"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Stage_$24660",
                              "typeString": "enum Stage"
                            }
                          ],
                          "id": 25055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2582:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25054,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2582:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2582:24:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25048,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2548:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2548:59:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25060,
                  "nodeType": "ExpressionStatement",
                  "src": "2548:59:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25064,
                              "name": "question",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24955,
                              "src": "2634:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Question_$24690_memory_ptr",
                                "typeString": "struct Question memory"
                              }
                            },
                            "id": 25065,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "result",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24689,
                            "src": "2634:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24655",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24655",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2626:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25062,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2626:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2626:24:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25069,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25006,
                              "src": "2660:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$24668_memory_ptr",
                                "typeString": "struct Proposal memory"
                              }
                            },
                            "id": 25070,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "answer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24665,
                            "src": "2660:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24655",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24655",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2652:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25067,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2652:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2652:24:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25061,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2617:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2617:60:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25073,
                  "nodeType": "ExpressionStatement",
                  "src": "2617:60:19"
                },
                {
                  "assignments": [
                    25078
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25078,
                      "mutability": "mutable",
                      "name": "questions",
                      "nameLocation": "2706:9:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25105,
                      "src": "2688:27:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Question_$24690_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Question[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 25076,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 25075,
                            "name": "Question",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24690,
                            "src": "2688:8:19"
                          },
                          "referencedDeclaration": 24690,
                          "src": "2688:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$24690_storage_ptr",
                            "typeString": "struct Question"
                          }
                        },
                        "id": 25077,
                        "nodeType": "ArrayTypeName",
                        "src": "2688:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Question_$24690_storage_$dyn_storage_ptr",
                          "typeString": "struct Question[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25082,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 25079,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24757,
                        "src": "2718:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25080,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAllQuestions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24648,
                      "src": "2718:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_struct$_Question_$24690_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (struct Question memory[] memory)"
                      }
                    },
                    "id": 25081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2718:20:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Question_$24690_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Question memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2688:50:19"
                },
                {
                  "expression": {
                    "id": 25088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25083,
                      "name": "question",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24955,
                      "src": "2748:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$24690_memory_ptr",
                        "typeString": "struct Question memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25086,
                          "name": "questionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24945,
                          "src": "2778:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 25084,
                          "name": "oo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24757,
                          "src": "2759:2:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                            "typeString": "contract OptimisticOracle"
                          }
                        },
                        "id": 25085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getQuestionById",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24568,
                        "src": "2759:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Question_$24690_memory_ptr_$",
                          "typeString": "function (bytes32) view external returns (struct Question memory)"
                        }
                      },
                      "id": 25087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2759:30:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$24690_memory_ptr",
                        "typeString": "struct Question memory"
                      }
                    },
                    "src": "2748:41:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$24690_memory_ptr",
                      "typeString": "struct Question memory"
                    }
                  },
                  "id": 25089,
                  "nodeType": "ExpressionStatement",
                  "src": "2748:41:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 25093,
                                "name": "questions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25078,
                                "src": "2817:9:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Question_$24690_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct Question memory[] memory"
                                }
                              },
                              "id": 25095,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 25094,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2827:1:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2817:12:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Question_$24690_memory_ptr",
                                "typeString": "struct Question memory"
                              }
                            },
                            "id": 25096,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "result",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24689,
                            "src": "2817:19:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24655",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24655",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2809:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25091,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2809:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2809:28:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25100,
                              "name": "question",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24955,
                              "src": "2847:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Question_$24690_memory_ptr",
                                "typeString": "struct Question memory"
                              }
                            },
                            "id": 25101,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "result",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24689,
                            "src": "2847:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24655",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24655",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2839:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25098,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2839:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2839:24:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25090,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2800:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2800:64:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25104,
                  "nodeType": "ExpressionStatement",
                  "src": "2800:64:19"
                }
              ]
            },
            "functionSelector": "e3f90828",
            "id": 25106,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testQuestionHappyPath",
            "nameLocation": "1470:21:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24934,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1491:2:19"
            },
            "returnParameters": {
              "id": 24935,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1501:0:19"
            },
            "scope": 25362,
            "src": "1461:1410:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 25360,
              "nodeType": "Block",
              "src": "2915:1916:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "77696c6c20455448206265206f76657220316b20746f6d6f72726f773f",
                        "id": 25112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2977:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        "value": "will ETH be over 1k tomorrow?"
                      },
                      {
                        "hexValue": "68747470733a2f2f636f696e6765636b6f2e636f6d",
                        "id": 25113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3022:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b23b3d4ae85f5b8d09e37316325b8a4548b8b7ce65630611242948ce5487ad7",
                          "typeString": "literal_string \"https://coingecko.com\""
                        },
                        "value": "https://coingecko.com"
                      },
                      {
                        "hexValue": "31303030",
                        "id": 25114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3059:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b23b3d4ae85f5b8d09e37316325b8a4548b8b7ce65630611242948ce5487ad7",
                          "typeString": "literal_string \"https://coingecko.com\""
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 25109,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24757,
                        "src": "2949:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "askQuestion",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24186,
                      "src": "2949:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,string memory,uint256) external"
                      }
                    },
                    "id": 25115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2949:124:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25116,
                  "nodeType": "ExpressionStatement",
                  "src": "2949:124:19"
                },
                {
                  "assignments": [
                    25118
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25118,
                      "mutability": "mutable",
                      "name": "questionId",
                      "nameLocation": "3091:10:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25360,
                      "src": "3083:18:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 25117,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3083:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25125,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "77696c6c20455448206265206f76657220316b20746f6d6f72726f773f",
                        "id": 25121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3134:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        "value": "will ETH be over 1k tomorrow?"
                      },
                      {
                        "hexValue": "68747470733a2f2f636f696e6765636b6f2e636f6d",
                        "id": 25122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3179:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b23b3d4ae85f5b8d09e37316325b8a4548b8b7ce65630611242948ce5487ad7",
                          "typeString": "literal_string \"https://coingecko.com\""
                        },
                        "value": "https://coingecko.com"
                      },
                      {
                        "hexValue": "31303030",
                        "id": 25123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3216:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b23b3d4ae85f5b8d09e37316325b8a4548b8b7ce65630611242948ce5487ad7",
                          "typeString": "literal_string \"https://coingecko.com\""
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 25119,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24757,
                        "src": "3104:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getQuestionId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24602,
                      "src": "3104:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory,uint256) pure external returns (bytes32)"
                      }
                    },
                    "id": 25124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3104:126:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3083:147:19"
                },
                {
                  "assignments": [
                    25128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25128,
                      "mutability": "mutable",
                      "name": "question",
                      "nameLocation": "3256:8:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25360,
                      "src": "3240:24:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$24690_memory_ptr",
                        "typeString": "struct Question"
                      },
                      "typeName": {
                        "id": 25127,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 25126,
                          "name": "Question",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24690,
                          "src": "3240:8:19"
                        },
                        "referencedDeclaration": 24690,
                        "src": "3240:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$24690_storage_ptr",
                          "typeString": "struct Question"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25133,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25131,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25118,
                        "src": "3286:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25129,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24757,
                        "src": "3267:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getQuestionById",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24568,
                      "src": "3267:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Question_$24690_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct Question memory)"
                      }
                    },
                    "id": 25132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3267:30:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$24690_memory_ptr",
                      "typeString": "struct Question memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3240:57:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25135,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25128,
                          "src": "3316:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$24690_memory_ptr",
                            "typeString": "struct Question memory"
                          }
                        },
                        "id": 25136,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "questionString",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24679,
                        "src": "3316:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "77696c6c20455448206265206f76657220316b20746f6d6f72726f773f",
                        "id": 25137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3341:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        "value": "will ETH be over 1k tomorrow?"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        }
                      ],
                      "id": 25134,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 1639,
                      "src": "3307:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 25138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3307:66:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25139,
                  "nodeType": "ExpressionStatement",
                  "src": "3307:66:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 25143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3422:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 25140,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24760,
                        "src": "3410:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25418",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25391,
                      "src": "3410:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 25144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3410:17:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25145,
                  "nodeType": "ExpressionStatement",
                  "src": "3410:17:19"
                },
                {
                  "assignments": [
                    25147
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25147,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "3445:7:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25360,
                      "src": "3437:15:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25146,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3437:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25155,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25152,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3478:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$25362",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$25362",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          ],
                          "id": 25151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3470:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25150,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3470:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3470:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25148,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24763,
                        "src": "3455:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25446",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 25149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23425,
                      "src": "3455:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 25154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3455:29:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3437:47:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25159,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25118,
                        "src": "3511:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 25160,
                          "name": "Result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24655,
                          "src": "3523:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Result_$24655_$",
                            "typeString": "type(enum Result)"
                          }
                        },
                        "id": 25161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "YES",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24653,
                        "src": "3523:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$24655",
                          "typeString": "enum Result"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_enum$_Result_$24655",
                          "typeString": "enum Result"
                        }
                      ],
                      "expression": {
                        "id": 25156,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24757,
                        "src": "3494:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proposeAnswer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24251,
                      "src": "3494:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_enum$_Result_$24655_$returns$__$",
                        "typeString": "function (bytes32,enum Result) external"
                      }
                    },
                    "id": 25162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3494:40:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25163,
                  "nodeType": "ExpressionStatement",
                  "src": "3494:40:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25165,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25147,
                        "src": "3565:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 25170,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3597:4:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OptimisticOracleTest_$25362",
                                    "typeString": "contract OptimisticOracleTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_OptimisticOracleTest_$25362",
                                    "typeString": "contract OptimisticOracleTest"
                                  }
                                ],
                                "id": 25169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3589:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 25168,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3589:7:19",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 25171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3589:13:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 25166,
                              "name": "opti",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24763,
                              "src": "3574:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OPTI_$25446",
                                "typeString": "contract OPTI"
                              }
                            },
                            "id": 25167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23425,
                            "src": "3574:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 25172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3574:29:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 25173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3606:8:19",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        "src": "3574:40:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25164,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3556:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3556:59:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25176,
                  "nodeType": "ExpressionStatement",
                  "src": "3556:59:19"
                },
                {
                  "assignments": [
                    25179
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25179,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nameLocation": "3667:8:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25360,
                      "src": "3651:24:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$24668_memory_ptr",
                        "typeString": "struct Proposal"
                      },
                      "typeName": {
                        "id": 25178,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 25177,
                          "name": "Proposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24668,
                          "src": "3651:8:19"
                        },
                        "referencedDeclaration": 24668,
                        "src": "3651:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$24668_storage_ptr",
                          "typeString": "struct Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25184,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25182,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25118,
                        "src": "3705:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25180,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24757,
                        "src": "3678:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getProposalByQuestionId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24581,
                      "src": "3678:26:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Proposal_$24668_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct Proposal memory)"
                      }
                    },
                    "id": 25183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3678:38:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$24668_memory_ptr",
                      "typeString": "struct Proposal memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3651:65:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25188,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25179,
                              "src": "3743:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$24668_memory_ptr",
                                "typeString": "struct Proposal memory"
                              }
                            },
                            "id": 25189,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "answer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24665,
                            "src": "3743:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24655",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24655",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3735:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25186,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3735:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3735:24:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25193,
                              "name": "Result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24655,
                              "src": "3769:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Result_$24655_$",
                                "typeString": "type(enum Result)"
                              }
                            },
                            "id": 25194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "YES",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24653,
                            "src": "3769:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24655",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24655",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3761:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25191,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3761:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3761:19:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25185,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3726:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3726:55:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25197,
                  "nodeType": "ExpressionStatement",
                  "src": "3726:55:19"
                },
                {
                  "expression": {
                    "id": 25203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25198,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25147,
                      "src": "3820:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25201,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24767,
                          "src": "3845:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 25199,
                          "name": "opti",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24763,
                          "src": "3830:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OPTI_$25446",
                            "typeString": "contract OPTI"
                          }
                        },
                        "id": 25200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 23425,
                        "src": "3830:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 25202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3830:19:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3820:29:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25204,
                  "nodeType": "ExpressionStatement",
                  "src": "3820:29:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25208,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24767,
                        "src": "3872:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25205,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24760,
                        "src": "3859:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25418",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25376,
                      "src": "3859:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3859:17:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25210,
                  "nodeType": "ExpressionStatement",
                  "src": "3859:17:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25214,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25118,
                        "src": "3905:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25211,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24757,
                        "src": "3886:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "disputeProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24382,
                      "src": "3886:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 25215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3886:30:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25216,
                  "nodeType": "ExpressionStatement",
                  "src": "3886:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25218,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25147,
                        "src": "3935:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 25221,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24767,
                              "src": "3959:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 25219,
                              "name": "opti",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24763,
                              "src": "3944:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OPTI_$25446",
                                "typeString": "contract OPTI"
                              }
                            },
                            "id": 25220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23425,
                            "src": "3944:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 25222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3944:19:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 25223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3966:8:19",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        "src": "3944:30:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25217,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3926:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3926:49:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25226,
                  "nodeType": "ExpressionStatement",
                  "src": "3926:49:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 25230,
                              "name": "oo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24757,
                              "src": "4052:2:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                                "typeString": "contract OptimisticOracle"
                              }
                            },
                            "id": 25231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "DISPUTE_PERIOD",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24117,
                            "src": "4052:17:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 25232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4052:19:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31303031",
                          "id": 25233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4074:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1001_by_1",
                            "typeString": "int_const 1001"
                          },
                          "value": "1001"
                        },
                        "src": "4052:26:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25227,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24760,
                        "src": "4040:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25418",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25391,
                      "src": "4040:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 25235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4040:39:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25236,
                  "nodeType": "ExpressionStatement",
                  "src": "4040:39:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "50726f706f73616c207761732064697370757465642c2063616e6e6f742066696e616c697a65",
                        "id": 25240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4109:40:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_89d58efc9aa98f6e7a3374d3a1dd910bdc732f644c38ae5e43799d7e1e9a03cb",
                          "typeString": "literal_string \"Proposal was disputed, cannot finalize\""
                        },
                        "value": "Proposal was disputed, cannot finalize"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_89d58efc9aa98f6e7a3374d3a1dd910bdc732f644c38ae5e43799d7e1e9a03cb",
                          "typeString": "literal_string \"Proposal was disputed, cannot finalize\""
                        }
                      ],
                      "expression": {
                        "id": 25237,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24760,
                        "src": "4089:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25418",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25381,
                      "src": "4089:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 25241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4089:61:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25242,
                  "nodeType": "ExpressionStatement",
                  "src": "4089:61:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25246,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25118,
                        "src": "4180:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25243,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24757,
                        "src": "4160:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "finalizeProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24312,
                      "src": "4160:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 25247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4160:31:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25248,
                  "nodeType": "ExpressionStatement",
                  "src": "4160:31:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 25252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4213:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 25249,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24760,
                        "src": "4201:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25418",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25391,
                      "src": "4201:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 25253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4201:17:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25254,
                  "nodeType": "ExpressionStatement",
                  "src": "4201:17:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25258,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24765,
                        "src": "4260:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25255,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24760,
                        "src": "4247:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25418",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25376,
                      "src": "4247:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4247:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25260,
                  "nodeType": "ExpressionStatement",
                  "src": "4247:19:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25264,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25118,
                        "src": "4288:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 25265,
                          "name": "Result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24655,
                          "src": "4300:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Result_$24655_$",
                            "typeString": "type(enum Result)"
                          }
                        },
                        "id": 25266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "YES",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24653,
                        "src": "4300:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$24655",
                          "typeString": "enum Result"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_enum$_Result_$24655",
                          "typeString": "enum Result"
                        }
                      ],
                      "expression": {
                        "id": 25261,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24757,
                        "src": "4276:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "makeVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24471,
                      "src": "4276:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_enum$_Result_$24655_$returns$__$",
                        "typeString": "function (bytes32,enum Result) external"
                      }
                    },
                    "id": 25267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4276:35:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25268,
                  "nodeType": "ExpressionStatement",
                  "src": "4276:35:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25272,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24767,
                        "src": "4334:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25269,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24760,
                        "src": "4321:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25418",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25376,
                      "src": "4321:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4321:17:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25274,
                  "nodeType": "ExpressionStatement",
                  "src": "4321:17:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25278,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25118,
                        "src": "4360:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 25279,
                          "name": "Result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24655,
                          "src": "4372:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Result_$24655_$",
                            "typeString": "type(enum Result)"
                          }
                        },
                        "id": 25280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "YES",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24653,
                        "src": "4372:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$24655",
                          "typeString": "enum Result"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_enum$_Result_$24655",
                          "typeString": "enum Result"
                        }
                      ],
                      "expression": {
                        "id": 25275,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24757,
                        "src": "4348:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "makeVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24471,
                      "src": "4348:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_enum$_Result_$24655_$returns$__$",
                        "typeString": "function (bytes32,enum Result) external"
                      }
                    },
                    "id": 25281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4348:35:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25282,
                  "nodeType": "ExpressionStatement",
                  "src": "4348:35:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25286,
                        "name": "john",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24769,
                        "src": "4406:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25283,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24760,
                        "src": "4393:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25418",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25376,
                      "src": "4393:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4393:18:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25288,
                  "nodeType": "ExpressionStatement",
                  "src": "4393:18:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25292,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25118,
                        "src": "4433:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 25293,
                          "name": "Result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24655,
                          "src": "4445:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Result_$24655_$",
                            "typeString": "type(enum Result)"
                          }
                        },
                        "id": 25294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "YES",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24653,
                        "src": "4445:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$24655",
                          "typeString": "enum Result"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_enum$_Result_$24655",
                          "typeString": "enum Result"
                        }
                      ],
                      "expression": {
                        "id": 25289,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24757,
                        "src": "4421:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "makeVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24471,
                      "src": "4421:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_enum$_Result_$24655_$returns$__$",
                        "typeString": "function (bytes32,enum Result) external"
                      }
                    },
                    "id": 25295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4421:35:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25296,
                  "nodeType": "ExpressionStatement",
                  "src": "4421:35:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25300,
                        "name": "kyle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24771,
                        "src": "4479:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25297,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24760,
                        "src": "4466:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25418",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25376,
                      "src": "4466:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4466:18:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25302,
                  "nodeType": "ExpressionStatement",
                  "src": "4466:18:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25306,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25118,
                        "src": "4506:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 25307,
                          "name": "Result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24655,
                          "src": "4518:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Result_$24655_$",
                            "typeString": "type(enum Result)"
                          }
                        },
                        "id": 25308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "NO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24654,
                        "src": "4518:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$24655",
                          "typeString": "enum Result"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_enum$_Result_$24655",
                          "typeString": "enum Result"
                        }
                      ],
                      "expression": {
                        "id": 25303,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24757,
                        "src": "4494:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "makeVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24471,
                      "src": "4494:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_enum$_Result_$24655_$returns$__$",
                        "typeString": "function (bytes32,enum Result) external"
                      }
                    },
                    "id": 25309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4494:34:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25310,
                  "nodeType": "ExpressionStatement",
                  "src": "4494:34:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 25314,
                              "name": "oo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24757,
                              "src": "4576:2:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                                "typeString": "contract OptimisticOracle"
                              }
                            },
                            "id": 25315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "VOTING_PERIOD",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24119,
                            "src": "4576:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 25316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4576:18:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31303031",
                          "id": 25317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4597:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1001_by_1",
                            "typeString": "int_const 1001"
                          },
                          "value": "1001"
                        },
                        "src": "4576:25:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25311,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24760,
                        "src": "4564:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25418",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25391,
                      "src": "4564:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 25319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4564:38:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25320,
                  "nodeType": "ExpressionStatement",
                  "src": "4564:38:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25324,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25118,
                        "src": "4628:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25321,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24757,
                        "src": "4612:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "finalizeVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24555,
                      "src": "4612:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 25325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4612:27:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25326,
                  "nodeType": "ExpressionStatement",
                  "src": "4612:27:19"
                },
                {
                  "expression": {
                    "id": 25332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25327,
                      "name": "question",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25128,
                      "src": "4649:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$24690_memory_ptr",
                        "typeString": "struct Question memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25330,
                          "name": "questionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25118,
                          "src": "4679:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 25328,
                          "name": "oo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24757,
                          "src": "4660:2:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracle_$24649",
                            "typeString": "contract OptimisticOracle"
                          }
                        },
                        "id": 25329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getQuestionById",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24568,
                        "src": "4660:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Question_$24690_memory_ptr_$",
                          "typeString": "function (bytes32) view external returns (struct Question memory)"
                        }
                      },
                      "id": 25331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4660:30:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$24690_memory_ptr",
                        "typeString": "struct Question memory"
                      }
                    },
                    "src": "4649:41:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$24690_memory_ptr",
                      "typeString": "struct Question memory"
                    }
                  },
                  "id": 25333,
                  "nodeType": "ExpressionStatement",
                  "src": "4649:41:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25337,
                              "name": "question",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25128,
                              "src": "4717:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Question_$24690_memory_ptr",
                                "typeString": "struct Question memory"
                              }
                            },
                            "id": 25338,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stage",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24686,
                            "src": "4717:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Stage_$24660",
                              "typeString": "enum Stage"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Stage_$24660",
                              "typeString": "enum Stage"
                            }
                          ],
                          "id": 25336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4709:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25335,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4709:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4709:23:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25342,
                              "name": "Stage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24660,
                              "src": "4742:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Stage_$24660_$",
                                "typeString": "type(enum Stage)"
                              }
                            },
                            "id": 25343,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "FINALIZED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24659,
                            "src": "4742:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Stage_$24660",
                              "typeString": "enum Stage"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Stage_$24660",
                              "typeString": "enum Stage"
                            }
                          ],
                          "id": 25341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4734:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25340,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4734:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4734:24:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25334,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "4700:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4700:59:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25346,
                  "nodeType": "ExpressionStatement",
                  "src": "4700:59:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25350,
                              "name": "question",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25128,
                              "src": "4786:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Question_$24690_memory_ptr",
                                "typeString": "struct Question memory"
                              }
                            },
                            "id": 25351,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "result",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24689,
                            "src": "4786:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24655",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24655",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4778:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25348,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4778:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4778:24:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25355,
                              "name": "Result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24655,
                              "src": "4812:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Result_$24655_$",
                                "typeString": "type(enum Result)"
                              }
                            },
                            "id": 25356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "YES",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24653,
                            "src": "4812:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24655",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24655",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4804:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25353,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4804:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4804:19:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25347,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "4769:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4769:55:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25359,
                  "nodeType": "ExpressionStatement",
                  "src": "4769:55:19"
                }
              ]
            },
            "functionSelector": "74b9983a",
            "id": 25361,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testQuestionSadPath",
            "nameLocation": "2886:19:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2905:2:19"
            },
            "returnParameters": {
              "id": 25108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2915:0:19"
            },
            "scope": 25362,
            "src": "2877:1954:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 25370,
        "src": "437:4396:19",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25363,
              "name": "ERC1155Holder",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23292,
              "src": "4861:13:19"
            },
            "id": 25364,
            "nodeType": "InheritanceSpecifier",
            "src": "4861:13:19"
          }
        ],
        "canonicalName": "TokenReceiver",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 25369,
        "linearizedBaseContracts": [
          25369,
          23292,
          23326,
          23241,
          24062,
          24074
        ],
        "name": "TokenReceiver",
        "nameLocation": "4844:13:19",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 25367,
              "nodeType": "Block",
              "src": "4908:2:19",
              "statements": []
            },
            "id": 25368,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4888:2:19"
            },
            "returnParameters": {
              "id": 25366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4908:0:19"
            },
            "scope": 25369,
            "src": "4881:29:19",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 25370,
        "src": "4835:77:19",
        "usedErrors": []
      }
    ],
    "src": "39:4874:19"
  }
}