{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testQuestionHappyPath",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testQuestionSadPath",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "437:4209:20:-:0;;;1572:26:0;;;-1:-1:-1;;170:28:1;;;;;437:4209:20;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "437:4209:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;681:774;;;:::i;:::-;;321:38:1;;250:64;321:38;;;;;-1:-1:-1;;;;;189:32:24;;;171:51;;159:2;144:18;321:38:1;;;;;;;;2690:1954:20;;;:::i;1819:584:0:-;;;:::i;:::-;;;398:14:24;;391:22;373:41;;361:2;346:18;1819:584:0;233:187:24;1461:1223:20;;;:::i;170:28:1:-;;;;;;;;;;;;1572:26:0;;;;;;;;;681:774:20;715:6;:33;;-1:-1:-1;;;;;;715:33:20;1671:64:0;715:33:20;;;765:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;758:4:20;:17;;-1:-1:-1;;;;;;758:17:20;-1:-1:-1;;;;;758:17:20;;;;;;;;;790:35;;;;;:::i;:::-;-1:-1:-1;;;;;189:32:24;;;171:51;;159:2;144:18;790:35:20;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;785:2:20;:40;;-1:-1:-1;;;;;;785:40:20;-1:-1:-1;;;;;785:40:20;;;;;;;;;;851:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;835:5:20;:36;;-1:-1:-1;;;;;;835:36:20;-1:-1:-1;;;;;835:36:20;;;;;;;;;;895:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;881:3:20;:34;;-1:-1:-1;;;;;;881:34:20;-1:-1:-1;;;;;881:34:20;;;;;;;;;;940:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;925:4:20;:35;;-1:-1:-1;;;;;;925:35:20;-1:-1:-1;;;;;925:35:20;;;;;;;;;;985:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;970:4:20;:35;;-1:-1:-1;;;;;;970:35:20;-1:-1:-1;;;;;970:35:20;;;;;;1023:5;;1015:35;;1023:5;;;-1:-1:-1;;1039:10:20;;-1:-1:-1;1015:35:20;-1:-1:-1;1015:35:20;1039:10;1023:5;-1:-1:-1;1015:35:20;;;;;;;;;;;;;;;;;;;-1:-1:-1;1068:3:20;;1060:33;;-1:-1:-1;;;;;1068:3:20;;;;;;1082:10;;1068:3;1060:33;1068:3;1060:33;1082:10;1068:3;;1060:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;1104:4:20;;:41;;-1:-1:-1;;;1104:41:20;;1122:4;1104:41;;;839:51:24;1129:15:20;906:18:24;;;899:34;-1:-1:-1;;;;;1104:4:20;;;;:9;;812:18:24;;1104:41:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1155:4:20;;1165:5;;1155:33;;-1:-1:-1;;;1155:33:20;;-1:-1:-1;;;;;1165:5:20;;;1155:33;;;839:51:24;1172:15:20;906:18:24;;;899:34;1155:4:20;;;-1:-1:-1;1155:9:20;;-1:-1:-1;812:18:24;;1155:33:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1198:4:20;;1208:3;;1198:31;;-1:-1:-1;;;1198:31:20;;-1:-1:-1;;;;;1208:3:20;;;1198:31;;;839:51:24;1213:15:20;906:18:24;;;899:34;1198:4:20;;;-1:-1:-1;1198:9:20;;-1:-1:-1;812:18:24;;1198:31:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1240:4:20;;1261:2;;1240:44;;-1:-1:-1;;;1240:44:20;;-1:-1:-1;;;;;1261:2:20;;;1240:44;;;839:51:24;-1:-1:-1;;906:18:24;;;899:34;1240:4:20;;;-1:-1:-1;1240:12:20;;-1:-1:-1;812:18:24;;1240:44:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1294:6:20;;1307:5;;1294:19;;-1:-1:-1;;;1294:19:20;;-1:-1:-1;;;;;1307:5:20;;;1294:19;;;171:51:24;1294:6:20;;;:12;;144:18:24;;1294:19:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1323:4:20;;1344:2;;1323:44;;-1:-1:-1;;;1323:44:20;;-1:-1:-1;;;;;1344:2:20;;;1323:44;;;839:51:24;-1:-1:-1;;906:18:24;;;899:34;1323:4:20;;;-1:-1:-1;1323:12:20;;-1:-1:-1;812:18:24;;1323:44:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1377:6:20;;1390:3;;1377:17;;-1:-1:-1;;;1377:17:20;;-1:-1:-1;;;;;1390:3:20;;;1377:17;;;171:51:24;1377:6:20;;;:12;;144:18:24;;1377:17:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1404:4:20;;1425:2;;1404:44;;-1:-1:-1;;;1404:44:20;;-1:-1:-1;;;;;1425:2:20;;;1404:44;;;839:51:24;-1:-1:-1;;906:18:24;;;899:34;1404:4:20;;;-1:-1:-1;1404:12:20;;-1:-1:-1;812:18:24;;1404:44:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;681:774::o;2690:1954::-;2762:2;;:124;;-1:-1:-1;;;2762:124:20;;-1:-1:-1;;;;;2762:2:20;;;;:14;;:124;;2872:4;;2762:124;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2917:2:20;;:126;;-1:-1:-1;;;2917:126:20;;2896:18;;-1:-1:-1;;;;;;2917:2:20;;;;-1:-1:-1;2917:16:20;;:126;;3029:4;;2917:126;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3080:2;;:30;;-1:-1:-1;;;3080:30:20;;;;;2526:25:24;;;2896:147:20;;-1:-1:-1;3053:24:20;;-1:-1:-1;;;;;3080:2:20;;;;:18;;2499::24;;3080:30:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3080:30:20;;;;;;;;;;;;:::i;:::-;3053:57;;3120:66;3129:8;:23;;;3120:66;;;;;;;;;;;;;;;;;:8;:66::i;:::-;3223:6;;:17;;-1:-1:-1;;;3223:17:20;;3235:4;3223:17;;;2526:25:24;-1:-1:-1;;;;;3223:6:20;;;;:11;;2499:18:24;;3223:17:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3268:4:20;;:29;;-1:-1:-1;;;3268:29:20;;3291:4;3268:29;;;171:51:24;3250:15:20;;-1:-1:-1;;;;;;3268:4:20;;;;-1:-1:-1;3268:14:20;;144:18:24;;3268:29:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3307:2;;:40;;-1:-1:-1;;;3307:40:20;;3250:47;;-1:-1:-1;;;;;;3307:2:20;;:16;;:40;;3324:10;;3307:2;;:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3387:4:20;;:29;;-1:-1:-1;;;3387:29:20;;3410:4;3387:29;;;171:51:24;3369:59:20;;-1:-1:-1;3378:7:20;;-1:-1:-1;;;;;;3387:4:20;;;;:14;;144:18:24;;3387:29:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;3419:8;3387:40;:::i;:::-;3369:8;:59::i;:::-;3491:2;;:38;;-1:-1:-1;;;3491:38:20;;;;;2526:25:24;;;3464:24:20;;-1:-1:-1;;;;;3491:2:20;;:26;;2499:18:24;;3491:38:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3464:65;;3539:55;3556:8;:15;;;3548:24;;;;;;;;:::i;:::-;3582:10;3369:8;:59::i;3539:55::-;3643:4;;3658:3;;3643:19;;-1:-1:-1;;;3643:19:20;;-1:-1:-1;;;;;3658:3:20;;;3643:19;;;171:51:24;3643:4:20;;;:14;;144:18:24;;3643:19:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3672:6;;3685:3;;3672:17;;-1:-1:-1;;;3672:17:20;;-1:-1:-1;;;;;3685:3:20;;;3672:17;;;171:51:24;3633:29:20;;-1:-1:-1;3672:6:20;;:12;;144:18:24;;3672:17:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3699:2:20;;:30;;-1:-1:-1;;;3699:30:20;;;;;2526:25:24;;;-1:-1:-1;;;;;3699:2:20;;;;-1:-1:-1;3699:18:20;;-1:-1:-1;2499:18:24;;3699:30:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3757:4:20;;3772:3;;3757:19;;-1:-1:-1;;;3757:19:20;;-1:-1:-1;;;;;3772:3:20;;;3757:19;;;171:51:24;3739:49:20;;-1:-1:-1;3748:7:20;;-1:-1:-1;3757:4:20;;;:14;;144:18:24;;3757:19:20;14:214:24;3739:49:20;3853:6;;3865:2;;:19;;;-1:-1:-1;;;3865:19:20;;;;-1:-1:-1;;;;;3853:6:20;;;;:11;;3865:2;;:17;;:19;;;;;;;;;;;;;;:2;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;3887:4;3865:26;:::i;:::-;3853:39;;;;;;;;;;;;;2526:25:24;;2514:2;2499:18;;2380:177;3853:39:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3902:6:20;;:61;;-1:-1:-1;;;3902:61:20;;7362:2:24;3902:61:20;;;7344:21:24;7401:2;7381:18;;;7374:30;7440:34;7420:18;;;7413:62;-1:-1:-1;;;7491:18:24;;;7484:36;-1:-1:-1;;;;;3902:6:20;;;;-1:-1:-1;3902:19:20;;-1:-1:-1;7537:19:24;;3902:61:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3973:2:20;;:31;;-1:-1:-1;;;3973:31:20;;;;;2526:25:24;;;-1:-1:-1;;;;;3973:2:20;;;;-1:-1:-1;3973:19:20;;-1:-1:-1;2499:18:24;;3973:31:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4014:6:20;;:17;;-1:-1:-1;;;4014:17:20;;4026:4;4014:17;;;2526:25:24;-1:-1:-1;;;;;4014:6:20;;;;-1:-1:-1;4014:11:20;;-1:-1:-1;2499:18:24;;4014:17:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4060:6:20;;4073:5;;4060:19;;-1:-1:-1;;;4060:19:20;;-1:-1:-1;;;;;4073:5:20;;;4060:19;;;171:51:24;4060:6:20;;;-1:-1:-1;4060:12:20;;-1:-1:-1;144:18:24;;4060:19:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4089:2:20;;:35;;-1:-1:-1;;;4089:35:20;;-1:-1:-1;;;;;4089:2:20;;;;-1:-1:-1;4089:11:20;;-1:-1:-1;4089:35:20;;4101:10;;4089:2;;:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4134:6:20;;4147:3;;4134:17;;-1:-1:-1;;;4134:17:20;;-1:-1:-1;;;;;4147:3:20;;;4134:17;;;171:51:24;4134:6:20;;;-1:-1:-1;4134:12:20;;-1:-1:-1;144:18:24;;4134:17:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4161:2:20;;:35;;-1:-1:-1;;;4161:35:20;;-1:-1:-1;;;;;4161:2:20;;;;-1:-1:-1;4161:11:20;;-1:-1:-1;4161:35:20;;4173:10;;4161:2;;:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4206:6:20;;4219:4;;4206:18;;-1:-1:-1;;;4206:18:20;;-1:-1:-1;;;;;4219:4:20;;;4206:18;;;171:51:24;4206:6:20;;;-1:-1:-1;4206:12:20;;-1:-1:-1;144:18:24;;4206::20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4234:2:20;;:35;;-1:-1:-1;;;4234:35:20;;-1:-1:-1;;;;;4234:2:20;;;;-1:-1:-1;4234:11:20;;-1:-1:-1;4234:35:20;;4246:10;;4234:2;;:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4279:6:20;;4292:4;;4279:18;;-1:-1:-1;;;4279:18:20;;-1:-1:-1;;;;;4292:4:20;;;4279:18;;;171:51:24;4279:6:20;;;-1:-1:-1;4279:12:20;;-1:-1:-1;144:18:24;;4279::20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4307:2:20;;:34;;-1:-1:-1;;;4307:34:20;;-1:-1:-1;;;;;4307:2:20;;;;-1:-1:-1;4307:11:20;;-1:-1:-1;4307:34:20;;4319:10;;4331:9;;4307:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4377:6:20;;4389:2;;:18;;;-1:-1:-1;;;4389:18:20;;;;-1:-1:-1;;;;;4377:6:20;;;;-1:-1:-1;4377:11:20;;-1:-1:-1;4389:2:20;;;;;:16;;:18;;;;;;;;;;;;;;:2;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:25;;4410:4;4389:25;:::i;:::-;4377:38;;;;;;;;;;;;;2526:25:24;;2514:2;2499:18;;2380:177;4377:38:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4425:2:20;;:27;;-1:-1:-1;;;4425:27:20;;;;;2526:25:24;;;-1:-1:-1;;;;;4425:2:20;;;;-1:-1:-1;4425:15:20;;-1:-1:-1;2499:18:24;;4425:27:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4473:2:20;;:30;;-1:-1:-1;;;4473:30:20;;;;;2526:25:24;;;-1:-1:-1;;;;;4473:2:20;;;;-1:-1:-1;4473:18:20;;-1:-1:-1;2499:18:24;;4473:30:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4473:30:20;;;;;;;;;;;;:::i;:::-;4462:41;;4513:59;4530:8;:14;;;4522:23;;;;;;;;:::i;:::-;4555:15;3369:8;:59::i;4513:::-;4582:55;4599:8;:15;;;4591:24;;;;;;;;:::i;4582:55::-;2728:1916;;;;2690:1954::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;839:51:24;;;-1:-1:-1;;;906:18:24;;;899:34;2196:43:0;;;;;;;;;812:18:24;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;1461:1223:20:-;1535:2;;:124;;-1:-1:-1;;;1535:124:20;;-1:-1:-1;;;;;1535:2:20;;;;:14;;:124;;1645:4;;1535:124;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1690:2:20;;:126;;-1:-1:-1;;;1690:126:20;;1669:18;;-1:-1:-1;;;;;;1690:2:20;;;;-1:-1:-1;1690:16:20;;:126;;1802:4;;1690:126;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1853:2;;:30;;-1:-1:-1;;;1853:30:20;;;;;2526:25:24;;;1669:147:20;;-1:-1:-1;1826:24:20;;-1:-1:-1;;;;;1853:2:20;;;;:18;;2499::24;;1853:30:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1853:30:20;;;;;;;;;;;;:::i;:::-;1826:57;;1893:66;1902:8;:23;;;1893:66;;;;;;;;;;;;;;;;;:8;:66::i;:::-;1996:6;;:17;;-1:-1:-1;;;1996:17:20;;2008:4;1996:17;;;2526:25:24;-1:-1:-1;;;;;1996:6:20;;;;:11;;2499:18:24;;1996:17:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2041:4:20;;:29;;-1:-1:-1;;;2041:29:20;;2064:4;2041:29;;;171:51:24;2023:15:20;;-1:-1:-1;;;;;;2041:4:20;;;;-1:-1:-1;2041:14:20;;144:18:24;;2041:29:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2080:2;;:40;;-1:-1:-1;;;2080:40:20;;2023:47;;-1:-1:-1;;;;;;2080:2:20;;:16;;:40;;2097:10;;2080:2;;:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2160:4:20;;:29;;-1:-1:-1;;;2160:29:20;;2183:4;2160:29;;;171:51:24;2142:59:20;;-1:-1:-1;2151:7:20;;-1:-1:-1;;;;;;2160:4:20;;;;:14;;144:18:24;;2160:29:20;14:214:24;2142:59:20;2264:2;;:38;;-1:-1:-1;;;2264:38:20;;;;;2526:25:24;;;2237:24:20;;-1:-1:-1;;;;;2264:2:20;;:26;;2499:18:24;;2264:38:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2237:65;;2312:55;2329:8;:15;;;2321:24;;;;;;;;:::i;2312:55::-;2407:6;;2419:2;;:19;;;-1:-1:-1;;;2419:19:20;;;;-1:-1:-1;;;;;2407:6:20;;;;:11;;2419:2;;:17;;:19;;;;;;;;;;;;;;:2;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;2441:4;2419:26;:::i;:::-;2407:39;;;;;;;;;;;;;2526:25:24;;2514:2;2499:18;;2380:177;2407:39:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2456:2:20;;:31;;-1:-1:-1;;;2456:31:20;;;;;2526:25:24;;;-1:-1:-1;;;;;2456:2:20;;;;-1:-1:-1;2456:19:20;;-1:-1:-1;2499:18:24;;2456:31:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2508:2:20;;:30;;-1:-1:-1;;;2508:30:20;;;;;2526:25:24;;;-1:-1:-1;;;;;2508:2:20;;;;-1:-1:-1;2508:18:20;;-1:-1:-1;2499:18:24;;2508:30:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2508:30:20;;;;;;;;;;;;:::i;:::-;2497:41;;2548:59;2565:8;:14;;;2557:23;;;;;;;;:::i;2548:59::-;2617:60;2634:8;:15;;;2626:24;;;;;;;;:::i;:::-;2660:8;:15;;;2652:24;;;;;;;;:::i;14688:344:0:-;14824:1;14807:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14797:30;;;;;;14790:1;14773:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14763:30;;;;;;:64;14759:267;;14848:43;;;;;8984:2:24;8966:21;;;9023:2;9003:18;;;8996:30;9062:34;9057:2;9042:18;;9035:62;-1:-1:-1;;;9128:2:24;9113:18;;9106:34;9172:3;9157:19;;8782:400;14848:43:0;;;;;;;;14910:33;14941:1;14910:33;;;;;;:::i;:::-;;;;;;;;14962;14993:1;14962:33;;;;;;:::i;:::-;;;;;;;;15009:6;:4;:6::i;:::-;14688:344;;:::o;5202:262::-;5264:1;5259;:6;5255:203;;5286:41;;;;;10870:2:24;10852:21;;;10909:2;10889:18;;;10882:30;10948:34;10943:2;10928:18;;10921:62;-1:-1:-1;;;11014:2:24;10999:18;;10992:32;11056:3;11041:19;;10668:398;5286:41:0;;;;;;;;5346:31;5375:1;5346:31;;;;;;:::i;:::-;;;;;;;;5396;5425:1;5396:31;;;;;;:::i;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;11979:51:24;;;-1:-1:-1;;;12046:18:24;;;12039:34;;;;2705:4:0;12089:18:24;;;12082:34;2482:11:0;;1671:64;2579:43;;11952:18:24;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;1223:277:24:-;1290:6;1343:2;1331:9;1322:7;1318:23;1314:32;1311:52;;;1359:1;1356;1349:12;1311:52;1391:9;1385:16;1444:5;1437:13;1430:21;1423:5;1420:32;1410:60;;1466:1;1463;1456:12;1410:60;1489:5;1223:277;-1:-1:-1;;;1223:277:24:o;1505:681::-;1847:2;1829:21;;;1886:2;1866:18;;;1859:30;1926:31;1920:3;1905:19;;1898:60;1996:3;1989:4;1974:20;;1967:33;;;2037:2;2016:19;;;2009:31;-1:-1:-1;;;2071:3:24;2056:19;;2049:52;-1:-1:-1;2153:18:24;;2146:34;;;;2133:3;2118:19;;1505:681::o;2191:184::-;2261:6;2314:2;2302:9;2293:7;2289:23;2285:32;2282:52;;;2330:1;2327;2320:12;2282:52;-1:-1:-1;2353:16:24;;2191:184;-1:-1:-1;2191:184:24:o;2562:127::-;2623:10;2618:3;2614:20;2611:1;2604:31;2654:4;2651:1;2644:15;2678:4;2675:1;2668:15;2694:248;2761:2;2755:9;2803:4;2791:17;;2838:18;2823:34;;2859:22;;;2820:62;2817:88;;;2885:18;;:::i;:::-;2921:2;2914:22;2694:248;:::o;2947:258::-;3019:1;3029:113;3043:6;3040:1;3037:13;3029:113;;;3119:11;;;3113:18;3100:11;;;3093:39;3065:2;3058:10;3029:113;;;3160:6;3157:1;3154:13;3151:48;;;-1:-1:-1;;3195:1:24;3177:16;;3170:27;2947:258::o;3210:686::-;3264:5;3317:3;3310:4;3302:6;3298:17;3294:27;3284:55;;3335:1;3332;3325:12;3284:55;3364:6;3358:13;3390:18;3427:2;3423;3420:10;3417:36;;;3433:18;;:::i;:::-;3508:2;3502:9;3476:2;3562:13;;-1:-1:-1;;3558:22:24;;;3582:2;3554:31;3550:40;3538:53;;;3606:18;;;3626:22;;;3603:46;3600:72;;;3652:18;;:::i;:::-;3692:10;3688:2;3681:22;3727:2;3719:6;3712:18;3773:3;3766:4;3761:2;3753:6;3749:15;3745:26;3742:35;3739:55;;;3790:1;3787;3780:12;3739:55;3803:63;3863:2;3856:4;3848:6;3844:17;3837:4;3829:6;3825:17;3803:63;:::i;:::-;3884:6;3210:686;-1:-1:-1;;;;;;3210:686:24:o;3901:151::-;3984:13;;4026:1;4016:12;;4006:40;;4042:1;4039;4032:12;4057:1056;4154:6;4207:2;4195:9;4186:7;4182:23;4178:32;4175:52;;;4223:1;4220;4213:12;4175:52;4256:9;4250:16;4285:18;4326:2;4318:6;4315:14;4312:34;;;4342:1;4339;4332:12;4312:34;4365:22;;;;4421:4;4403:16;;;4399:27;4396:47;;;4439:1;4436;4429:12;4396:47;4465:17;;:::i;:::-;4513:2;4507:9;4541:2;4531:8;4528:16;4525:36;;;4557:1;4554;4547:12;4525:36;4584:56;4632:7;4621:8;4617:2;4613:17;4584:56;:::i;:::-;4577:5;4570:71;;4680:2;4676;4672:11;4666:18;4709:2;4699:8;4696:16;4693:36;;;4725:1;4722;4715:12;4693:36;4761:56;4809:7;4798:8;4794:2;4790:17;4761:56;:::i;:::-;4756:2;4749:5;4745:14;4738:80;;4864:2;4860;4856:11;4850:18;4845:2;4838:5;4834:14;4827:42;4907:2;4903;4899:11;4893:18;4878:33;;4942:1;4933:7;4930:14;4920:42;;4958:1;4955;4948:12;4920:42;4994:7;4989:2;4982:5;4978:14;4971:31;5035:47;5077:3;5073:2;5069:12;5035:47;:::i;:::-;5029:3;5018:15;;5011:72;5022:5;4057:1056;-1:-1:-1;;;;;4057:1056:24:o;5500:127::-;5561:10;5556:3;5552:20;5549:1;5542:31;5592:4;5589:1;5582:15;5616:4;5613:1;5606:15;5632:411;5816:25;;;5804:2;5789:18;;5871:1;5860:13;;5850:144;;5916:10;5911:3;5907:20;5904:1;5897:31;5951:4;5948:1;5941:15;5979:4;5976:1;5969:15;5850:144;6030:6;6025:2;6014:9;6010:18;6003:34;5632:411;;;;;:::o;6048:225::-;6088:3;6119:1;6115:6;6112:1;6109:13;6106:136;;;6164:10;6159:3;6155:20;6152:1;6145:31;6199:4;6196:1;6189:15;6227:4;6224:1;6217:15;6106:136;-1:-1:-1;6258:9:24;;6048:225::o;6278:696::-;6375:6;6428:2;6416:9;6407:7;6403:23;6399:32;6396:52;;;6444:1;6441;6434:12;6396:52;6477:2;6471:9;6519:2;6511:6;6507:15;6588:6;6576:10;6573:22;6552:18;6540:10;6537:34;6534:62;6531:88;;;6599:18;;:::i;:::-;6635:2;6628:22;6672:16;;-1:-1:-1;;;;;6717:31:24;;6707:42;;6697:70;;6763:1;6760;6753:12;6697:70;6776:21;;6830:53;6879:2;6864:18;;6830:53;:::i;:::-;6825:2;6817:6;6813:15;6806:78;6938:2;6927:9;6923:18;6917:25;6912:2;6904:6;6900:15;6893:50;6962:6;6952:16;;;6278:696;;;;:::o;7846:371::-;-1:-1:-1;;;;;;8031:33:24;;8019:46;;8088:13;;8001:3;;8110:61;8088:13;8160:1;8151:11;;8144:4;8132:17;;8110:61;:::i;:::-;8191:16;;;;8209:1;8187:24;;7846:371;-1:-1:-1;;;7846:371:24:o;8222:274::-;8351:3;8389:6;8383:13;8405:53;8451:6;8446:3;8439:4;8431:6;8427:17;8405:53;:::i;:::-;8474:16;;;;;8222:274;-1:-1:-1;;8222:274:24:o;9351:258::-;9393:3;9431:5;9425:12;9458:6;9453:3;9446:19;9474:63;9530:6;9523:4;9518:3;9514:14;9507:4;9500:5;9496:16;9474:63;:::i;:::-;9591:2;9570:15;-1:-1:-1;;9566:29:24;9557:39;;;;9598:4;9553:50;;9351:258;-1:-1:-1;;9351:258:24:o;9614:440::-;9864:2;9853:9;9846:21;9827:4;9890:49;9935:2;9924:9;9920:18;9264:2;9252:15;;-1:-1:-1;;;9292:4:24;9283:14;;9276:36;9337:2;9328:12;;9187:159;9890:49;9987:9;9979:6;9975:22;9970:2;9959:9;9955:18;9948:50;10015:33;10041:6;10033;10015:33;:::i;:::-;10007:41;9614:440;-1:-1:-1;;;;9614:440:24:o;10223:::-;10473:2;10462:9;10455:21;10436:4;10499:49;10544:2;10533:9;10529:18;10136:2;10124:15;;-1:-1:-1;;;10164:4:24;10155:14;;10148:36;10209:2;10200:12;;10059:159;11071:348;11301:2;11290:9;11283:21;11264:4;11321:49;11366:2;11355:9;11351:18;9264:2;9252:15;;-1:-1:-1;;;9292:4:24;9283:14;;9276:36;9337:2;9328:12;;9187:159;11321:49;11313:57;;11406:6;11401:2;11390:9;11386:18;11379:34;11071:348;;;;:::o;11424:::-;11654:2;11643:9;11636:21;11617:4;11674:49;11719:2;11708:9;11704:18;10136:2;10124:15;;-1:-1:-1;;;10164:4:24;10155:14;;10148:36;10209:2;10200:12;;10059:159",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/Users/alexander/dev/opti/contracts/src/test/OptimisticOracleTest.sol",
    "exportedSymbols": {
      "CheatCodes": [
        25552
      ],
      "DSTest": [
        1786
      ],
      "ERC1155Holder": [
        23292
      ],
      "OPTI": [
        25580
      ],
      "OptimisticOracle": [
        24594
      ],
      "OptimisticOracleTest": [
        25304
      ],
      "Proposal": [
        24641
      ],
      "Question": [
        24663
      ],
      "Result": [
        24628
      ],
      "Script": [
        2049
      ],
      "Stage": [
        24633
      ],
      "StdStorage": [
        5077
      ],
      "Test": [
        4979
      ],
      "TokenReceiver": [
        25311
      ],
      "Vm": [
        7072
      ],
      "console": [
        15136
      ],
      "console2": [
        23200
      ],
      "stdError": [
        5049
      ],
      "stdJson": [
        2409
      ],
      "stdMath": [
        6318
      ],
      "stdStorage": [
        6179
      ]
    },
    "id": 25312,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 24711,
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:20"
      },
      {
        "absolutePath": "/Users/alexander/dev/opti/contracts/lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "id": 24712,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25312,
        "sourceUnit": 6319,
        "src": "64:28:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/opti/contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        "file": "openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        "id": 24714,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25312,
        "sourceUnit": 23293,
        "src": "93:101:20",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24713,
              "name": "ERC1155Holder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23292,
              "src": "101:13:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/opti/contracts/src/test/helpers/CheatCodes.sol",
        "file": "./helpers/CheatCodes.sol",
        "id": 24716,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25312,
        "sourceUnit": 25553,
        "src": "195:52:20",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24715,
              "name": "CheatCodes",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25552,
              "src": "203:10:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/opti/contracts/src/test/helpers/MockERC20.sol",
        "file": "./helpers/MockERC20.sol",
        "id": 24718,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25312,
        "sourceUnit": 25581,
        "src": "248:45:20",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24717,
              "name": "OPTI",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25580,
              "src": "256:4:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/opti/contracts/src/OptimisticOracle.sol",
        "file": "../OptimisticOracle.sol",
        "id": 24720,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25312,
        "sourceUnit": 24595,
        "src": "294:57:20",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24719,
              "name": "OptimisticOracle",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24594,
              "src": "302:16:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/opti/contracts/src/datastructures/structures.sol",
        "file": "../datastructures/structures.sol",
        "id": 24725,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25312,
        "sourceUnit": 24664,
        "src": "352:83:20",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24721,
              "name": "Result",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24628,
              "src": "360:6:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 24722,
              "name": "Stage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24633,
              "src": "368:5:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 24723,
              "name": "Proposal",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24641,
              "src": "375:8:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 24724,
              "name": "Question",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24663,
              "src": "385:8:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24726,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4979,
              "src": "470:4:20"
            },
            "id": 24727,
            "nodeType": "InheritanceSpecifier",
            "src": "470:4:20"
          }
        ],
        "canonicalName": "OptimisticOracleTest",
        "contractDependencies": [
          24594,
          25311,
          25580
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 25304,
        "linearizedBaseContracts": [
          25304,
          4979,
          2049,
          1786
        ],
        "name": "OptimisticOracleTest",
        "nameLocation": "446:20:20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 24730,
            "mutability": "mutable",
            "name": "oo",
            "nameLocation": "507:2:20",
            "nodeType": "VariableDeclaration",
            "scope": 25304,
            "src": "481:28:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
              "typeString": "contract OptimisticOracle"
            },
            "typeName": {
              "id": 24729,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24728,
                "name": "OptimisticOracle",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24594,
                "src": "481:16:20"
              },
              "referencedDeclaration": 24594,
              "src": "481:16:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                "typeString": "contract OptimisticOracle"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24733,
            "mutability": "mutable",
            "name": "cheats",
            "nameLocation": "535:6:20",
            "nodeType": "VariableDeclaration",
            "scope": 25304,
            "src": "515:26:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CheatCodes_$25552",
              "typeString": "contract CheatCodes"
            },
            "typeName": {
              "id": 24732,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24731,
                "name": "CheatCodes",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25552,
                "src": "515:10:20"
              },
              "referencedDeclaration": 25552,
              "src": "515:10:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CheatCodes_$25552",
                "typeString": "contract CheatCodes"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24736,
            "mutability": "mutable",
            "name": "opti",
            "nameLocation": "561:4:20",
            "nodeType": "VariableDeclaration",
            "scope": 25304,
            "src": "547:18:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OPTI_$25580",
              "typeString": "contract OPTI"
            },
            "typeName": {
              "id": 24735,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24734,
                "name": "OPTI",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25580,
                "src": "547:4:20"
              },
              "referencedDeclaration": 25580,
              "src": "547:4:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OPTI_$25580",
                "typeString": "contract OPTI"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24738,
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "589:5:20",
            "nodeType": "VariableDeclaration",
            "scope": 25304,
            "src": "572:22:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 24737,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "572:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24740,
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "617:3:20",
            "nodeType": "VariableDeclaration",
            "scope": 25304,
            "src": "600:20:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 24739,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "600:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24742,
            "mutability": "mutable",
            "name": "john",
            "nameLocation": "643:4:20",
            "nodeType": "VariableDeclaration",
            "scope": 25304,
            "src": "626:21:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 24741,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "626:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24744,
            "mutability": "mutable",
            "name": "kyle",
            "nameLocation": "670:4:20",
            "nodeType": "VariableDeclaration",
            "scope": 25304,
            "src": "653:21:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 24743,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "653:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 24905,
              "nodeType": "Block",
              "src": "705:750:20",
              "statements": [
                {
                  "expression": {
                    "id": 24751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24747,
                      "name": "cheats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24733,
                      "src": "715:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CheatCodes_$25552",
                        "typeString": "contract CheatCodes"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 24749,
                          "name": "HEVM_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "735:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 24748,
                        "name": "CheatCodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25552,
                        "src": "724:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CheatCodes_$25552_$",
                          "typeString": "type(contract CheatCodes)"
                        }
                      },
                      "id": 24750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "724:24:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CheatCodes_$25552",
                        "typeString": "contract CheatCodes"
                      }
                    },
                    "src": "715:33:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CheatCodes_$25552",
                      "typeString": "contract CheatCodes"
                    }
                  },
                  "id": 24752,
                  "nodeType": "ExpressionStatement",
                  "src": "715:33:20"
                },
                {
                  "expression": {
                    "id": 24758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24753,
                      "name": "opti",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24736,
                      "src": "758:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OPTI_$25580",
                        "typeString": "contract OPTI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 24756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "765:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_OPTI_$25580_$",
                          "typeString": "function () returns (contract OPTI)"
                        },
                        "typeName": {
                          "id": 24755,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24754,
                            "name": "OPTI",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 25580,
                            "src": "769:4:20"
                          },
                          "referencedDeclaration": 25580,
                          "src": "769:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OPTI_$25580",
                            "typeString": "contract OPTI"
                          }
                        }
                      },
                      "id": 24757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "765:10:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OPTI_$25580",
                        "typeString": "contract OPTI"
                      }
                    },
                    "src": "758:17:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OPTI_$25580",
                      "typeString": "contract OPTI"
                    }
                  },
                  "id": 24759,
                  "nodeType": "ExpressionStatement",
                  "src": "758:17:20"
                },
                {
                  "expression": {
                    "id": 24769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24760,
                      "name": "oo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24730,
                      "src": "785:2:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                        "typeString": "contract OptimisticOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 24766,
                              "name": "opti",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24736,
                              "src": "819:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OPTI_$25580",
                                "typeString": "contract OPTI"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OPTI_$25580",
                                "typeString": "contract OPTI"
                              }
                            ],
                            "id": 24765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "811:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 24764,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "811:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "811:13:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 24763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "790:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_OptimisticOracle_$24594_$",
                          "typeString": "function (address) returns (contract OptimisticOracle)"
                        },
                        "typeName": {
                          "id": 24762,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24761,
                            "name": "OptimisticOracle",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24594,
                            "src": "794:16:20"
                          },
                          "referencedDeclaration": 24594,
                          "src": "794:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                            "typeString": "contract OptimisticOracle"
                          }
                        }
                      },
                      "id": 24768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "790:35:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                        "typeString": "contract OptimisticOracle"
                      }
                    },
                    "src": "785:40:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                      "typeString": "contract OptimisticOracle"
                    }
                  },
                  "id": 24770,
                  "nodeType": "ExpressionStatement",
                  "src": "785:40:20"
                },
                {
                  "expression": {
                    "id": 24779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24771,
                      "name": "alice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24738,
                      "src": "835:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 24776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "851:17:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TokenReceiver_$25311_$",
                              "typeString": "function () returns (contract TokenReceiver)"
                            },
                            "typeName": {
                              "id": 24775,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 24774,
                                "name": "TokenReceiver",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 25311,
                                "src": "855:13:20"
                              },
                              "referencedDeclaration": 25311,
                              "src": "855:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenReceiver_$25311",
                                "typeString": "contract TokenReceiver"
                              }
                            }
                          },
                          "id": 24777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "851:19:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenReceiver_$25311",
                            "typeString": "contract TokenReceiver"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TokenReceiver_$25311",
                            "typeString": "contract TokenReceiver"
                          }
                        ],
                        "id": 24773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "843:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 24772,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "843:7:20",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 24778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "843:28:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "835:36:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24780,
                  "nodeType": "ExpressionStatement",
                  "src": "835:36:20"
                },
                {
                  "expression": {
                    "id": 24789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24781,
                      "name": "bob",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24740,
                      "src": "881:3:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 24786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "895:17:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TokenReceiver_$25311_$",
                              "typeString": "function () returns (contract TokenReceiver)"
                            },
                            "typeName": {
                              "id": 24785,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 24784,
                                "name": "TokenReceiver",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 25311,
                                "src": "899:13:20"
                              },
                              "referencedDeclaration": 25311,
                              "src": "899:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenReceiver_$25311",
                                "typeString": "contract TokenReceiver"
                              }
                            }
                          },
                          "id": 24787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "895:19:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenReceiver_$25311",
                            "typeString": "contract TokenReceiver"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TokenReceiver_$25311",
                            "typeString": "contract TokenReceiver"
                          }
                        ],
                        "id": 24783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "887:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 24782,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "887:7:20",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 24788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "887:28:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "881:34:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24790,
                  "nodeType": "ExpressionStatement",
                  "src": "881:34:20"
                },
                {
                  "expression": {
                    "id": 24799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24791,
                      "name": "john",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24742,
                      "src": "925:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 24796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "940:17:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TokenReceiver_$25311_$",
                              "typeString": "function () returns (contract TokenReceiver)"
                            },
                            "typeName": {
                              "id": 24795,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 24794,
                                "name": "TokenReceiver",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 25311,
                                "src": "944:13:20"
                              },
                              "referencedDeclaration": 25311,
                              "src": "944:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenReceiver_$25311",
                                "typeString": "contract TokenReceiver"
                              }
                            }
                          },
                          "id": 24797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "940:19:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenReceiver_$25311",
                            "typeString": "contract TokenReceiver"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TokenReceiver_$25311",
                            "typeString": "contract TokenReceiver"
                          }
                        ],
                        "id": 24793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "932:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 24792,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "932:7:20",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 24798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "932:28:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "925:35:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24800,
                  "nodeType": "ExpressionStatement",
                  "src": "925:35:20"
                },
                {
                  "expression": {
                    "id": 24809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24801,
                      "name": "kyle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24744,
                      "src": "970:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 24806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "985:17:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TokenReceiver_$25311_$",
                              "typeString": "function () returns (contract TokenReceiver)"
                            },
                            "typeName": {
                              "id": 24805,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 24804,
                                "name": "TokenReceiver",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 25311,
                                "src": "989:13:20"
                              },
                              "referencedDeclaration": 25311,
                              "src": "989:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenReceiver_$25311",
                                "typeString": "contract TokenReceiver"
                              }
                            }
                          },
                          "id": 24807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "985:19:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenReceiver_$25311",
                            "typeString": "contract TokenReceiver"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TokenReceiver_$25311",
                            "typeString": "contract TokenReceiver"
                          }
                        ],
                        "id": 24803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "977:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 24802,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "977:7:20",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 24808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "977:28:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "970:35:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24810,
                  "nodeType": "ExpressionStatement",
                  "src": "970:35:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 24816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1039:10:20",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 24813,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24738,
                            "src": "1023:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1015:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 24811,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1015:8:20",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1015:14:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 24815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1015:23:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 24817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1015:35:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24818,
                  "nodeType": "ExpressionStatement",
                  "src": "1015:35:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 24824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1082:10:20",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 24821,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24740,
                            "src": "1068:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1060:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 24819,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1060:8:20",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1060:12:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 24823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1060:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 24825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1060:33:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24826,
                  "nodeType": "ExpressionStatement",
                  "src": "1060:33:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24832,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1122:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$25304",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$25304",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          ],
                          "id": 24831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1114:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24830,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1114:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1114:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "315f3030305f303030",
                        "id": 24834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1129:15:20",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        "value": "1_000_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 24827,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24736,
                        "src": "1104:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25580",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 24829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25579,
                      "src": "1104:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 24835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1104:41:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24836,
                  "nodeType": "ExpressionStatement",
                  "src": "1104:41:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24840,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24738,
                        "src": "1165:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "315f3030305f303030",
                        "id": 24841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1172:15:20",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        "value": "1_000_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 24837,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24736,
                        "src": "1155:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25580",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 24839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25579,
                      "src": "1155:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 24842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1155:33:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24843,
                  "nodeType": "ExpressionStatement",
                  "src": "1155:33:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24847,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24740,
                        "src": "1208:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "315f3030305f303030",
                        "id": 24848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1213:15:20",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        "value": "1_000_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 24844,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24736,
                        "src": "1198:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25580",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 24846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25579,
                      "src": "1198:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 24849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1198:31:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24850,
                  "nodeType": "ExpressionStatement",
                  "src": "1198:31:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24856,
                            "name": "oo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24730,
                            "src": "1261:2:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                              "typeString": "contract OptimisticOracle"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                              "typeString": "contract OptimisticOracle"
                            }
                          ],
                          "id": 24855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1253:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24854,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1253:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1253:11:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 24860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1271:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 24859,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1271:7:20",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 24858,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1266:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 24861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1266:13:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 24862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1266:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24851,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24736,
                        "src": "1240:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25580",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 24853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23493,
                      "src": "1240:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 24863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1240:44:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24864,
                  "nodeType": "ExpressionStatement",
                  "src": "1240:44:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24868,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24738,
                        "src": "1307:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24865,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24733,
                        "src": "1294:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25552",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 24867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25510,
                      "src": "1294:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 24869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1294:19:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24870,
                  "nodeType": "ExpressionStatement",
                  "src": "1294:19:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24876,
                            "name": "oo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24730,
                            "src": "1344:2:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                              "typeString": "contract OptimisticOracle"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                              "typeString": "contract OptimisticOracle"
                            }
                          ],
                          "id": 24875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1336:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24874,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1336:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1336:11:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 24880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1354:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 24879,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1354:7:20",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 24878,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1349:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 24881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1349:13:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 24882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1349:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24871,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24736,
                        "src": "1323:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25580",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 24873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23493,
                      "src": "1323:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 24883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1323:44:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24884,
                  "nodeType": "ExpressionStatement",
                  "src": "1323:44:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24888,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24740,
                        "src": "1390:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24885,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24733,
                        "src": "1377:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25552",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 24887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25510,
                      "src": "1377:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 24889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1377:17:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24890,
                  "nodeType": "ExpressionStatement",
                  "src": "1377:17:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24896,
                            "name": "oo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24730,
                            "src": "1425:2:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                              "typeString": "contract OptimisticOracle"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                              "typeString": "contract OptimisticOracle"
                            }
                          ],
                          "id": 24895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1417:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24894,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1417:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1417:11:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 24900,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1435:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 24899,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1435:7:20",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 24898,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1430:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 24901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1430:13:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 24902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1430:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24891,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24736,
                        "src": "1404:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25580",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 24893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23493,
                      "src": "1404:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 24903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1404:44:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24904,
                  "nodeType": "ExpressionStatement",
                  "src": "1404:44:20"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "id": 24906,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "690:5:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "695:2:20"
            },
            "returnParameters": {
              "id": 24746,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "705:0:20"
            },
            "scope": 25304,
            "src": "681:774:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 25047,
              "nodeType": "Block",
              "src": "1501:1183:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "77696c6c20455448206265206f76657220316b20746f6d6f72726f773f",
                        "id": 24912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1563:31:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        "value": "will ETH be over 1k tomorrow?"
                      },
                      {
                        "hexValue": "68747470733a2f2f636f696e6765636b6f2e636f6d",
                        "id": 24913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1608:23:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b23b3d4ae85f5b8d09e37316325b8a4548b8b7ce65630611242948ce5487ad7",
                          "typeString": "literal_string \"https://coingecko.com\""
                        },
                        "value": "https://coingecko.com"
                      },
                      {
                        "hexValue": "31303030",
                        "id": 24914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1645:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b23b3d4ae85f5b8d09e37316325b8a4548b8b7ce65630611242948ce5487ad7",
                          "typeString": "literal_string \"https://coingecko.com\""
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 24909,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24730,
                        "src": "1535:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 24911,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "askQuestion",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24177,
                      "src": "1535:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,string memory,uint256) external"
                      }
                    },
                    "id": 24915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1535:124:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24916,
                  "nodeType": "ExpressionStatement",
                  "src": "1535:124:20"
                },
                {
                  "assignments": [
                    24918
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24918,
                      "mutability": "mutable",
                      "name": "questionId",
                      "nameLocation": "1677:10:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 25047,
                      "src": "1669:18:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 24917,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1669:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24925,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "77696c6c20455448206265206f76657220316b20746f6d6f72726f773f",
                        "id": 24921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1720:31:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        "value": "will ETH be over 1k tomorrow?"
                      },
                      {
                        "hexValue": "68747470733a2f2f636f696e6765636b6f2e636f6d",
                        "id": 24922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1765:23:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b23b3d4ae85f5b8d09e37316325b8a4548b8b7ce65630611242948ce5487ad7",
                          "typeString": "literal_string \"https://coingecko.com\""
                        },
                        "value": "https://coingecko.com"
                      },
                      {
                        "hexValue": "31303030",
                        "id": 24923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1802:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b23b3d4ae85f5b8d09e37316325b8a4548b8b7ce65630611242948ce5487ad7",
                          "typeString": "literal_string \"https://coingecko.com\""
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 24919,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24730,
                        "src": "1690:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 24920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getQuestionId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24593,
                      "src": "1690:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory,uint256) pure external returns (bytes32)"
                      }
                    },
                    "id": 24924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1690:126:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1669:147:20"
                },
                {
                  "assignments": [
                    24928
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24928,
                      "mutability": "mutable",
                      "name": "question",
                      "nameLocation": "1842:8:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 25047,
                      "src": "1826:24:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$24663_memory_ptr",
                        "typeString": "struct Question"
                      },
                      "typeName": {
                        "id": 24927,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24926,
                          "name": "Question",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24663,
                          "src": "1826:8:20"
                        },
                        "referencedDeclaration": 24663,
                        "src": "1826:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$24663_storage_ptr",
                          "typeString": "struct Question"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24933,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24931,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24918,
                        "src": "1872:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 24929,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24730,
                        "src": "1853:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 24930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getQuestionById",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24559,
                      "src": "1853:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Question_$24663_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct Question memory)"
                      }
                    },
                    "id": 24932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1853:30:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$24663_memory_ptr",
                      "typeString": "struct Question memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1826:57:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 24935,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24928,
                          "src": "1902:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$24663_memory_ptr",
                            "typeString": "struct Question memory"
                          }
                        },
                        "id": 24936,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "questionString",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24652,
                        "src": "1902:23:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "77696c6c20455448206265206f76657220316b20746f6d6f72726f773f",
                        "id": 24937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1927:31:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        "value": "will ETH be over 1k tomorrow?"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        }
                      ],
                      "id": 24934,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 1639,
                      "src": "1893:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 24938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1893:66:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24939,
                  "nodeType": "ExpressionStatement",
                  "src": "1893:66:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 24943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2008:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 24940,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24733,
                        "src": "1996:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25552",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 24942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25525,
                      "src": "1996:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 24944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1996:17:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24945,
                  "nodeType": "ExpressionStatement",
                  "src": "1996:17:20"
                },
                {
                  "assignments": [
                    24947
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24947,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "2031:7:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 25047,
                      "src": "2023:15:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24946,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2023:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24955,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24952,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2064:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$25304",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$25304",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          ],
                          "id": 24951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2056:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24950,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2056:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2056:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24948,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24736,
                        "src": "2041:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25580",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 24949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23425,
                      "src": "2041:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 24954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2041:29:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2023:47:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24959,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24918,
                        "src": "2097:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 24960,
                          "name": "Result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24628,
                          "src": "2109:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Result_$24628_$",
                            "typeString": "type(enum Result)"
                          }
                        },
                        "id": 24961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "YES",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24626,
                        "src": "2109:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$24628",
                          "typeString": "enum Result"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_enum$_Result_$24628",
                          "typeString": "enum Result"
                        }
                      ],
                      "expression": {
                        "id": 24956,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24730,
                        "src": "2080:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 24958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proposeAnswer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24242,
                      "src": "2080:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_enum$_Result_$24628_$returns$__$",
                        "typeString": "function (bytes32,enum Result) external"
                      }
                    },
                    "id": 24962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2080:40:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24963,
                  "nodeType": "ExpressionStatement",
                  "src": "2080:40:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24965,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24947,
                        "src": "2151:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 24970,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2183:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OptimisticOracleTest_$25304",
                                    "typeString": "contract OptimisticOracleTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_OptimisticOracleTest_$25304",
                                    "typeString": "contract OptimisticOracleTest"
                                  }
                                ],
                                "id": 24969,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2175:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 24968,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2175:7:20",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 24971,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2175:13:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 24966,
                              "name": "opti",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24736,
                              "src": "2160:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OPTI_$25580",
                                "typeString": "contract OPTI"
                              }
                            },
                            "id": 24967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23425,
                            "src": "2160:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 24972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2160:29:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 24973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2192:8:20",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        "src": "2160:40:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24964,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2142:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2142:59:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24976,
                  "nodeType": "ExpressionStatement",
                  "src": "2142:59:20"
                },
                {
                  "assignments": [
                    24979
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24979,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nameLocation": "2253:8:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 25047,
                      "src": "2237:24:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$24641_memory_ptr",
                        "typeString": "struct Proposal"
                      },
                      "typeName": {
                        "id": 24978,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24977,
                          "name": "Proposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24641,
                          "src": "2237:8:20"
                        },
                        "referencedDeclaration": 24641,
                        "src": "2237:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$24641_storage_ptr",
                          "typeString": "struct Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24984,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24982,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24918,
                        "src": "2291:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 24980,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24730,
                        "src": "2264:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 24981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getProposalByQuestionId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24572,
                      "src": "2264:26:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Proposal_$24641_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct Proposal memory)"
                      }
                    },
                    "id": 24983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2264:38:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$24641_memory_ptr",
                      "typeString": "struct Proposal memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2237:65:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 24988,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24979,
                              "src": "2329:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$24641_memory_ptr",
                                "typeString": "struct Proposal memory"
                              }
                            },
                            "id": 24989,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "answer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24638,
                            "src": "2329:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24628",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24628",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 24987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2321:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 24986,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2321:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2321:24:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 24993,
                              "name": "Result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24628,
                              "src": "2355:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Result_$24628_$",
                                "typeString": "type(enum Result)"
                              }
                            },
                            "id": 24994,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "YES",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24626,
                            "src": "2355:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24628",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24628",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 24992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2347:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 24991,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2347:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2347:19:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24985,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2312:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2312:55:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24997,
                  "nodeType": "ExpressionStatement",
                  "src": "2312:55:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 25001,
                              "name": "oo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24730,
                              "src": "2419:2:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                                "typeString": "contract OptimisticOracle"
                              }
                            },
                            "id": 25002,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "DISPUTE_PERIOD",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24114,
                            "src": "2419:17:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 25003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2419:19:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31303031",
                          "id": 25004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2441:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1001_by_1",
                            "typeString": "int_const 1001"
                          },
                          "value": "1001"
                        },
                        "src": "2419:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24998,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24733,
                        "src": "2407:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25552",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25525,
                      "src": "2407:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 25006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2407:39:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25007,
                  "nodeType": "ExpressionStatement",
                  "src": "2407:39:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25011,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24918,
                        "src": "2476:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25008,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24730,
                        "src": "2456:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "finalizeProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24303,
                      "src": "2456:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 25012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2456:31:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25013,
                  "nodeType": "ExpressionStatement",
                  "src": "2456:31:20"
                },
                {
                  "expression": {
                    "id": 25019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25014,
                      "name": "question",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24928,
                      "src": "2497:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$24663_memory_ptr",
                        "typeString": "struct Question memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25017,
                          "name": "questionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24918,
                          "src": "2527:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 25015,
                          "name": "oo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24730,
                          "src": "2508:2:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                            "typeString": "contract OptimisticOracle"
                          }
                        },
                        "id": 25016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getQuestionById",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24559,
                        "src": "2508:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Question_$24663_memory_ptr_$",
                          "typeString": "function (bytes32) view external returns (struct Question memory)"
                        }
                      },
                      "id": 25018,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2508:30:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$24663_memory_ptr",
                        "typeString": "struct Question memory"
                      }
                    },
                    "src": "2497:41:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$24663_memory_ptr",
                      "typeString": "struct Question memory"
                    }
                  },
                  "id": 25020,
                  "nodeType": "ExpressionStatement",
                  "src": "2497:41:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25024,
                              "name": "question",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24928,
                              "src": "2565:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Question_$24663_memory_ptr",
                                "typeString": "struct Question memory"
                              }
                            },
                            "id": 25025,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stage",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24659,
                            "src": "2565:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Stage_$24633",
                              "typeString": "enum Stage"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Stage_$24633",
                              "typeString": "enum Stage"
                            }
                          ],
                          "id": 25023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2557:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25022,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2557:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2557:23:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25029,
                              "name": "Stage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24633,
                              "src": "2590:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Stage_$24633_$",
                                "typeString": "type(enum Stage)"
                              }
                            },
                            "id": 25030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "FINALIZED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24632,
                            "src": "2590:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Stage_$24633",
                              "typeString": "enum Stage"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Stage_$24633",
                              "typeString": "enum Stage"
                            }
                          ],
                          "id": 25028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2582:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25027,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2582:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2582:24:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25021,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2548:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2548:59:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25033,
                  "nodeType": "ExpressionStatement",
                  "src": "2548:59:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25037,
                              "name": "question",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24928,
                              "src": "2634:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Question_$24663_memory_ptr",
                                "typeString": "struct Question memory"
                              }
                            },
                            "id": 25038,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "result",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24662,
                            "src": "2634:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24628",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24628",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2626:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25035,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2626:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2626:24:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25042,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24979,
                              "src": "2660:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$24641_memory_ptr",
                                "typeString": "struct Proposal memory"
                              }
                            },
                            "id": 25043,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "answer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24638,
                            "src": "2660:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24628",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24628",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2652:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25040,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2652:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2652:24:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25034,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2617:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2617:60:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25046,
                  "nodeType": "ExpressionStatement",
                  "src": "2617:60:20"
                }
              ]
            },
            "functionSelector": "e3f90828",
            "id": 25048,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testQuestionHappyPath",
            "nameLocation": "1470:21:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24907,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1491:2:20"
            },
            "returnParameters": {
              "id": 24908,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1501:0:20"
            },
            "scope": 25304,
            "src": "1461:1223:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 25302,
              "nodeType": "Block",
              "src": "2728:1916:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "77696c6c20455448206265206f76657220316b20746f6d6f72726f773f",
                        "id": 25054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2790:31:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        "value": "will ETH be over 1k tomorrow?"
                      },
                      {
                        "hexValue": "68747470733a2f2f636f696e6765636b6f2e636f6d",
                        "id": 25055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2835:23:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b23b3d4ae85f5b8d09e37316325b8a4548b8b7ce65630611242948ce5487ad7",
                          "typeString": "literal_string \"https://coingecko.com\""
                        },
                        "value": "https://coingecko.com"
                      },
                      {
                        "hexValue": "31303030",
                        "id": 25056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2872:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b23b3d4ae85f5b8d09e37316325b8a4548b8b7ce65630611242948ce5487ad7",
                          "typeString": "literal_string \"https://coingecko.com\""
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 25051,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24730,
                        "src": "2762:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "askQuestion",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24177,
                      "src": "2762:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,string memory,uint256) external"
                      }
                    },
                    "id": 25057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2762:124:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25058,
                  "nodeType": "ExpressionStatement",
                  "src": "2762:124:20"
                },
                {
                  "assignments": [
                    25060
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25060,
                      "mutability": "mutable",
                      "name": "questionId",
                      "nameLocation": "2904:10:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 25302,
                      "src": "2896:18:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 25059,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2896:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25067,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "77696c6c20455448206265206f76657220316b20746f6d6f72726f773f",
                        "id": 25063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2947:31:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        "value": "will ETH be over 1k tomorrow?"
                      },
                      {
                        "hexValue": "68747470733a2f2f636f696e6765636b6f2e636f6d",
                        "id": 25064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2992:23:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b23b3d4ae85f5b8d09e37316325b8a4548b8b7ce65630611242948ce5487ad7",
                          "typeString": "literal_string \"https://coingecko.com\""
                        },
                        "value": "https://coingecko.com"
                      },
                      {
                        "hexValue": "31303030",
                        "id": 25065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3029:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b23b3d4ae85f5b8d09e37316325b8a4548b8b7ce65630611242948ce5487ad7",
                          "typeString": "literal_string \"https://coingecko.com\""
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 25061,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24730,
                        "src": "2917:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getQuestionId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24593,
                      "src": "2917:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory,uint256) pure external returns (bytes32)"
                      }
                    },
                    "id": 25066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2917:126:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2896:147:20"
                },
                {
                  "assignments": [
                    25070
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25070,
                      "mutability": "mutable",
                      "name": "question",
                      "nameLocation": "3069:8:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 25302,
                      "src": "3053:24:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$24663_memory_ptr",
                        "typeString": "struct Question"
                      },
                      "typeName": {
                        "id": 25069,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 25068,
                          "name": "Question",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24663,
                          "src": "3053:8:20"
                        },
                        "referencedDeclaration": 24663,
                        "src": "3053:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$24663_storage_ptr",
                          "typeString": "struct Question"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25075,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25073,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25060,
                        "src": "3099:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25071,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24730,
                        "src": "3080:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getQuestionById",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24559,
                      "src": "3080:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Question_$24663_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct Question memory)"
                      }
                    },
                    "id": 25074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3080:30:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$24663_memory_ptr",
                      "typeString": "struct Question memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3053:57:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25077,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25070,
                          "src": "3129:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$24663_memory_ptr",
                            "typeString": "struct Question memory"
                          }
                        },
                        "id": 25078,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "questionString",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24652,
                        "src": "3129:23:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "77696c6c20455448206265206f76657220316b20746f6d6f72726f773f",
                        "id": 25079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3154:31:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        "value": "will ETH be over 1k tomorrow?"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        }
                      ],
                      "id": 25076,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 1639,
                      "src": "3120:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 25080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3120:66:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25081,
                  "nodeType": "ExpressionStatement",
                  "src": "3120:66:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 25085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3235:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 25082,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24733,
                        "src": "3223:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25552",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25525,
                      "src": "3223:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 25086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3223:17:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25087,
                  "nodeType": "ExpressionStatement",
                  "src": "3223:17:20"
                },
                {
                  "assignments": [
                    25089
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25089,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "3258:7:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 25302,
                      "src": "3250:15:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25088,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3250:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25097,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25094,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3291:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$25304",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$25304",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          ],
                          "id": 25093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3283:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25092,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3283:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3283:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25090,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24736,
                        "src": "3268:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25580",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 25091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23425,
                      "src": "3268:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 25096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3268:29:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3250:47:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25101,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25060,
                        "src": "3324:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 25102,
                          "name": "Result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24628,
                          "src": "3336:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Result_$24628_$",
                            "typeString": "type(enum Result)"
                          }
                        },
                        "id": 25103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "YES",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24626,
                        "src": "3336:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$24628",
                          "typeString": "enum Result"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_enum$_Result_$24628",
                          "typeString": "enum Result"
                        }
                      ],
                      "expression": {
                        "id": 25098,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24730,
                        "src": "3307:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proposeAnswer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24242,
                      "src": "3307:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_enum$_Result_$24628_$returns$__$",
                        "typeString": "function (bytes32,enum Result) external"
                      }
                    },
                    "id": 25104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3307:40:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25105,
                  "nodeType": "ExpressionStatement",
                  "src": "3307:40:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25107,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25089,
                        "src": "3378:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 25112,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3410:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OptimisticOracleTest_$25304",
                                    "typeString": "contract OptimisticOracleTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_OptimisticOracleTest_$25304",
                                    "typeString": "contract OptimisticOracleTest"
                                  }
                                ],
                                "id": 25111,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3402:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 25110,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3402:7:20",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 25113,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3402:13:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 25108,
                              "name": "opti",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24736,
                              "src": "3387:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OPTI_$25580",
                                "typeString": "contract OPTI"
                              }
                            },
                            "id": 25109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23425,
                            "src": "3387:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 25114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3387:29:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 25115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3419:8:20",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        "src": "3387:40:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25106,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3369:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3369:59:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25118,
                  "nodeType": "ExpressionStatement",
                  "src": "3369:59:20"
                },
                {
                  "assignments": [
                    25121
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25121,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nameLocation": "3480:8:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 25302,
                      "src": "3464:24:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$24641_memory_ptr",
                        "typeString": "struct Proposal"
                      },
                      "typeName": {
                        "id": 25120,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 25119,
                          "name": "Proposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24641,
                          "src": "3464:8:20"
                        },
                        "referencedDeclaration": 24641,
                        "src": "3464:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$24641_storage_ptr",
                          "typeString": "struct Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25126,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25124,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25060,
                        "src": "3518:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25122,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24730,
                        "src": "3491:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getProposalByQuestionId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24572,
                      "src": "3491:26:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Proposal_$24641_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct Proposal memory)"
                      }
                    },
                    "id": 25125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3491:38:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$24641_memory_ptr",
                      "typeString": "struct Proposal memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3464:65:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25130,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25121,
                              "src": "3556:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$24641_memory_ptr",
                                "typeString": "struct Proposal memory"
                              }
                            },
                            "id": 25131,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "answer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24638,
                            "src": "3556:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24628",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24628",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3548:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25128,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3548:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3548:24:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25135,
                              "name": "Result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24628,
                              "src": "3582:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Result_$24628_$",
                                "typeString": "type(enum Result)"
                              }
                            },
                            "id": 25136,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "YES",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24626,
                            "src": "3582:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24628",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24628",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3574:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25133,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3574:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3574:19:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25127,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3539:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3539:55:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25139,
                  "nodeType": "ExpressionStatement",
                  "src": "3539:55:20"
                },
                {
                  "expression": {
                    "id": 25145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25140,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25089,
                      "src": "3633:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25143,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24740,
                          "src": "3658:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 25141,
                          "name": "opti",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24736,
                          "src": "3643:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OPTI_$25580",
                            "typeString": "contract OPTI"
                          }
                        },
                        "id": 25142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 23425,
                        "src": "3643:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 25144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3643:19:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3633:29:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25146,
                  "nodeType": "ExpressionStatement",
                  "src": "3633:29:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25150,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24740,
                        "src": "3685:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25147,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24733,
                        "src": "3672:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25552",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25510,
                      "src": "3672:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3672:17:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25152,
                  "nodeType": "ExpressionStatement",
                  "src": "3672:17:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25156,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25060,
                        "src": "3718:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25153,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24730,
                        "src": "3699:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "disputeProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24373,
                      "src": "3699:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 25157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3699:30:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25158,
                  "nodeType": "ExpressionStatement",
                  "src": "3699:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25160,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25089,
                        "src": "3748:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 25163,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24740,
                              "src": "3772:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 25161,
                              "name": "opti",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24736,
                              "src": "3757:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OPTI_$25580",
                                "typeString": "contract OPTI"
                              }
                            },
                            "id": 25162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23425,
                            "src": "3757:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 25164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3757:19:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 25165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3779:8:20",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        "src": "3757:30:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25159,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3739:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3739:49:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25168,
                  "nodeType": "ExpressionStatement",
                  "src": "3739:49:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 25172,
                              "name": "oo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24730,
                              "src": "3865:2:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                                "typeString": "contract OptimisticOracle"
                              }
                            },
                            "id": 25173,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "DISPUTE_PERIOD",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24114,
                            "src": "3865:17:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 25174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3865:19:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31303031",
                          "id": 25175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3887:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1001_by_1",
                            "typeString": "int_const 1001"
                          },
                          "value": "1001"
                        },
                        "src": "3865:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25169,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24733,
                        "src": "3853:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25552",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25525,
                      "src": "3853:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 25177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3853:39:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25178,
                  "nodeType": "ExpressionStatement",
                  "src": "3853:39:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "50726f706f73616c207761732064697370757465642c2063616e6e6f742066696e616c697a65",
                        "id": 25182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3922:40:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_89d58efc9aa98f6e7a3374d3a1dd910bdc732f644c38ae5e43799d7e1e9a03cb",
                          "typeString": "literal_string \"Proposal was disputed, cannot finalize\""
                        },
                        "value": "Proposal was disputed, cannot finalize"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_89d58efc9aa98f6e7a3374d3a1dd910bdc732f644c38ae5e43799d7e1e9a03cb",
                          "typeString": "literal_string \"Proposal was disputed, cannot finalize\""
                        }
                      ],
                      "expression": {
                        "id": 25179,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24733,
                        "src": "3902:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25552",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25515,
                      "src": "3902:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 25183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3902:61:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25184,
                  "nodeType": "ExpressionStatement",
                  "src": "3902:61:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25188,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25060,
                        "src": "3993:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25185,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24730,
                        "src": "3973:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "finalizeProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24303,
                      "src": "3973:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 25189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3973:31:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25190,
                  "nodeType": "ExpressionStatement",
                  "src": "3973:31:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 25194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4026:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 25191,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24733,
                        "src": "4014:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25552",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25525,
                      "src": "4014:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 25195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4014:17:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25196,
                  "nodeType": "ExpressionStatement",
                  "src": "4014:17:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25200,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24738,
                        "src": "4073:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25197,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24733,
                        "src": "4060:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25552",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25510,
                      "src": "4060:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4060:19:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25202,
                  "nodeType": "ExpressionStatement",
                  "src": "4060:19:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25206,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25060,
                        "src": "4101:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 25207,
                          "name": "Result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24628,
                          "src": "4113:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Result_$24628_$",
                            "typeString": "type(enum Result)"
                          }
                        },
                        "id": 25208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "YES",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24626,
                        "src": "4113:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$24628",
                          "typeString": "enum Result"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_enum$_Result_$24628",
                          "typeString": "enum Result"
                        }
                      ],
                      "expression": {
                        "id": 25203,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24730,
                        "src": "4089:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "makeVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24462,
                      "src": "4089:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_enum$_Result_$24628_$returns$__$",
                        "typeString": "function (bytes32,enum Result) external"
                      }
                    },
                    "id": 25209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4089:35:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25210,
                  "nodeType": "ExpressionStatement",
                  "src": "4089:35:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25214,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24740,
                        "src": "4147:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25211,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24733,
                        "src": "4134:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25552",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25510,
                      "src": "4134:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4134:17:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25216,
                  "nodeType": "ExpressionStatement",
                  "src": "4134:17:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25220,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25060,
                        "src": "4173:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 25221,
                          "name": "Result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24628,
                          "src": "4185:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Result_$24628_$",
                            "typeString": "type(enum Result)"
                          }
                        },
                        "id": 25222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "YES",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24626,
                        "src": "4185:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$24628",
                          "typeString": "enum Result"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_enum$_Result_$24628",
                          "typeString": "enum Result"
                        }
                      ],
                      "expression": {
                        "id": 25217,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24730,
                        "src": "4161:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "makeVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24462,
                      "src": "4161:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_enum$_Result_$24628_$returns$__$",
                        "typeString": "function (bytes32,enum Result) external"
                      }
                    },
                    "id": 25223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4161:35:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25224,
                  "nodeType": "ExpressionStatement",
                  "src": "4161:35:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25228,
                        "name": "john",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24742,
                        "src": "4219:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25225,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24733,
                        "src": "4206:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25552",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25510,
                      "src": "4206:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4206:18:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25230,
                  "nodeType": "ExpressionStatement",
                  "src": "4206:18:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25234,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25060,
                        "src": "4246:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 25235,
                          "name": "Result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24628,
                          "src": "4258:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Result_$24628_$",
                            "typeString": "type(enum Result)"
                          }
                        },
                        "id": 25236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "YES",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24626,
                        "src": "4258:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$24628",
                          "typeString": "enum Result"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_enum$_Result_$24628",
                          "typeString": "enum Result"
                        }
                      ],
                      "expression": {
                        "id": 25231,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24730,
                        "src": "4234:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "makeVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24462,
                      "src": "4234:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_enum$_Result_$24628_$returns$__$",
                        "typeString": "function (bytes32,enum Result) external"
                      }
                    },
                    "id": 25237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4234:35:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25238,
                  "nodeType": "ExpressionStatement",
                  "src": "4234:35:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25242,
                        "name": "kyle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24744,
                        "src": "4292:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25239,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24733,
                        "src": "4279:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25552",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25510,
                      "src": "4279:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4279:18:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25244,
                  "nodeType": "ExpressionStatement",
                  "src": "4279:18:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25248,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25060,
                        "src": "4319:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 25249,
                          "name": "Result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24628,
                          "src": "4331:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Result_$24628_$",
                            "typeString": "type(enum Result)"
                          }
                        },
                        "id": 25250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "NO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24627,
                        "src": "4331:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$24628",
                          "typeString": "enum Result"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_enum$_Result_$24628",
                          "typeString": "enum Result"
                        }
                      ],
                      "expression": {
                        "id": 25245,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24730,
                        "src": "4307:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "makeVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24462,
                      "src": "4307:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_enum$_Result_$24628_$returns$__$",
                        "typeString": "function (bytes32,enum Result) external"
                      }
                    },
                    "id": 25251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4307:34:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25252,
                  "nodeType": "ExpressionStatement",
                  "src": "4307:34:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 25256,
                              "name": "oo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24730,
                              "src": "4389:2:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                                "typeString": "contract OptimisticOracle"
                              }
                            },
                            "id": 25257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "VOTING_PERIOD",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24116,
                            "src": "4389:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 25258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4389:18:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31303031",
                          "id": 25259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4410:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1001_by_1",
                            "typeString": "int_const 1001"
                          },
                          "value": "1001"
                        },
                        "src": "4389:25:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25253,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24733,
                        "src": "4377:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25552",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25525,
                      "src": "4377:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 25261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4377:38:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25262,
                  "nodeType": "ExpressionStatement",
                  "src": "4377:38:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25266,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25060,
                        "src": "4441:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25263,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24730,
                        "src": "4425:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "finalizeVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24546,
                      "src": "4425:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 25267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4425:27:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25268,
                  "nodeType": "ExpressionStatement",
                  "src": "4425:27:20"
                },
                {
                  "expression": {
                    "id": 25274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25269,
                      "name": "question",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25070,
                      "src": "4462:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$24663_memory_ptr",
                        "typeString": "struct Question memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25272,
                          "name": "questionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25060,
                          "src": "4492:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 25270,
                          "name": "oo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24730,
                          "src": "4473:2:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracle_$24594",
                            "typeString": "contract OptimisticOracle"
                          }
                        },
                        "id": 25271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getQuestionById",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24559,
                        "src": "4473:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Question_$24663_memory_ptr_$",
                          "typeString": "function (bytes32) view external returns (struct Question memory)"
                        }
                      },
                      "id": 25273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4473:30:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$24663_memory_ptr",
                        "typeString": "struct Question memory"
                      }
                    },
                    "src": "4462:41:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$24663_memory_ptr",
                      "typeString": "struct Question memory"
                    }
                  },
                  "id": 25275,
                  "nodeType": "ExpressionStatement",
                  "src": "4462:41:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25279,
                              "name": "question",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25070,
                              "src": "4530:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Question_$24663_memory_ptr",
                                "typeString": "struct Question memory"
                              }
                            },
                            "id": 25280,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stage",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24659,
                            "src": "4530:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Stage_$24633",
                              "typeString": "enum Stage"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Stage_$24633",
                              "typeString": "enum Stage"
                            }
                          ],
                          "id": 25278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4522:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25277,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4522:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4522:23:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25284,
                              "name": "Stage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24633,
                              "src": "4555:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Stage_$24633_$",
                                "typeString": "type(enum Stage)"
                              }
                            },
                            "id": 25285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "FINALIZED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24632,
                            "src": "4555:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Stage_$24633",
                              "typeString": "enum Stage"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Stage_$24633",
                              "typeString": "enum Stage"
                            }
                          ],
                          "id": 25283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4547:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25282,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4547:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4547:24:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25276,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "4513:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4513:59:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25288,
                  "nodeType": "ExpressionStatement",
                  "src": "4513:59:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25292,
                              "name": "question",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25070,
                              "src": "4599:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Question_$24663_memory_ptr",
                                "typeString": "struct Question memory"
                              }
                            },
                            "id": 25293,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "result",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24662,
                            "src": "4599:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24628",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24628",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4591:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25290,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4591:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4591:24:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25297,
                              "name": "Result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24628,
                              "src": "4625:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Result_$24628_$",
                                "typeString": "type(enum Result)"
                              }
                            },
                            "id": 25298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "YES",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24626,
                            "src": "4625:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24628",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24628",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4617:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25295,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4617:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4617:19:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25289,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "4582:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4582:55:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25301,
                  "nodeType": "ExpressionStatement",
                  "src": "4582:55:20"
                }
              ]
            },
            "functionSelector": "74b9983a",
            "id": 25303,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testQuestionSadPath",
            "nameLocation": "2699:19:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25049,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2718:2:20"
            },
            "returnParameters": {
              "id": 25050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2728:0:20"
            },
            "scope": 25304,
            "src": "2690:1954:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 25312,
        "src": "437:4209:20",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25305,
              "name": "ERC1155Holder",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23292,
              "src": "4674:13:20"
            },
            "id": 25306,
            "nodeType": "InheritanceSpecifier",
            "src": "4674:13:20"
          }
        ],
        "canonicalName": "TokenReceiver",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 25311,
        "linearizedBaseContracts": [
          25311,
          23292,
          23326,
          23241,
          24062,
          24074
        ],
        "name": "TokenReceiver",
        "nameLocation": "4657:13:20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 25309,
              "nodeType": "Block",
              "src": "4721:2:20",
              "statements": []
            },
            "id": 25310,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4701:2:20"
            },
            "returnParameters": {
              "id": 25308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4721:0:20"
            },
            "scope": 25311,
            "src": "4694:29:20",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 25312,
        "src": "4648:77:20",
        "usedErrors": []
      }
    ],
    "src": "39:4687:20"
  }
}