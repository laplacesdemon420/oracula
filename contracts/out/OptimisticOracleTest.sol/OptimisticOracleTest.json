{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCannotVoteTwice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testQuestionHappyPath",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testQuestionSadPath",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805462ff00ff19166201000117905534801561002157600080fd5b5061624c806100316000396000f3fe60806040523480156200001157600080fd5b5060043610620000935760003560e01c8063ba414fa61162000062578063ba414fa614620000e7578063e3f908281462000102578063f8ccbf47146200010c578063fa7626d4146200012057600080fd5b80630a9254e414620000985780633a76846314620000a45780636286ffd914620000a257806374b9983a14620000dd575b600080fd5b620000a26200012e565b005b620000c0737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b620000a262000735565b620000f162001df6565b6040519015158152602001620000d4565b620000a262001f2b565b600054620000f19062010000900460ff1681565b600054620000f19060ff1681565b600980546001600160a01b031916737109709ecfa91a80626ff3989d68f67f5b1dd12d1790556040516200016290620029e2565b604051809103906000f0801580156200017f573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b03929092169182179055604051620001ad90620029f0565b6001600160a01b039091168152602001604051809103906000f080158015620001da573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b03929092169190911790556040516200020990620029fe565b604051809103906000f08015801562000226573d6000803e3d6000fd5b50600b80546001600160a01b0319166001600160a01b03929092169190911790556040516200025590620029fe565b604051809103906000f08015801562000272573d6000803e3d6000fd5b50600c80546001600160a01b0319166001600160a01b0392909216919091179055604051620002a190620029fe565b604051809103906000f080158015620002be573d6000803e3d6000fd5b50600d80546001600160a01b0319166001600160a01b0392909216919091179055604051620002ed90620029fe565b604051809103906000f0801580156200030a573d6000803e3d6000fd5b50600e80546001600160a01b0319166001600160a01b03928316179055600b54604051911690600090683635c9adc5dea000009082818181858883f193505050501580156200035d573d6000803e3d6000fd5b50600c546040516001600160a01b0390911690600090683635c9adc5dea000009082818181858883f193505050501580156200039d573d6000803e3d6000fd5b50600a546040516340c10f1960e01b815230600482015269d3c21bcecceda100000060248201526001600160a01b03909116906340c10f1990604401600060405180830381600087803b158015620003f457600080fd5b505af115801562000409573d6000803e3d6000fd5b5050600a54600b546040516340c10f1960e01b81526001600160a01b03918216600482015269d3c21bcecceda10000006024820152911692506340c10f199150604401600060405180830381600087803b1580156200046757600080fd5b505af11580156200047c573d6000803e3d6000fd5b5050600a54600c546040516340c10f1960e01b81526001600160a01b03918216600482015269d3c21bcecceda10000006024820152911692506340c10f199150604401600060405180830381600087803b158015620004da57600080fd5b505af1158015620004ef573d6000803e3d6000fd5b5050600a5460085460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116925063095ea7b391506044016020604051808303816000875af11580156200054a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000570919062002a0c565b50600954600b5460405163ca669fa760e01b81526001600160a01b03918216600482015291169063ca669fa790602401600060405180830381600087803b158015620005bb57600080fd5b505af1158015620005d0573d6000803e3d6000fd5b5050600a5460085460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116925063095ea7b391506044016020604051808303816000875af11580156200062b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000651919062002a0c565b50600954600c5460405163ca669fa760e01b81526001600160a01b03918216600482015291169063ca669fa790602401600060405180830381600087803b1580156200069c57600080fd5b505af1158015620006b1573d6000803e3d6000fd5b5050600a5460085460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116925063095ea7b391506044016020604051808303816000875af11580156200070c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000732919062002a0c565b50565b600854604051630516fa9160e41b81526001600160a01b039091169063516fa9109062000769906103e89060040162002a37565b600060405180830381600087803b1580156200078457600080fd5b505af115801562000799573d6000803e3d6000fd5b505060085460405163f23a033b60e01b8152600093506001600160a01b03909116915063f23a033b90620007d4906103e89060040162002a37565b602060405180830381865afa158015620007f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000818919062002aa3565b600854604051636342268360e11b8152600481018390529192506000916001600160a01b039091169063c6844d0690602401600060405180830381865afa15801562000868573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000892919081019062002cad565b9050620008d981600001516040518060400160405280601d81526020017f77696c6c20455448206265206f76657220316b20746f6d6f72726f773f0000008152506200269d565b6009546040516372eb5f8160e11b81526103e860048201526001600160a01b039091169063e5d6bf0290602401600060405180830381600087803b1580156200092157600080fd5b505af115801562000936573d6000803e3d6000fd5b5050600a546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a0823190602401602060405180830381865afa15801562000986573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009ac919062002aa3565b600854604051635d9032b960e01b81529192506001600160a01b031690635d9032b990620009e290869060019060040162002d1f565b600060405180830381600087803b158015620009fd57600080fd5b505af115801562000a12573d6000803e3d6000fd5b5050600a546040516370a0823160e01b815230600482015262000aa793508492506001600160a01b03909116906370a08231906024015b602060405180830381865afa15801562000a67573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a8d919062002aa3565b62000aa190678ac7230489e8000062002d4b565b620027ea565b60085460405163c5be26a960e01b8152600481018590526000916001600160a01b03169063c5be26a990602401606060405180830381865afa15801562000af2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b18919062002d66565b905062000b3f8160200151600281111562000b375762000b3762002ce6565b6001620027ea565b600a54600c546040516370a0823160e01b81526001600160a01b03918216600482015260009291909116906370a0823190602401602060405180830381865afa15801562000b91573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bb7919062002aa3565b600954600c5460405163ca669fa760e01b81526001600160a01b039182166004820152929350169063ca669fa790602401600060405180830381600087803b15801562000c0357600080fd5b505af115801562000c18573d6000803e3d6000fd5b5050600854604051636af97c0560e01b8152600481018990526001600160a01b039091169250636af97c059150602401600060405180830381600087803b15801562000c6357600080fd5b505af115801562000c78573d6000803e3d6000fd5b5050600a54600c546040516370a0823160e01b81526001600160a01b03918216600482015262000cb894508593509116906370a082319060240162000a49565b6009546008546040805163a5bbe22b60e01b815290516001600160a01b039384169363e5d6bf0293169163a5bbe22b9160048083019260209291908290030181865afa15801562000d0d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d33919062002aa3565b62000d41906103e962002d4b565b6040518263ffffffff1660e01b815260040162000d6091815260200190565b600060405180830381600087803b15801562000d7b57600080fd5b505af115801562000d90573d6000803e3d6000fd5b505060095460405163f28dceb360e01b815260206004820152602660248201527f50726f706f73616c207761732064697370757465642c2063616e6e6f742066696044820152656e616c697a6560d01b60648201526001600160a01b03909116925063f28dceb39150608401600060405180830381600087803b15801562000e1757600080fd5b505af115801562000e2c573d6000803e3d6000fd5b50506008546040516311f4368560e21b8152600481018990526001600160a01b0390911692506347d0da149150602401600060405180830381600087803b15801562000e7757600080fd5b505af115801562000e8c573d6000803e3d6000fd5b50506009546040516372eb5f8160e11b81526103e860048201526001600160a01b03909116925063e5d6bf029150602401600060405180830381600087803b15801562000ed857600080fd5b505af115801562000eed573d6000803e3d6000fd5b5050600954600b5460405163ca669fa760e01b81526001600160a01b0391821660048201529116925063ca669fa79150602401600060405180830381600087803b15801562000f3b57600080fd5b505af115801562000f50573d6000803e3d6000fd5b50506008546040516001600160a01b039091169250633bbd22359150879062000f7f9060019060200162002de3565b604051602081830303815290604052805190602001206040518363ffffffff1660e01b815260040162000fbc929190918252602082015260400190565b600060405180830381600087803b15801562000fd757600080fd5b505af115801562000fec573d6000803e3d6000fd5b5050600954600c5460405163ca669fa760e01b81526001600160a01b0391821660048201529116925063ca669fa79150602401600060405180830381600087803b1580156200103a57600080fd5b505af11580156200104f573d6000803e3d6000fd5b50506008546040516001600160a01b039091169250633bbd2235915087906200107e9060029060200162002e21565b604051602081830303815290604052805190602001206040518363ffffffff1660e01b8152600401620010bb929190918252602082015260400190565b600060405180830381600087803b158015620010d657600080fd5b505af1158015620010eb573d6000803e3d6000fd5b5050600954600d5460405163ca669fa760e01b81526001600160a01b0391821660048201529116925063ca669fa79150602401600060405180830381600087803b1580156200113957600080fd5b505af11580156200114e573d6000803e3d6000fd5b50506008546040516001600160a01b039091169250633bbd2235915087906200117d9060029060200162002e5d565b604051602081830303815290604052805190602001206040518363ffffffff1660e01b8152600401620011ba929190918252602082015260400190565b600060405180830381600087803b158015620011d557600080fd5b505af1158015620011ea573d6000803e3d6000fd5b5050600954600e5460405163ca669fa760e01b81526001600160a01b0391821660048201529116925063ca669fa79150602401600060405180830381600087803b1580156200123857600080fd5b505af11580156200124d573d6000803e3d6000fd5b50506008546040516001600160a01b039091169250633bbd2235915087906200127c9060019060200162002e9a565b604051602081830303815290604052805190602001206040518363ffffffff1660e01b8152600401620012b9929190918252602082015260400190565b600060405180830381600087803b158015620012d457600080fd5b505af1158015620012e9573d6000803e3d6000fd5b5050600954600e5460405163ca669fa760e01b81526001600160a01b0391821660048201529116925063ca669fa79150602401600060405180830381600087803b1580156200133757600080fd5b505af11580156200134c573d6000803e3d6000fd5b50506008546040516001600160a01b039091169250633bbd2235915087906200137b9060029060200162002e9a565b604051602081830303815290604052805190602001206040518363ffffffff1660e01b8152600401620013b8929190918252602082015260400190565b600060405180830381600087803b158015620013d357600080fd5b505af1158015620013e8573d6000803e3d6000fd5b505060085460405163096fb36760e31b815260048101899052600093506001600160a01b039091169150634b7d9b389060240160c060405180830381865afa15801562001439573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200145f919062002ed7565b90506200147281606001516004620027ea565b600954600b5460405163ca669fa760e01b81526001600160a01b03918216600482015291169063ca669fa790602401600060405180830381600087803b158015620014bc57600080fd5b505af1158015620014d1573d6000803e3d6000fd5b505060095460405163f28dceb360e01b8152602060048201526012602482015271090c2e6d0cae640c8dedc4ee840dac2e8c6d60731b60448201526001600160a01b03909116925063f28dceb39150606401600060405180830381600087803b1580156200153e57600080fd5b505af115801562001553573d6000803e3d6000fd5b505060085460405163250551df60e01b81526001600160a01b03909116925063250551df91506200158c90899060019060040162002f55565b600060405180830381600087803b158015620015a757600080fd5b505af1158015620015bc573d6000803e3d6000fd5b5050600954600b5460405163ca669fa760e01b81526001600160a01b0391821660048201529116925063ca669fa79150602401600060405180830381600087803b1580156200160a57600080fd5b505af11580156200161f573d6000803e3d6000fd5b505060085460405163250551df60e01b81526001600160a01b03909116925063250551df91506200165890899060019060040162002f9c565b600060405180830381600087803b1580156200167357600080fd5b505af115801562001688573d6000803e3d6000fd5b5050600954600c5460405163ca669fa760e01b81526001600160a01b0391821660048201529116925063ca669fa79150602401600060405180830381600087803b158015620016d657600080fd5b505af1158015620016eb573d6000803e3d6000fd5b505060085460405163250551df60e01b81526001600160a01b03909116925063250551df91506200172490899060029060040162002fe0565b600060405180830381600087803b1580156200173f57600080fd5b505af115801562001754573d6000803e3d6000fd5b5050600954600c5460405163ca669fa760e01b81526001600160a01b0391821660048201529116925063ca669fa79150602401600060405180830381600087803b158015620017a257600080fd5b505af1158015620017b7573d6000803e3d6000fd5b505060095460405163f28dceb360e01b8152602060048201526012602482015271090c2e6d0cae640c8dedc4ee840dac2e8c6d60731b60448201526001600160a01b03909116925063f28dceb39150606401600060405180830381600087803b1580156200182457600080fd5b505af115801562001839573d6000803e3d6000fd5b505060085460405163250551df60e01b81526001600160a01b03909116925063250551df91506200187290899060029060040162002fe0565b600060405180830381600087803b1580156200188d57600080fd5b505af1158015620018a2573d6000803e3d6000fd5b5050600954600d5460405163ca669fa760e01b81526001600160a01b0391821660048201529116925063ca669fa79150602401600060405180830381600087803b158015620018f057600080fd5b505af115801562001905573d6000803e3d6000fd5b505060085460405163250551df60e01b81526001600160a01b03909116925063250551df91506200193e90899060029060040162003022565b600060405180830381600087803b1580156200195957600080fd5b505af11580156200196e573d6000803e3d6000fd5b5050600954600e5460405163ca669fa760e01b81526001600160a01b0391821660048201529116925063ca669fa79150602401600060405180830381600087803b158015620019bc57600080fd5b505af1158015620019d1573d6000803e3d6000fd5b505060085460405163250551df60e01b81526001600160a01b03909116925063250551df915062001a0a90899060029060040162003065565b600060405180830381600087803b15801562001a2557600080fd5b505af115801562001a3a573d6000803e3d6000fd5b505060085460405163096fb36760e31b8152600481018a90526001600160a01b039091169250634b7d9b38915060240160c060405180830381865afa15801562001a88573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001aae919062002ed7565b905062001ac181602001516001620027ea565b62001ad281604001516003620027ea565b600954600854604080516358b086bf60e11b815290516001600160a01b039384169363e5d6bf0293169163b1610d7e9160048083019260209291908290030181865afa15801562001b27573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b4d919062002aa3565b62001b5b906103e962002d4b565b6040518263ffffffff1660e01b815260040162001b7a91815260200190565b600060405180830381600087803b15801562001b9557600080fd5b505af115801562001baa573d6000803e3d6000fd5b50506008546040516345baebad60e11b8152600481018a90526001600160a01b039091169250638b75d75a9150602401600060405180830381600087803b15801562001bf557600080fd5b505af115801562001c0a573d6000803e3d6000fd5b5050600854604051636342268360e11b8152600481018a90526001600160a01b03909116925063c6844d069150602401600060405180830381865afa15801562001c58573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001c82919081019062002cad565b945062001ca98560800151600381111562001ca15762001ca162002ce6565b6003620027ea565b62001cce8560a00151600281111562001cc65762001cc662002ce6565b6002620027ea565b600a54600c546040516370a0823160e01b81526001600160a01b03918216600482015260009291909116906370a0823190602401602060405180830381865afa15801562001d20573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d46919062002aa3565b905062001d618162000aa185678ac7230489e8000062002d4b565b600a546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801562001dab573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001dd1919062002aa3565b905062001dec8162000aa1678ac7230489e8000089620030a8565b5050505050505050565b60008054610100900460ff161562001e175750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562001f265760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162001ea8917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001620030c2565b60408051601f198184030181529082905262001ec491620030f5565b6000604051808303816000865af19150503d806000811462001f03576040519150601f19603f3d011682016040523d82523d6000602084013e62001f08565b606091505b509150508080602001905181019062001f22919062002a0c565b9150505b919050565b600854604051630516fa9160e41b81526001600160a01b039091169063516fa9109062001f5f906103e89060040162002a37565b600060405180830381600087803b15801562001f7a57600080fd5b505af115801562001f8f573d6000803e3d6000fd5b505060085460405163f23a033b60e01b8152600093506001600160a01b03909116915063f23a033b9062001fca906103e89060040162002a37565b602060405180830381865afa15801562001fe8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200200e919062002aa3565b600854604051636342268360e11b8152600481018390529192506000916001600160a01b039091169063c6844d0690602401600060405180830381865afa1580156200205e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002088919081019062002cad565b9050620020cf81600001516040518060400160405280601d81526020017f77696c6c20455448206265206f76657220316b20746f6d6f72726f773f0000008152506200269d565b6009546040516372eb5f8160e11b81526103e860048201526001600160a01b039091169063e5d6bf0290602401600060405180830381600087803b1580156200211757600080fd5b505af11580156200212c573d6000803e3d6000fd5b5050600a546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a0823190602401602060405180830381865afa1580156200217c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021a2919062002aa3565b600854604051635d9032b960e01b81529192506001600160a01b031690635d9032b990620021d890869060019060040162002d1f565b600060405180830381600087803b158015620021f357600080fd5b505af115801562002208573d6000803e3d6000fd5b5050600a546040516370a0823160e01b81523060048201526200224493508492506001600160a01b03909116906370a082319060240162000a49565b60085460405163c5be26a960e01b8152600481018590526000916001600160a01b03169063c5be26a990602401606060405180830381865afa1580156200228f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620022b5919062002d66565b9050620022d48160200151600281111562000b375762000b3762002ce6565b6009546008546040805163a5bbe22b60e01b815290516001600160a01b039384169363e5d6bf0293169163a5bbe22b9160048083019260209291908290030181865afa15801562002329573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200234f919062002aa3565b6200235d906103e962002d4b565b6040518263ffffffff1660e01b81526004016200237c91815260200190565b600060405180830381600087803b1580156200239757600080fd5b505af1158015620023ac573d6000803e3d6000fd5b50506008546040516311f4368560e21b8152600481018890526001600160a01b0390911692506347d0da149150602401600060405180830381600087803b158015620023f757600080fd5b505af11580156200240c573d6000803e3d6000fd5b5050600854604051636342268360e11b8152600481018890526001600160a01b03909116925063c6844d069150602401600060405180830381865afa1580156200245a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002484919081019062002cad565b9250620024a38360800151600381111562001ca15762001ca162002ce6565b620024d98360a001516002811115620024c057620024c062002ce6565b8260200151600281111562000aa15762000aa162002ce6565b6008546040805163157c99c760e11b815290516000926001600160a01b031691632af9338e91600480830192869291908290030181865afa15801562002523573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200254d919081019062003113565b600854604051636342268360e11b8152600481018890529192506001600160a01b03169063c6844d0690602401600060405180830381865afa15801562002598573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620025c2919081019062002cad565b93506200261781600081518110620025de57620025de620031e4565b602002602001015160a001516002811115620025fe57620025fe62002ce6565b8560a00151600281111562000aa15762000aa162002ce6565b600a546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801562002661573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002687919062002aa3565b9050620026958185620027ea565b505050505050565b80604051602001620026b09190620030f5565b6040516020818303038152906040528051906020012082604051602001620026d99190620030f5565b6040516020818303038152906040528051906020012014620027e6577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620027629060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516200279b919062003228565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358382604051620027d4919062003267565b60405180910390a1620027e6620028cf565b5050565b808214620027e6577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516200285d9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405162002896919062003292565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a882604051620027d49190620032cb565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620029d15760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526200296c9291602001620030c2565b60408051601f19818403018152908290526200298891620030f5565b6000604051808303816000865af19150503d8060008114620029c7576040519150601f19603f3d011682016040523d82523d6000602084013e620029cc565b606091505b505050505b6000805461ff001916610100179055565b610a9580620032f783390190565b6120818062003d8c83390190565b61040a8062005e0d83390190565b60006020828403121562002a1f57600080fd5b8151801515811462002a3057600080fd5b9392505050565b6060808252601d908201527f77696c6c20455448206265206f76657220316b20746f6d6f72726f773f000000608082015260a0602082018190526015908201527468747470733a2f2f636f696e6765636b6f2e636f6d60581b60c0820152604081019190915260e00190565b60006020828403121562002ab657600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171562002af95762002af962002abd565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171562002b2b5762002b2b62002abd565b604052919050565b60005b8381101562002b5057818101518382015260200162002b36565b8381111562002b60576000848401525b50505050565b600082601f83011262002b7857600080fd5b815167ffffffffffffffff81111562002b955762002b9562002abd565b62002baa601f8201601f191660200162002aff565b81815284602083860101111562002bc057600080fd5b62002bd382602083016020870162002b33565b949350505050565b80516004811062001f2657600080fd5b80516003811062001f2657600080fd5b600060c0828403121562002c0e57600080fd5b62002c1862002ad3565b9050815167ffffffffffffffff8082111562002c3357600080fd5b62002c418583860162002b66565b8352602084015191508082111562002c5857600080fd5b5062002c678482850162002b66565b602083015250604082015160408201526060820151606082015262002c8f6080830162002bdb565b608082015262002ca260a0830162002beb565b60a082015292915050565b60006020828403121562002cc057600080fd5b815167ffffffffffffffff81111562002cd857600080fd5b62002bd38482850162002bfb565b634e487b7160e01b600052602160045260246000fd5b6003811062002d1b57634e487b7160e01b600052602160045260246000fd5b9052565b8281526040810162002a30602083018462002cfc565b634e487b7160e01b600052601160045260246000fd5b6000821982111562002d615762002d6162002d35565b500190565b60006060828403121562002d7957600080fd5b6040516060810181811067ffffffffffffffff8211171562002d9f5762002d9f62002abd565b60405282516001600160a01b038116811462002dba57600080fd5b815262002dca6020840162002beb565b6020820152604083015160408201528091505092915050565b62002def818362002cfc565b60406020820152600062002a3060408301600e81526d185b1a58d94b5c185cdcdddbdc9960921b602082015260400190565b62002e2d818362002cfc565b60406020820152600062002a3060408301600c81526b189bd88b5c185cdcdddbdc9960a21b602082015260400190565b62002e69818362002cfc565b60406020820152600062002a3060408301600d81526c1a9bda1b8b5c185cdcdddbdc99609a1b602082015260400190565b62002ea6818362002cfc565b60406020820152600062002a3060408301600d81526c1ade5b194b5c185cdcdddbdc99609a1b602082015260400190565b600060c0828403121562002eea57600080fd5b60405160c0810181811067ffffffffffffffff8211171562002f105762002f1062002abd565b8060405250825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a08201528091505092915050565b82815262002f67602082018362002cfc565b60606040820181905260149082015273616c6963652d70617373776f72642d77726f6e6760601b608082015260a00192915050565b82815262002fae602082018362002cfc565b60606040820152600062002bd360608301600e81526d185b1a58d94b5c185cdcdddbdc9960921b602082015260400190565b82815262002ff2602082018362002cfc565b60606040820152600062002bd360608301600c81526b189bd88b5c185cdcdddbdc9960a21b602082015260400190565b82815262003034602082018362002cfc565b60606040820152600062002bd360608301600d81526c1a9bda1b8b5c185cdcdddbdc99609a1b602082015260400190565b82815262003077602082018362002cfc565b60606040820152600062002bd360608301600d81526c1ade5b194b5c185cdcdddbdc99609a1b602082015260400190565b600082821015620030bd57620030bd62002d35565b500390565b6001600160e01b0319831681528151600090620030e781600485016020870162002b33565b919091016004019392505050565b600082516200310981846020870162002b33565b9190910192915050565b600060208083850312156200312757600080fd5b825167ffffffffffffffff808211156200314057600080fd5b818501915085601f8301126200315557600080fd5b8151818111156200316a576200316a62002abd565b8060051b6200317b85820162002aff565b91825283810185019185810190898411156200319657600080fd5b86860192505b83831015620031d757825185811115620031b65760008081fd5b620031c68b89838a010162002bfb565b83525091860191908601906200319c565b9998505050505050505050565b634e487b7160e01b600052603260045260246000fd5b600081518084526200321481602086016020860162002b33565b601f01601f19169290920160200192915050565b6040815260006200325360408301600a8152690808115e1c1958dd195960b21b602082015260400190565b828103602084015262002bd38185620031fa565b6040815260006200325360408301600a815269080808081058dd1d585b60b21b602082015260400190565b604081526000620032bd60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b604081526000620032bd60408301600a815269080808081058dd1d585b60b21b60208201526040019056fe608060405234801561001057600080fd5b506040805180820182526004808252634f50544960e01b60208084018281528551808701909652928552840152815191929161004e9160039161006a565b50805161006290600490602084019061006a565b50505061013d565b82805461007690610103565b90600052602060002090601f01602090048101928261009857600085556100de565b82601f106100b157805160ff19168380011785556100de565b828001600101855582156100de579182015b828111156100de5782518255916020019190600101906100c3565b506100ea9291506100ee565b5090565b5b808211156100ea57600081556001016100ef565b600181811c9082168061011757607f821691505b60208210810361013757634e487b7160e01b600052602260045260246000fd5b50919050565b6109498061014c6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461014157806370a082311461015657806395d89b411461017f578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101c0565b6040516100ce9190610787565b60405180910390f35b6100ea6100e53660046107f8565b610252565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a366004610822565b61026a565b604051601281526020016100ce565b6100ea61013c3660046107f8565b61028e565b61015461014f3660046107f8565b6102b0565b005b6100fe61016436600461085e565b6001600160a01b031660009081526020819052604090205490565b6100c16102be565b6100ea6101953660046107f8565b6102cd565b6100ea6101a83660046107f8565b61034d565b6100fe6101bb366004610880565b61035b565b6060600380546101cf906108b3565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb906108b3565b80156102485780601f1061021d57610100808354040283529160200191610248565b820191906000526020600020905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b600033610260818585610386565b5060019392505050565b6000336102788582856104aa565b610283858585610524565b506001949350505050565b6000336102608185856102a1838361035b565b6102ab91906108ed565b610386565b6102ba82826106c8565b5050565b6060600480546101cf906108b3565b600033816102db828661035b565b9050838110156103405760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102838286868403610386565b600033610260818585610524565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103e85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610337565b6001600160a01b0382166104495760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610337565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104b6848461035b565b9050600019811461051e57818110156105115760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610337565b61051e8484848403610386565b50505050565b6001600160a01b0383166105885760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610337565b6001600160a01b0382166105ea5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610337565b6001600160a01b038316600090815260208190526040902054818110156106625760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610337565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361051e565b6001600160a01b03821661071e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610337565b806002600082825461073091906108ed565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b818110156107b457858101830151858201604001528201610798565b818111156107c6576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146107f357600080fd5b919050565b6000806040838503121561080b57600080fd5b610814836107dc565b946020939093013593505050565b60008060006060848603121561083757600080fd5b610840846107dc565b925061084e602085016107dc565b9150604084013590509250925092565b60006020828403121561087057600080fd5b610879826107dc565b9392505050565b6000806040838503121561089357600080fd5b61089c836107dc565b91506108aa602084016107dc565b90509250929050565b600181811c908216806108c757607f821691505b6020821081036108e757634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561090e57634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212202befb42b7eb71f065c73653187486c60b319381473d4b3e2f05d98b55a62737064736f6c634300080d0033608060405234801561001057600080fd5b5060405161208138038061208183398101604081905261002f91610076565b600680546001600160a01b0319166001600160a01b0392909216919091179055678ac7230489e800006007556102586008556104b06009556078600a819055600b556100a6565b60006020828403121561008857600080fd5b81516001600160a01b038116811461009f57600080fd5b9392505050565b611fcc806100b56000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c8063a5bbe22b116100c3578063df6d798b1161007c578063df6d798b1461039a578063e5a6b10f146103e6578063ed3dccaa14610411578063ed7b0da21461043a578063f034778314610443578063f23a033b1461045657600080fd5b8063a5bbe22b146102c8578063b1610d7e146102d1578063bcacc70a146102da578063bfafb30e146102e3578063c5be26a91461035a578063c6844d061461037a57600080fd5b8063516fa91011610115578063516fa9101461023a5780635a7461011461024d5780635d9032b9146102865780636af97c05146102995780637a37d9ee146102ac5780638b75d75a146102b557600080fd5b8063250551df1461015d5780632af9338e14610172578063369431ef146101905780633bbd2235146101b557806347d0da14146101c85780634b7d9b38146101db575b600080fd5b61017061016b366004611ad3565b610469565b005b61017a6105fd565b6040516101879190611c23565b60405180910390f35b6101a361019e366004611c85565b6108ab565b60405161018796959493929190611c9e565b6101706101c3366004611cf7565b6109f7565b6101706101d6366004611c85565b610ab3565b6101ee6101e9366004611c85565b610cb7565b6040516101879190600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b610170610248366004611d19565b610d48565b61027861025b366004611d86565b600460209081526000928352604080842090915290825290205481565b604051908152602001610187565b610170610294366004611dc2565b610e86565b6101706102a7366004611c85565b611076565b610278600a5481565b6101706102c3366004611c85565b611216565b61027860085481565b61027860095481565b61027860075481565b61032d6102f1366004611c85565b60036020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050154905086565b604080519687526020870195909552938501929092526060840152608083015260a082015260c001610187565b61036d610368366004611c85565b611605565b6040516101879190611dee565b61038d610388366004611c85565b611691565b6040516101879190611e21565b6103d76103a8366004611c85565b600160208190526000918252604090912080549101546001600160a01b03821691600160a01b900460ff169083565b60405161018793929190611e3b565b6006546103f9906001600160a01b031681565b6040516001600160a01b039091168152602001610187565b6103f961041f366004611c85565b6002602052600090815260409020546001600160a01b031681565b610278600b5481565b610278610451366004611c85565b61188a565b610278610464366004611d19565b6118ab565b600083815260036020526040902060058101541580159061048d5750428160050154115b6104d65760405162461bcd60e51b81526020600482015260156024820152744e6f7420696e20612072657665616c20706861736560581b60448201526064015b60405180910390fd5b60008481526004602090815260408083203384528252918290205491518291610503918791879101611e66565b604051602081830303815290604052805190602001201461055b5760405162461bcd60e51b8152602060048201526012602482015271090c2e6d0cae640c8dedc4ee840dac2e8c6d60731b60448201526064016104cd565b600084600281111561056f5761056f611b77565b036105945760018260000160008282546105899190611ea4565b909155506105dd9050565b60018460028111156105a8576105a8611b77565b036105c25760018260010160008282546105899190611ea4565b60018260020160008282546105d79190611ea4565b90915550505b505050600091825250600460209081526040808320338452909152812055565b60055460609060009067ffffffffffffffff81111561061e5761061e611a30565b60405190808252806020026020018201604052801561068757816020015b6106746040805160c0810182526060808252602082018190526000928201839052810182905290608082019081526020016000905290565b81526020019060019003908161063c5790505b50905060005b6005548110156108a557600080600583815481106106ad576106ad611ebc565b906000526020600020015481526020019081526020016000206040518060c00160405290816000820180546106e190611ed2565b80601f016020809104026020016040519081016040528092919081815260200182805461070d90611ed2565b801561075a5780601f1061072f5761010080835404028352916020019161075a565b820191906000526020600020905b81548152906001019060200180831161073d57829003601f168201915b5050505050815260200160018201805461077390611ed2565b80601f016020809104026020016040519081016040528092919081815260200182805461079f90611ed2565b80156107ec5780601f106107c1576101008083540402835291602001916107ec565b820191906000526020600020905b8154815290600101906020018083116107cf57829003601f168201915b5050509183525050600282015460208201526003808301546040830152600483015460609092019160ff169081111561082757610827611b77565b600381111561083857610838611b77565b81526020016004820160019054906101000a900460ff16600281111561086057610860611b77565b600281111561087157610871611b77565b8152505082828151811061088757610887611ebc565b6020026020010181905250808061089d90611f06565b91505061068d565b50919050565b6000602081905290815260409020805481906108c690611ed2565b80601f01602080910402602001604051908101604052809291908181526020018280546108f290611ed2565b801561093f5780601f106109145761010080835404028352916020019161093f565b820191906000526020600020905b81548152906001019060200180831161092257829003601f168201915b50505050509080600101805461095490611ed2565b80601f016020809104026020016040519081016040528092919081815260200182805461098090611ed2565b80156109cd5780601f106109a2576101008083540402835291602001916109cd565b820191906000526020600020905b8154815290600101906020018083116109b057829003601f168201915b50505050600283015460038401546004909401549293909290915060ff8082169161010090041686565b6000828152600360205260409020600481015415801590610a1b5750428160040154115b610a5f5760405162461bcd60e51b81526020600482015260156024820152744e6f7420696e206120636f6d6d697420706861736560581b60448201526064016104cd565b6000838152600460209081526040808320338452909152902054610a9557600381018054906000610a8f83611f06565b91905055505b50600091825260046020908152604080842033855290915290912055565b600081815260016020908152604080832081516060810190925280546001600160a01b03811683529192909190830190600160a01b900460ff166002811115610afe57610afe611b77565b6002811115610b0f57610b0f611b77565b815260200160018201548152505090506008548160400151610b319190611ea4565b4211610b775760405162461bcd60e51b8152602060048201526015602482015274546f6f206561726c7920746f2066696e616c697a6560581b60448201526064016104cd565b6000828152600260205260409020546001600160a01b03168015610bec5760405162461bcd60e51b815260206004820152602660248201527f50726f706f73616c207761732064697370757465642c2063616e6e6f742066696044820152656e616c697a6560d01b60648201526084016104cd565b600083815260208181526040909120600481018054600360ff1982168117835593860151929361ffff1990911617610100836002811115610c2f57610c2f611b77565b0217905550600654835160075460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291169063a9059cbb906044016020604051808303816000875af1158015610c8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb09190611f1f565b5050505050565b610cf06040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b50600090815260036020818152604092839020835160c081018552815481526001820154928101929092526002810154938201939093529082015460608201526004820154608082015260059091015460a082015290565b6000610d558484846118ab565b905060006040518060c0016040528086815260200185815260200184815260200183815260200160006003811115610d8f57610d8f611b77565b8152602001600090526000838152602081815260409091208251805193945084939192610dc192849290910190611983565b506020828101518051610dda9260018501920190611983565b50604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690836003811115610e1957610e19611b77565b021790555060a082015160048201805461ff001916610100836002811115610e4357610e43611b77565b021790555050600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db001929092555050505050565b60008281526020819052604090206002810154421015610edc5760405162461bcd60e51b81526020600482015260116024820152704e6f74207965742061742065787069727960781b60448201526064016104cd565b6000600482015460ff166003811115610ef757610ef7611b77565b14610f445760405162461bcd60e51b815260206004820181905260248201527f5175657374696f6e20616c7265616479206861766520612070726f706f73616c60448201526064016104cd565b6040518060600160405280336001600160a01b03168152602001836002811115610f7057610f70611b77565b81524260209182015260008581526001825260409020825181546001600160a01b039091166001600160a01b031982168117835592840151919283916001600160a81b03191617600160a01b836002811115610fce57610fce611b77565b02179055506040919091015160019182015560048201805460ff1916828002179055506006546007546040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561104c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110709190611f1f565b50505050565b60008181526020819052604090206001600482015460ff16600381111561109f5761109f611b77565b146110ec5760405162461bcd60e51b815260206004820152601b60248201527f5175657374696f6e2063616e6e6f74206265206469737075746564000000000060448201526064016104cd565b600082815260016020819052604090912060085491810154909161110f91611ea4565b42106111535760405162461bcd60e51b8152602060048201526013602482015272746f6f206c61746520746f206469737075746560681b60448201526064016104cd565b6004828101805460ff19166002908117909155600085815260209190915260409081902080546001600160a01b0319163390811790915560065460075492516323b872dd60e01b81529384019190915230602484015260448301919091526001600160a01b0316906323b872dd906064016020604051808303816000875af11580156111e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112079190611f1f565b50611211836118e1565b505050565b6000818152600360208181526040808420815160c081018352815481526001820154938101939093526002810154918301919091529182015460608201526004820154608082015260059091015460a082018190529091036112ce5760405162461bcd60e51b815260206004820152602b60248201527f5468657265206973206e6f206f6e676f696e6720766f746520666f722074686960448201526a399038bab2b9ba34b7b71760a91b60648201526084016104cd565b8060a0015142116113215760405162461bcd60e51b815260206004820152601b60248201527f566f74696e6720706572696f6420686173206e6f7420656e646564000000000060448201526064016104cd565b600082815260016020908152604080832081516060810190925280546001600160a01b03811683529192909190830190600160a01b900460ff16600281111561136c5761136c611b77565b600281111561137d5761137d611b77565b8152600191909101546020918201526000858152600282526040808220548284529181902090860151928601519394506001600160a01b039091169290911080156113cc575083516020850151115b156114c05760048101805461ff00191661010017905560015b836020015160028111156113fb576113fb611b77565b0361149b5760065483516007546001600160a01b039092169163a9059cbb9190611426906002611f41565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611471573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114959190611f1f565b506115f1565b6006546007546001600160a01b039091169063a9059cbb908490611426906002611f41565b836040015184602001511080156114db575083516040850151115b156114f85760048101805461ff00191661020017905560026113e5565b600654835160075460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291169063a9059cbb906044016020604051808303816000875af1158015611550573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115749190611f1f565b5060065460075460405163a9059cbb60e01b81526001600160a01b038581166004830152602482019290925291169063a9059cbb906044016020604051808303816000875af11580156115cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ef9190611f1f565b505b600401805460ff1916600317905550505050565b604080516060810182526000808252602082018190529181019190915260008281526001602090815260409182902082516060810190935280546001600160a01b03811684529091830190600160a01b900460ff16600281111561166b5761166b611b77565b600281111561167c5761167c611b77565b81526020016001820154815250509050919050565b6116c96040805160c0810182526060808252602082018190526000928201839052810182905290608082019081526020016000905290565b60008281526020819052604090819020815160c081019092528054829082906116f190611ed2565b80601f016020809104026020016040519081016040528092919081815260200182805461171d90611ed2565b801561176a5780601f1061173f5761010080835404028352916020019161176a565b820191906000526020600020905b81548152906001019060200180831161174d57829003601f168201915b5050505050815260200160018201805461178390611ed2565b80601f01602080910402602001604051908101604052809291908181526020018280546117af90611ed2565b80156117fc5780601f106117d1576101008083540402835291602001916117fc565b820191906000526020600020905b8154815290600101906020018083116117df57829003601f168201915b5050509183525050600282015460208201526003808301546040830152600483015460609092019160ff169081111561183757611837611b77565b600381111561184857611848611b77565b81526020016004820160019054906101000a900460ff16600281111561187057611870611b77565b600281111561188157611881611b77565b90525092915050565b6005818154811061189a57600080fd5b600091825260209091200154905081565b60008383836040516020016118c293929190611f60565b6040516020818303038152906040528051906020012090509392505050565b60006040518060c0016040528060008152602001600081526020016000815260200160008152602001600a54426119189190611ea4565b8152602001600b54600261192c9190611f41565b6119369042611ea4565b9052600092835260036020818152604094859020835181559083015160018201559382015160028501556060820151908401556080810151600484015560a0015160059092019190915550565b82805461198f90611ed2565b90600052602060002090601f0160209004810192826119b157600085556119f7565b82601f106119ca57805160ff19168380011785556119f7565b828001600101855582156119f7579182015b828111156119f75782518255916020019190600101906119dc565b50611a03929150611a07565b5090565b5b80821115611a035760008155600101611a08565b803560038110611a2b57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611a5757600080fd5b813567ffffffffffffffff80821115611a7257611a72611a30565b604051601f8301601f19908116603f01168101908282118183101715611a9a57611a9a611a30565b81604052838152866020858801011115611ab357600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215611ae857600080fd5b83359250611af860208501611a1c565b9150604084013567ffffffffffffffff811115611b1457600080fd5b611b2086828701611a46565b9150509250925092565b6000815180845260005b81811015611b5057602081850181015186830182015201611b34565b81811115611b62576000602083870101525b50601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b60048110611b9d57611b9d611b77565b9052565b60038110611b9d57611b9d611b77565b6000815160c08452611bc660c0850182611b2a565b905060208301518482036020860152611bdf8282611b2a565b91505060408301516040850152606083015160608501526080830151611c086080860182611b8d565b5060a0830151611c1b60a0860182611ba1565b509392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611c7857603f19888603018452611c66858351611bb1565b94509285019290850190600101611c4a565b5092979650505050505050565b600060208284031215611c9757600080fd5b5035919050565b60c081526000611cb160c0830189611b2a565b8281036020840152611cc38189611b2a565b915050856040830152846060830152611cdf6080830185611b8d565b611cec60a0830184611ba1565b979650505050505050565b60008060408385031215611d0a57600080fd5b50508035926020909101359150565b600080600060608486031215611d2e57600080fd5b833567ffffffffffffffff80821115611d4657600080fd5b611d5287838801611a46565b94506020860135915080821115611d6857600080fd5b50611d7586828701611a46565b925050604084013590509250925092565b60008060408385031215611d9957600080fd5b8235915060208301356001600160a01b0381168114611db757600080fd5b809150509250929050565b60008060408385031215611dd557600080fd5b82359150611de560208401611a1c565b90509250929050565b81516001600160a01b031681526020808301516060830191611e1290840182611ba1565b50604092830151919092015290565b602081526000611e346020830184611bb1565b9392505050565b6001600160a01b038416815260608101611e586020830185611ba1565b826040830152949350505050565b611e708184611ba1565b604060208201526000611e866040830184611b2a565b949350505050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611eb757611eb7611e8e565b500190565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680611ee657607f821691505b6020821081036108a557634e487b7160e01b600052602260045260246000fd5b600060018201611f1857611f18611e8e565b5060010190565b600060208284031215611f3157600080fd5b81518015158114611e3457600080fd5b6000816000190483118215151615611f5b57611f5b611e8e565b500290565b606081526000611f736060830186611b2a565b8281036020840152611f858186611b2a565b91505082604083015294935050505056fea26469706673582212201fb06cb8e6fa9ad8854e55913873459ef119b70c111e329330be311d4c46330364736f6c634300080d0033608060405234801561001057600080fd5b506103ea806100206000396000f3fe6080604052600436106100385760003560e01c806301ffc9a714610044578063bc197c8114610079578063f23a6e61146100be57600080fd5b3661003f57005b600080fd5b34801561005057600080fd5b5061006461005f366004610121565b6100ea565b60405190151581526020015b60405180910390f35b34801561008557600080fd5b506100a56100943660046102a5565b63bc197c8160e01b95945050505050565b6040516001600160e01b03199091168152602001610070565b3480156100ca57600080fd5b506100a56100d936600461034f565b63f23a6e6160e01b95945050505050565b60006001600160e01b03198216630271189760e51b148061011b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006020828403121561013357600080fd5b81356001600160e01b03198116811461014b57600080fd5b9392505050565b80356001600160a01b038116811461016957600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156101ad576101ad61016e565b604052919050565b600082601f8301126101c657600080fd5b8135602067ffffffffffffffff8211156101e2576101e261016e565b8160051b6101f1828201610184565b928352848101820192828101908785111561020b57600080fd5b83870192505b8483101561022a57823582529183019190830190610211565b979650505050505050565b600082601f83011261024657600080fd5b813567ffffffffffffffff8111156102605761026061016e565b610273601f8201601f1916602001610184565b81815284602083860101111561028857600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156102bd57600080fd5b6102c686610152565b94506102d460208701610152565b9350604086013567ffffffffffffffff808211156102f157600080fd5b6102fd89838a016101b5565b9450606088013591508082111561031357600080fd5b61031f89838a016101b5565b9350608088013591508082111561033557600080fd5b5061034288828901610235565b9150509295509295909350565b600080600080600060a0868803121561036757600080fd5b61037086610152565b945061037e60208701610152565b93506040860135925060608601359150608086013567ffffffffffffffff8111156103a857600080fd5b6103428882890161023556fea2646970667358221220ade1cc242e38d235f060e21956cdf622211a20b426034409bd47f0c02814da2764736f6c634300080d0033a2646970667358221220f0fb8eac08609c696bef1deb128cba5ccdef310d19a02607d7bb4df727eb4ea364736f6c634300080d0033",
    "sourceMap": "443:6327:19:-:0;;;1572:26:0;;;-1:-1:-1;;170:28:1;;;;;443:6327:19;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620000935760003560e01c8063ba414fa61162000062578063ba414fa614620000e7578063e3f908281462000102578063f8ccbf47146200010c578063fa7626d4146200012057600080fd5b80630a9254e414620000985780633a76846314620000a45780636286ffd914620000a257806374b9983a14620000dd575b600080fd5b620000a26200012e565b005b620000c0737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b620000a262000735565b620000f162001df6565b6040519015158152602001620000d4565b620000a262001f2b565b600054620000f19062010000900460ff1681565b600054620000f19060ff1681565b600980546001600160a01b031916737109709ecfa91a80626ff3989d68f67f5b1dd12d1790556040516200016290620029e2565b604051809103906000f0801580156200017f573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b03929092169182179055604051620001ad90620029f0565b6001600160a01b039091168152602001604051809103906000f080158015620001da573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b03929092169190911790556040516200020990620029fe565b604051809103906000f08015801562000226573d6000803e3d6000fd5b50600b80546001600160a01b0319166001600160a01b03929092169190911790556040516200025590620029fe565b604051809103906000f08015801562000272573d6000803e3d6000fd5b50600c80546001600160a01b0319166001600160a01b0392909216919091179055604051620002a190620029fe565b604051809103906000f080158015620002be573d6000803e3d6000fd5b50600d80546001600160a01b0319166001600160a01b0392909216919091179055604051620002ed90620029fe565b604051809103906000f0801580156200030a573d6000803e3d6000fd5b50600e80546001600160a01b0319166001600160a01b03928316179055600b54604051911690600090683635c9adc5dea000009082818181858883f193505050501580156200035d573d6000803e3d6000fd5b50600c546040516001600160a01b0390911690600090683635c9adc5dea000009082818181858883f193505050501580156200039d573d6000803e3d6000fd5b50600a546040516340c10f1960e01b815230600482015269d3c21bcecceda100000060248201526001600160a01b03909116906340c10f1990604401600060405180830381600087803b158015620003f457600080fd5b505af115801562000409573d6000803e3d6000fd5b5050600a54600b546040516340c10f1960e01b81526001600160a01b03918216600482015269d3c21bcecceda10000006024820152911692506340c10f199150604401600060405180830381600087803b1580156200046757600080fd5b505af11580156200047c573d6000803e3d6000fd5b5050600a54600c546040516340c10f1960e01b81526001600160a01b03918216600482015269d3c21bcecceda10000006024820152911692506340c10f199150604401600060405180830381600087803b158015620004da57600080fd5b505af1158015620004ef573d6000803e3d6000fd5b5050600a5460085460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116925063095ea7b391506044016020604051808303816000875af11580156200054a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000570919062002a0c565b50600954600b5460405163ca669fa760e01b81526001600160a01b03918216600482015291169063ca669fa790602401600060405180830381600087803b158015620005bb57600080fd5b505af1158015620005d0573d6000803e3d6000fd5b5050600a5460085460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116925063095ea7b391506044016020604051808303816000875af11580156200062b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000651919062002a0c565b50600954600c5460405163ca669fa760e01b81526001600160a01b03918216600482015291169063ca669fa790602401600060405180830381600087803b1580156200069c57600080fd5b505af1158015620006b1573d6000803e3d6000fd5b5050600a5460085460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116925063095ea7b391506044016020604051808303816000875af11580156200070c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000732919062002a0c565b50565b600854604051630516fa9160e41b81526001600160a01b039091169063516fa9109062000769906103e89060040162002a37565b600060405180830381600087803b1580156200078457600080fd5b505af115801562000799573d6000803e3d6000fd5b505060085460405163f23a033b60e01b8152600093506001600160a01b03909116915063f23a033b90620007d4906103e89060040162002a37565b602060405180830381865afa158015620007f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000818919062002aa3565b600854604051636342268360e11b8152600481018390529192506000916001600160a01b039091169063c6844d0690602401600060405180830381865afa15801562000868573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000892919081019062002cad565b9050620008d981600001516040518060400160405280601d81526020017f77696c6c20455448206265206f76657220316b20746f6d6f72726f773f0000008152506200269d565b6009546040516372eb5f8160e11b81526103e860048201526001600160a01b039091169063e5d6bf0290602401600060405180830381600087803b1580156200092157600080fd5b505af115801562000936573d6000803e3d6000fd5b5050600a546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a0823190602401602060405180830381865afa15801562000986573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009ac919062002aa3565b600854604051635d9032b960e01b81529192506001600160a01b031690635d9032b990620009e290869060019060040162002d1f565b600060405180830381600087803b158015620009fd57600080fd5b505af115801562000a12573d6000803e3d6000fd5b5050600a546040516370a0823160e01b815230600482015262000aa793508492506001600160a01b03909116906370a08231906024015b602060405180830381865afa15801562000a67573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a8d919062002aa3565b62000aa190678ac7230489e8000062002d4b565b620027ea565b60085460405163c5be26a960e01b8152600481018590526000916001600160a01b03169063c5be26a990602401606060405180830381865afa15801562000af2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b18919062002d66565b905062000b3f8160200151600281111562000b375762000b3762002ce6565b6001620027ea565b600a54600c546040516370a0823160e01b81526001600160a01b03918216600482015260009291909116906370a0823190602401602060405180830381865afa15801562000b91573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bb7919062002aa3565b600954600c5460405163ca669fa760e01b81526001600160a01b039182166004820152929350169063ca669fa790602401600060405180830381600087803b15801562000c0357600080fd5b505af115801562000c18573d6000803e3d6000fd5b5050600854604051636af97c0560e01b8152600481018990526001600160a01b039091169250636af97c059150602401600060405180830381600087803b15801562000c6357600080fd5b505af115801562000c78573d6000803e3d6000fd5b5050600a54600c546040516370a0823160e01b81526001600160a01b03918216600482015262000cb894508593509116906370a082319060240162000a49565b6009546008546040805163a5bbe22b60e01b815290516001600160a01b039384169363e5d6bf0293169163a5bbe22b9160048083019260209291908290030181865afa15801562000d0d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d33919062002aa3565b62000d41906103e962002d4b565b6040518263ffffffff1660e01b815260040162000d6091815260200190565b600060405180830381600087803b15801562000d7b57600080fd5b505af115801562000d90573d6000803e3d6000fd5b505060095460405163f28dceb360e01b815260206004820152602660248201527f50726f706f73616c207761732064697370757465642c2063616e6e6f742066696044820152656e616c697a6560d01b60648201526001600160a01b03909116925063f28dceb39150608401600060405180830381600087803b15801562000e1757600080fd5b505af115801562000e2c573d6000803e3d6000fd5b50506008546040516311f4368560e21b8152600481018990526001600160a01b0390911692506347d0da149150602401600060405180830381600087803b15801562000e7757600080fd5b505af115801562000e8c573d6000803e3d6000fd5b50506009546040516372eb5f8160e11b81526103e860048201526001600160a01b03909116925063e5d6bf029150602401600060405180830381600087803b15801562000ed857600080fd5b505af115801562000eed573d6000803e3d6000fd5b5050600954600b5460405163ca669fa760e01b81526001600160a01b0391821660048201529116925063ca669fa79150602401600060405180830381600087803b15801562000f3b57600080fd5b505af115801562000f50573d6000803e3d6000fd5b50506008546040516001600160a01b039091169250633bbd22359150879062000f7f9060019060200162002de3565b604051602081830303815290604052805190602001206040518363ffffffff1660e01b815260040162000fbc929190918252602082015260400190565b600060405180830381600087803b15801562000fd757600080fd5b505af115801562000fec573d6000803e3d6000fd5b5050600954600c5460405163ca669fa760e01b81526001600160a01b0391821660048201529116925063ca669fa79150602401600060405180830381600087803b1580156200103a57600080fd5b505af11580156200104f573d6000803e3d6000fd5b50506008546040516001600160a01b039091169250633bbd2235915087906200107e9060029060200162002e21565b604051602081830303815290604052805190602001206040518363ffffffff1660e01b8152600401620010bb929190918252602082015260400190565b600060405180830381600087803b158015620010d657600080fd5b505af1158015620010eb573d6000803e3d6000fd5b5050600954600d5460405163ca669fa760e01b81526001600160a01b0391821660048201529116925063ca669fa79150602401600060405180830381600087803b1580156200113957600080fd5b505af11580156200114e573d6000803e3d6000fd5b50506008546040516001600160a01b039091169250633bbd2235915087906200117d9060029060200162002e5d565b604051602081830303815290604052805190602001206040518363ffffffff1660e01b8152600401620011ba929190918252602082015260400190565b600060405180830381600087803b158015620011d557600080fd5b505af1158015620011ea573d6000803e3d6000fd5b5050600954600e5460405163ca669fa760e01b81526001600160a01b0391821660048201529116925063ca669fa79150602401600060405180830381600087803b1580156200123857600080fd5b505af11580156200124d573d6000803e3d6000fd5b50506008546040516001600160a01b039091169250633bbd2235915087906200127c9060019060200162002e9a565b604051602081830303815290604052805190602001206040518363ffffffff1660e01b8152600401620012b9929190918252602082015260400190565b600060405180830381600087803b158015620012d457600080fd5b505af1158015620012e9573d6000803e3d6000fd5b5050600954600e5460405163ca669fa760e01b81526001600160a01b0391821660048201529116925063ca669fa79150602401600060405180830381600087803b1580156200133757600080fd5b505af11580156200134c573d6000803e3d6000fd5b50506008546040516001600160a01b039091169250633bbd2235915087906200137b9060029060200162002e9a565b604051602081830303815290604052805190602001206040518363ffffffff1660e01b8152600401620013b8929190918252602082015260400190565b600060405180830381600087803b158015620013d357600080fd5b505af1158015620013e8573d6000803e3d6000fd5b505060085460405163096fb36760e31b815260048101899052600093506001600160a01b039091169150634b7d9b389060240160c060405180830381865afa15801562001439573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200145f919062002ed7565b90506200147281606001516004620027ea565b600954600b5460405163ca669fa760e01b81526001600160a01b03918216600482015291169063ca669fa790602401600060405180830381600087803b158015620014bc57600080fd5b505af1158015620014d1573d6000803e3d6000fd5b505060095460405163f28dceb360e01b8152602060048201526012602482015271090c2e6d0cae640c8dedc4ee840dac2e8c6d60731b60448201526001600160a01b03909116925063f28dceb39150606401600060405180830381600087803b1580156200153e57600080fd5b505af115801562001553573d6000803e3d6000fd5b505060085460405163250551df60e01b81526001600160a01b03909116925063250551df91506200158c90899060019060040162002f55565b600060405180830381600087803b158015620015a757600080fd5b505af1158015620015bc573d6000803e3d6000fd5b5050600954600b5460405163ca669fa760e01b81526001600160a01b0391821660048201529116925063ca669fa79150602401600060405180830381600087803b1580156200160a57600080fd5b505af11580156200161f573d6000803e3d6000fd5b505060085460405163250551df60e01b81526001600160a01b03909116925063250551df91506200165890899060019060040162002f9c565b600060405180830381600087803b1580156200167357600080fd5b505af115801562001688573d6000803e3d6000fd5b5050600954600c5460405163ca669fa760e01b81526001600160a01b0391821660048201529116925063ca669fa79150602401600060405180830381600087803b158015620016d657600080fd5b505af1158015620016eb573d6000803e3d6000fd5b505060085460405163250551df60e01b81526001600160a01b03909116925063250551df91506200172490899060029060040162002fe0565b600060405180830381600087803b1580156200173f57600080fd5b505af115801562001754573d6000803e3d6000fd5b5050600954600c5460405163ca669fa760e01b81526001600160a01b0391821660048201529116925063ca669fa79150602401600060405180830381600087803b158015620017a257600080fd5b505af1158015620017b7573d6000803e3d6000fd5b505060095460405163f28dceb360e01b8152602060048201526012602482015271090c2e6d0cae640c8dedc4ee840dac2e8c6d60731b60448201526001600160a01b03909116925063f28dceb39150606401600060405180830381600087803b1580156200182457600080fd5b505af115801562001839573d6000803e3d6000fd5b505060085460405163250551df60e01b81526001600160a01b03909116925063250551df91506200187290899060029060040162002fe0565b600060405180830381600087803b1580156200188d57600080fd5b505af1158015620018a2573d6000803e3d6000fd5b5050600954600d5460405163ca669fa760e01b81526001600160a01b0391821660048201529116925063ca669fa79150602401600060405180830381600087803b158015620018f057600080fd5b505af115801562001905573d6000803e3d6000fd5b505060085460405163250551df60e01b81526001600160a01b03909116925063250551df91506200193e90899060029060040162003022565b600060405180830381600087803b1580156200195957600080fd5b505af11580156200196e573d6000803e3d6000fd5b5050600954600e5460405163ca669fa760e01b81526001600160a01b0391821660048201529116925063ca669fa79150602401600060405180830381600087803b158015620019bc57600080fd5b505af1158015620019d1573d6000803e3d6000fd5b505060085460405163250551df60e01b81526001600160a01b03909116925063250551df915062001a0a90899060029060040162003065565b600060405180830381600087803b15801562001a2557600080fd5b505af115801562001a3a573d6000803e3d6000fd5b505060085460405163096fb36760e31b8152600481018a90526001600160a01b039091169250634b7d9b38915060240160c060405180830381865afa15801562001a88573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001aae919062002ed7565b905062001ac181602001516001620027ea565b62001ad281604001516003620027ea565b600954600854604080516358b086bf60e11b815290516001600160a01b039384169363e5d6bf0293169163b1610d7e9160048083019260209291908290030181865afa15801562001b27573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b4d919062002aa3565b62001b5b906103e962002d4b565b6040518263ffffffff1660e01b815260040162001b7a91815260200190565b600060405180830381600087803b15801562001b9557600080fd5b505af115801562001baa573d6000803e3d6000fd5b50506008546040516345baebad60e11b8152600481018a90526001600160a01b039091169250638b75d75a9150602401600060405180830381600087803b15801562001bf557600080fd5b505af115801562001c0a573d6000803e3d6000fd5b5050600854604051636342268360e11b8152600481018a90526001600160a01b03909116925063c6844d069150602401600060405180830381865afa15801562001c58573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001c82919081019062002cad565b945062001ca98560800151600381111562001ca15762001ca162002ce6565b6003620027ea565b62001cce8560a00151600281111562001cc65762001cc662002ce6565b6002620027ea565b600a54600c546040516370a0823160e01b81526001600160a01b03918216600482015260009291909116906370a0823190602401602060405180830381865afa15801562001d20573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d46919062002aa3565b905062001d618162000aa185678ac7230489e8000062002d4b565b600a546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801562001dab573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001dd1919062002aa3565b905062001dec8162000aa1678ac7230489e8000089620030a8565b5050505050505050565b60008054610100900460ff161562001e175750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562001f265760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162001ea8917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001620030c2565b60408051601f198184030181529082905262001ec491620030f5565b6000604051808303816000865af19150503d806000811462001f03576040519150601f19603f3d011682016040523d82523d6000602084013e62001f08565b606091505b509150508080602001905181019062001f22919062002a0c565b9150505b919050565b600854604051630516fa9160e41b81526001600160a01b039091169063516fa9109062001f5f906103e89060040162002a37565b600060405180830381600087803b15801562001f7a57600080fd5b505af115801562001f8f573d6000803e3d6000fd5b505060085460405163f23a033b60e01b8152600093506001600160a01b03909116915063f23a033b9062001fca906103e89060040162002a37565b602060405180830381865afa15801562001fe8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200200e919062002aa3565b600854604051636342268360e11b8152600481018390529192506000916001600160a01b039091169063c6844d0690602401600060405180830381865afa1580156200205e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002088919081019062002cad565b9050620020cf81600001516040518060400160405280601d81526020017f77696c6c20455448206265206f76657220316b20746f6d6f72726f773f0000008152506200269d565b6009546040516372eb5f8160e11b81526103e860048201526001600160a01b039091169063e5d6bf0290602401600060405180830381600087803b1580156200211757600080fd5b505af11580156200212c573d6000803e3d6000fd5b5050600a546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a0823190602401602060405180830381865afa1580156200217c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021a2919062002aa3565b600854604051635d9032b960e01b81529192506001600160a01b031690635d9032b990620021d890869060019060040162002d1f565b600060405180830381600087803b158015620021f357600080fd5b505af115801562002208573d6000803e3d6000fd5b5050600a546040516370a0823160e01b81523060048201526200224493508492506001600160a01b03909116906370a082319060240162000a49565b60085460405163c5be26a960e01b8152600481018590526000916001600160a01b03169063c5be26a990602401606060405180830381865afa1580156200228f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620022b5919062002d66565b9050620022d48160200151600281111562000b375762000b3762002ce6565b6009546008546040805163a5bbe22b60e01b815290516001600160a01b039384169363e5d6bf0293169163a5bbe22b9160048083019260209291908290030181865afa15801562002329573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200234f919062002aa3565b6200235d906103e962002d4b565b6040518263ffffffff1660e01b81526004016200237c91815260200190565b600060405180830381600087803b1580156200239757600080fd5b505af1158015620023ac573d6000803e3d6000fd5b50506008546040516311f4368560e21b8152600481018890526001600160a01b0390911692506347d0da149150602401600060405180830381600087803b158015620023f757600080fd5b505af11580156200240c573d6000803e3d6000fd5b5050600854604051636342268360e11b8152600481018890526001600160a01b03909116925063c6844d069150602401600060405180830381865afa1580156200245a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002484919081019062002cad565b9250620024a38360800151600381111562001ca15762001ca162002ce6565b620024d98360a001516002811115620024c057620024c062002ce6565b8260200151600281111562000aa15762000aa162002ce6565b6008546040805163157c99c760e11b815290516000926001600160a01b031691632af9338e91600480830192869291908290030181865afa15801562002523573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200254d919081019062003113565b600854604051636342268360e11b8152600481018890529192506001600160a01b03169063c6844d0690602401600060405180830381865afa15801562002598573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620025c2919081019062002cad565b93506200261781600081518110620025de57620025de620031e4565b602002602001015160a001516002811115620025fe57620025fe62002ce6565b8560a00151600281111562000aa15762000aa162002ce6565b600a546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801562002661573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002687919062002aa3565b9050620026958185620027ea565b505050505050565b80604051602001620026b09190620030f5565b6040516020818303038152906040528051906020012082604051602001620026d99190620030f5565b6040516020818303038152906040528051906020012014620027e6577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620027629060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516200279b919062003228565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358382604051620027d4919062003267565b60405180910390a1620027e6620028cf565b5050565b808214620027e6577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516200285d9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405162002896919062003292565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a882604051620027d49190620032cb565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620029d15760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526200296c9291602001620030c2565b60408051601f19818403018152908290526200298891620030f5565b6000604051808303816000865af19150503d8060008114620029c7576040519150601f19603f3d011682016040523d82523d6000602084013e620029cc565b606091505b505050505b6000805461ff001916610100179055565b610a9580620032f783390190565b6120818062003d8c83390190565b61040a8062005e0d83390190565b60006020828403121562002a1f57600080fd5b8151801515811462002a3057600080fd5b9392505050565b6060808252601d908201527f77696c6c20455448206265206f76657220316b20746f6d6f72726f773f000000608082015260a0602082018190526015908201527468747470733a2f2f636f696e6765636b6f2e636f6d60581b60c0820152604081019190915260e00190565b60006020828403121562002ab657600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171562002af95762002af962002abd565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171562002b2b5762002b2b62002abd565b604052919050565b60005b8381101562002b5057818101518382015260200162002b36565b8381111562002b60576000848401525b50505050565b600082601f83011262002b7857600080fd5b815167ffffffffffffffff81111562002b955762002b9562002abd565b62002baa601f8201601f191660200162002aff565b81815284602083860101111562002bc057600080fd5b62002bd382602083016020870162002b33565b949350505050565b80516004811062001f2657600080fd5b80516003811062001f2657600080fd5b600060c0828403121562002c0e57600080fd5b62002c1862002ad3565b9050815167ffffffffffffffff8082111562002c3357600080fd5b62002c418583860162002b66565b8352602084015191508082111562002c5857600080fd5b5062002c678482850162002b66565b602083015250604082015160408201526060820151606082015262002c8f6080830162002bdb565b608082015262002ca260a0830162002beb565b60a082015292915050565b60006020828403121562002cc057600080fd5b815167ffffffffffffffff81111562002cd857600080fd5b62002bd38482850162002bfb565b634e487b7160e01b600052602160045260246000fd5b6003811062002d1b57634e487b7160e01b600052602160045260246000fd5b9052565b8281526040810162002a30602083018462002cfc565b634e487b7160e01b600052601160045260246000fd5b6000821982111562002d615762002d6162002d35565b500190565b60006060828403121562002d7957600080fd5b6040516060810181811067ffffffffffffffff8211171562002d9f5762002d9f62002abd565b60405282516001600160a01b038116811462002dba57600080fd5b815262002dca6020840162002beb565b6020820152604083015160408201528091505092915050565b62002def818362002cfc565b60406020820152600062002a3060408301600e81526d185b1a58d94b5c185cdcdddbdc9960921b602082015260400190565b62002e2d818362002cfc565b60406020820152600062002a3060408301600c81526b189bd88b5c185cdcdddbdc9960a21b602082015260400190565b62002e69818362002cfc565b60406020820152600062002a3060408301600d81526c1a9bda1b8b5c185cdcdddbdc99609a1b602082015260400190565b62002ea6818362002cfc565b60406020820152600062002a3060408301600d81526c1ade5b194b5c185cdcdddbdc99609a1b602082015260400190565b600060c0828403121562002eea57600080fd5b60405160c0810181811067ffffffffffffffff8211171562002f105762002f1062002abd565b8060405250825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a08201528091505092915050565b82815262002f67602082018362002cfc565b60606040820181905260149082015273616c6963652d70617373776f72642d77726f6e6760601b608082015260a00192915050565b82815262002fae602082018362002cfc565b60606040820152600062002bd360608301600e81526d185b1a58d94b5c185cdcdddbdc9960921b602082015260400190565b82815262002ff2602082018362002cfc565b60606040820152600062002bd360608301600c81526b189bd88b5c185cdcdddbdc9960a21b602082015260400190565b82815262003034602082018362002cfc565b60606040820152600062002bd360608301600d81526c1a9bda1b8b5c185cdcdddbdc99609a1b602082015260400190565b82815262003077602082018362002cfc565b60606040820152600062002bd360608301600d81526c1ade5b194b5c185cdcdddbdc99609a1b602082015260400190565b600082821015620030bd57620030bd62002d35565b500390565b6001600160e01b0319831681528151600090620030e781600485016020870162002b33565b919091016004019392505050565b600082516200310981846020870162002b33565b9190910192915050565b600060208083850312156200312757600080fd5b825167ffffffffffffffff808211156200314057600080fd5b818501915085601f8301126200315557600080fd5b8151818111156200316a576200316a62002abd565b8060051b6200317b85820162002aff565b91825283810185019185810190898411156200319657600080fd5b86860192505b83831015620031d757825185811115620031b65760008081fd5b620031c68b89838a010162002bfb565b83525091860191908601906200319c565b9998505050505050505050565b634e487b7160e01b600052603260045260246000fd5b600081518084526200321481602086016020860162002b33565b601f01601f19169290920160200192915050565b6040815260006200325360408301600a8152690808115e1c1958dd195960b21b602082015260400190565b828103602084015262002bd38185620031fa565b6040815260006200325360408301600a815269080808081058dd1d585b60b21b602082015260400190565b604081526000620032bd60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b604081526000620032bd60408301600a815269080808081058dd1d585b60b21b60208201526040019056fe608060405234801561001057600080fd5b506040805180820182526004808252634f50544960e01b60208084018281528551808701909652928552840152815191929161004e9160039161006a565b50805161006290600490602084019061006a565b50505061013d565b82805461007690610103565b90600052602060002090601f01602090048101928261009857600085556100de565b82601f106100b157805160ff19168380011785556100de565b828001600101855582156100de579182015b828111156100de5782518255916020019190600101906100c3565b506100ea9291506100ee565b5090565b5b808211156100ea57600081556001016100ef565b600181811c9082168061011757607f821691505b60208210810361013757634e487b7160e01b600052602260045260246000fd5b50919050565b6109498061014c6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461014157806370a082311461015657806395d89b411461017f578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101c0565b6040516100ce9190610787565b60405180910390f35b6100ea6100e53660046107f8565b610252565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a366004610822565b61026a565b604051601281526020016100ce565b6100ea61013c3660046107f8565b61028e565b61015461014f3660046107f8565b6102b0565b005b6100fe61016436600461085e565b6001600160a01b031660009081526020819052604090205490565b6100c16102be565b6100ea6101953660046107f8565b6102cd565b6100ea6101a83660046107f8565b61034d565b6100fe6101bb366004610880565b61035b565b6060600380546101cf906108b3565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb906108b3565b80156102485780601f1061021d57610100808354040283529160200191610248565b820191906000526020600020905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b600033610260818585610386565b5060019392505050565b6000336102788582856104aa565b610283858585610524565b506001949350505050565b6000336102608185856102a1838361035b565b6102ab91906108ed565b610386565b6102ba82826106c8565b5050565b6060600480546101cf906108b3565b600033816102db828661035b565b9050838110156103405760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102838286868403610386565b600033610260818585610524565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103e85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610337565b6001600160a01b0382166104495760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610337565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104b6848461035b565b9050600019811461051e57818110156105115760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610337565b61051e8484848403610386565b50505050565b6001600160a01b0383166105885760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610337565b6001600160a01b0382166105ea5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610337565b6001600160a01b038316600090815260208190526040902054818110156106625760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610337565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361051e565b6001600160a01b03821661071e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610337565b806002600082825461073091906108ed565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b818110156107b457858101830151858201604001528201610798565b818111156107c6576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146107f357600080fd5b919050565b6000806040838503121561080b57600080fd5b610814836107dc565b946020939093013593505050565b60008060006060848603121561083757600080fd5b610840846107dc565b925061084e602085016107dc565b9150604084013590509250925092565b60006020828403121561087057600080fd5b610879826107dc565b9392505050565b6000806040838503121561089357600080fd5b61089c836107dc565b91506108aa602084016107dc565b90509250929050565b600181811c908216806108c757607f821691505b6020821081036108e757634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561090e57634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212202befb42b7eb71f065c73653187486c60b319381473d4b3e2f05d98b55a62737064736f6c634300080d0033608060405234801561001057600080fd5b5060405161208138038061208183398101604081905261002f91610076565b600680546001600160a01b0319166001600160a01b0392909216919091179055678ac7230489e800006007556102586008556104b06009556078600a819055600b556100a6565b60006020828403121561008857600080fd5b81516001600160a01b038116811461009f57600080fd5b9392505050565b611fcc806100b56000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c8063a5bbe22b116100c3578063df6d798b1161007c578063df6d798b1461039a578063e5a6b10f146103e6578063ed3dccaa14610411578063ed7b0da21461043a578063f034778314610443578063f23a033b1461045657600080fd5b8063a5bbe22b146102c8578063b1610d7e146102d1578063bcacc70a146102da578063bfafb30e146102e3578063c5be26a91461035a578063c6844d061461037a57600080fd5b8063516fa91011610115578063516fa9101461023a5780635a7461011461024d5780635d9032b9146102865780636af97c05146102995780637a37d9ee146102ac5780638b75d75a146102b557600080fd5b8063250551df1461015d5780632af9338e14610172578063369431ef146101905780633bbd2235146101b557806347d0da14146101c85780634b7d9b38146101db575b600080fd5b61017061016b366004611ad3565b610469565b005b61017a6105fd565b6040516101879190611c23565b60405180910390f35b6101a361019e366004611c85565b6108ab565b60405161018796959493929190611c9e565b6101706101c3366004611cf7565b6109f7565b6101706101d6366004611c85565b610ab3565b6101ee6101e9366004611c85565b610cb7565b6040516101879190600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b610170610248366004611d19565b610d48565b61027861025b366004611d86565b600460209081526000928352604080842090915290825290205481565b604051908152602001610187565b610170610294366004611dc2565b610e86565b6101706102a7366004611c85565b611076565b610278600a5481565b6101706102c3366004611c85565b611216565b61027860085481565b61027860095481565b61027860075481565b61032d6102f1366004611c85565b60036020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050154905086565b604080519687526020870195909552938501929092526060840152608083015260a082015260c001610187565b61036d610368366004611c85565b611605565b6040516101879190611dee565b61038d610388366004611c85565b611691565b6040516101879190611e21565b6103d76103a8366004611c85565b600160208190526000918252604090912080549101546001600160a01b03821691600160a01b900460ff169083565b60405161018793929190611e3b565b6006546103f9906001600160a01b031681565b6040516001600160a01b039091168152602001610187565b6103f961041f366004611c85565b6002602052600090815260409020546001600160a01b031681565b610278600b5481565b610278610451366004611c85565b61188a565b610278610464366004611d19565b6118ab565b600083815260036020526040902060058101541580159061048d5750428160050154115b6104d65760405162461bcd60e51b81526020600482015260156024820152744e6f7420696e20612072657665616c20706861736560581b60448201526064015b60405180910390fd5b60008481526004602090815260408083203384528252918290205491518291610503918791879101611e66565b604051602081830303815290604052805190602001201461055b5760405162461bcd60e51b8152602060048201526012602482015271090c2e6d0cae640c8dedc4ee840dac2e8c6d60731b60448201526064016104cd565b600084600281111561056f5761056f611b77565b036105945760018260000160008282546105899190611ea4565b909155506105dd9050565b60018460028111156105a8576105a8611b77565b036105c25760018260010160008282546105899190611ea4565b60018260020160008282546105d79190611ea4565b90915550505b505050600091825250600460209081526040808320338452909152812055565b60055460609060009067ffffffffffffffff81111561061e5761061e611a30565b60405190808252806020026020018201604052801561068757816020015b6106746040805160c0810182526060808252602082018190526000928201839052810182905290608082019081526020016000905290565b81526020019060019003908161063c5790505b50905060005b6005548110156108a557600080600583815481106106ad576106ad611ebc565b906000526020600020015481526020019081526020016000206040518060c00160405290816000820180546106e190611ed2565b80601f016020809104026020016040519081016040528092919081815260200182805461070d90611ed2565b801561075a5780601f1061072f5761010080835404028352916020019161075a565b820191906000526020600020905b81548152906001019060200180831161073d57829003601f168201915b5050505050815260200160018201805461077390611ed2565b80601f016020809104026020016040519081016040528092919081815260200182805461079f90611ed2565b80156107ec5780601f106107c1576101008083540402835291602001916107ec565b820191906000526020600020905b8154815290600101906020018083116107cf57829003601f168201915b5050509183525050600282015460208201526003808301546040830152600483015460609092019160ff169081111561082757610827611b77565b600381111561083857610838611b77565b81526020016004820160019054906101000a900460ff16600281111561086057610860611b77565b600281111561087157610871611b77565b8152505082828151811061088757610887611ebc565b6020026020010181905250808061089d90611f06565b91505061068d565b50919050565b6000602081905290815260409020805481906108c690611ed2565b80601f01602080910402602001604051908101604052809291908181526020018280546108f290611ed2565b801561093f5780601f106109145761010080835404028352916020019161093f565b820191906000526020600020905b81548152906001019060200180831161092257829003601f168201915b50505050509080600101805461095490611ed2565b80601f016020809104026020016040519081016040528092919081815260200182805461098090611ed2565b80156109cd5780601f106109a2576101008083540402835291602001916109cd565b820191906000526020600020905b8154815290600101906020018083116109b057829003601f168201915b50505050600283015460038401546004909401549293909290915060ff8082169161010090041686565b6000828152600360205260409020600481015415801590610a1b5750428160040154115b610a5f5760405162461bcd60e51b81526020600482015260156024820152744e6f7420696e206120636f6d6d697420706861736560581b60448201526064016104cd565b6000838152600460209081526040808320338452909152902054610a9557600381018054906000610a8f83611f06565b91905055505b50600091825260046020908152604080842033855290915290912055565b600081815260016020908152604080832081516060810190925280546001600160a01b03811683529192909190830190600160a01b900460ff166002811115610afe57610afe611b77565b6002811115610b0f57610b0f611b77565b815260200160018201548152505090506008548160400151610b319190611ea4565b4211610b775760405162461bcd60e51b8152602060048201526015602482015274546f6f206561726c7920746f2066696e616c697a6560581b60448201526064016104cd565b6000828152600260205260409020546001600160a01b03168015610bec5760405162461bcd60e51b815260206004820152602660248201527f50726f706f73616c207761732064697370757465642c2063616e6e6f742066696044820152656e616c697a6560d01b60648201526084016104cd565b600083815260208181526040909120600481018054600360ff1982168117835593860151929361ffff1990911617610100836002811115610c2f57610c2f611b77565b0217905550600654835160075460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291169063a9059cbb906044016020604051808303816000875af1158015610c8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb09190611f1f565b5050505050565b610cf06040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b50600090815260036020818152604092839020835160c081018552815481526001820154928101929092526002810154938201939093529082015460608201526004820154608082015260059091015460a082015290565b6000610d558484846118ab565b905060006040518060c0016040528086815260200185815260200184815260200183815260200160006003811115610d8f57610d8f611b77565b8152602001600090526000838152602081815260409091208251805193945084939192610dc192849290910190611983565b506020828101518051610dda9260018501920190611983565b50604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690836003811115610e1957610e19611b77565b021790555060a082015160048201805461ff001916610100836002811115610e4357610e43611b77565b021790555050600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db001929092555050505050565b60008281526020819052604090206002810154421015610edc5760405162461bcd60e51b81526020600482015260116024820152704e6f74207965742061742065787069727960781b60448201526064016104cd565b6000600482015460ff166003811115610ef757610ef7611b77565b14610f445760405162461bcd60e51b815260206004820181905260248201527f5175657374696f6e20616c7265616479206861766520612070726f706f73616c60448201526064016104cd565b6040518060600160405280336001600160a01b03168152602001836002811115610f7057610f70611b77565b81524260209182015260008581526001825260409020825181546001600160a01b039091166001600160a01b031982168117835592840151919283916001600160a81b03191617600160a01b836002811115610fce57610fce611b77565b02179055506040919091015160019182015560048201805460ff1916828002179055506006546007546040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561104c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110709190611f1f565b50505050565b60008181526020819052604090206001600482015460ff16600381111561109f5761109f611b77565b146110ec5760405162461bcd60e51b815260206004820152601b60248201527f5175657374696f6e2063616e6e6f74206265206469737075746564000000000060448201526064016104cd565b600082815260016020819052604090912060085491810154909161110f91611ea4565b42106111535760405162461bcd60e51b8152602060048201526013602482015272746f6f206c61746520746f206469737075746560681b60448201526064016104cd565b6004828101805460ff19166002908117909155600085815260209190915260409081902080546001600160a01b0319163390811790915560065460075492516323b872dd60e01b81529384019190915230602484015260448301919091526001600160a01b0316906323b872dd906064016020604051808303816000875af11580156111e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112079190611f1f565b50611211836118e1565b505050565b6000818152600360208181526040808420815160c081018352815481526001820154938101939093526002810154918301919091529182015460608201526004820154608082015260059091015460a082018190529091036112ce5760405162461bcd60e51b815260206004820152602b60248201527f5468657265206973206e6f206f6e676f696e6720766f746520666f722074686960448201526a399038bab2b9ba34b7b71760a91b60648201526084016104cd565b8060a0015142116113215760405162461bcd60e51b815260206004820152601b60248201527f566f74696e6720706572696f6420686173206e6f7420656e646564000000000060448201526064016104cd565b600082815260016020908152604080832081516060810190925280546001600160a01b03811683529192909190830190600160a01b900460ff16600281111561136c5761136c611b77565b600281111561137d5761137d611b77565b8152600191909101546020918201526000858152600282526040808220548284529181902090860151928601519394506001600160a01b039091169290911080156113cc575083516020850151115b156114c05760048101805461ff00191661010017905560015b836020015160028111156113fb576113fb611b77565b0361149b5760065483516007546001600160a01b039092169163a9059cbb9190611426906002611f41565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611471573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114959190611f1f565b506115f1565b6006546007546001600160a01b039091169063a9059cbb908490611426906002611f41565b836040015184602001511080156114db575083516040850151115b156114f85760048101805461ff00191661020017905560026113e5565b600654835160075460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291169063a9059cbb906044016020604051808303816000875af1158015611550573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115749190611f1f565b5060065460075460405163a9059cbb60e01b81526001600160a01b038581166004830152602482019290925291169063a9059cbb906044016020604051808303816000875af11580156115cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ef9190611f1f565b505b600401805460ff1916600317905550505050565b604080516060810182526000808252602082018190529181019190915260008281526001602090815260409182902082516060810190935280546001600160a01b03811684529091830190600160a01b900460ff16600281111561166b5761166b611b77565b600281111561167c5761167c611b77565b81526020016001820154815250509050919050565b6116c96040805160c0810182526060808252602082018190526000928201839052810182905290608082019081526020016000905290565b60008281526020819052604090819020815160c081019092528054829082906116f190611ed2565b80601f016020809104026020016040519081016040528092919081815260200182805461171d90611ed2565b801561176a5780601f1061173f5761010080835404028352916020019161176a565b820191906000526020600020905b81548152906001019060200180831161174d57829003601f168201915b5050505050815260200160018201805461178390611ed2565b80601f01602080910402602001604051908101604052809291908181526020018280546117af90611ed2565b80156117fc5780601f106117d1576101008083540402835291602001916117fc565b820191906000526020600020905b8154815290600101906020018083116117df57829003601f168201915b5050509183525050600282015460208201526003808301546040830152600483015460609092019160ff169081111561183757611837611b77565b600381111561184857611848611b77565b81526020016004820160019054906101000a900460ff16600281111561187057611870611b77565b600281111561188157611881611b77565b90525092915050565b6005818154811061189a57600080fd5b600091825260209091200154905081565b60008383836040516020016118c293929190611f60565b6040516020818303038152906040528051906020012090509392505050565b60006040518060c0016040528060008152602001600081526020016000815260200160008152602001600a54426119189190611ea4565b8152602001600b54600261192c9190611f41565b6119369042611ea4565b9052600092835260036020818152604094859020835181559083015160018201559382015160028501556060820151908401556080810151600484015560a0015160059092019190915550565b82805461198f90611ed2565b90600052602060002090601f0160209004810192826119b157600085556119f7565b82601f106119ca57805160ff19168380011785556119f7565b828001600101855582156119f7579182015b828111156119f75782518255916020019190600101906119dc565b50611a03929150611a07565b5090565b5b80821115611a035760008155600101611a08565b803560038110611a2b57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611a5757600080fd5b813567ffffffffffffffff80821115611a7257611a72611a30565b604051601f8301601f19908116603f01168101908282118183101715611a9a57611a9a611a30565b81604052838152866020858801011115611ab357600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215611ae857600080fd5b83359250611af860208501611a1c565b9150604084013567ffffffffffffffff811115611b1457600080fd5b611b2086828701611a46565b9150509250925092565b6000815180845260005b81811015611b5057602081850181015186830182015201611b34565b81811115611b62576000602083870101525b50601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b60048110611b9d57611b9d611b77565b9052565b60038110611b9d57611b9d611b77565b6000815160c08452611bc660c0850182611b2a565b905060208301518482036020860152611bdf8282611b2a565b91505060408301516040850152606083015160608501526080830151611c086080860182611b8d565b5060a0830151611c1b60a0860182611ba1565b509392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611c7857603f19888603018452611c66858351611bb1565b94509285019290850190600101611c4a565b5092979650505050505050565b600060208284031215611c9757600080fd5b5035919050565b60c081526000611cb160c0830189611b2a565b8281036020840152611cc38189611b2a565b915050856040830152846060830152611cdf6080830185611b8d565b611cec60a0830184611ba1565b979650505050505050565b60008060408385031215611d0a57600080fd5b50508035926020909101359150565b600080600060608486031215611d2e57600080fd5b833567ffffffffffffffff80821115611d4657600080fd5b611d5287838801611a46565b94506020860135915080821115611d6857600080fd5b50611d7586828701611a46565b925050604084013590509250925092565b60008060408385031215611d9957600080fd5b8235915060208301356001600160a01b0381168114611db757600080fd5b809150509250929050565b60008060408385031215611dd557600080fd5b82359150611de560208401611a1c565b90509250929050565b81516001600160a01b031681526020808301516060830191611e1290840182611ba1565b50604092830151919092015290565b602081526000611e346020830184611bb1565b9392505050565b6001600160a01b038416815260608101611e586020830185611ba1565b826040830152949350505050565b611e708184611ba1565b604060208201526000611e866040830184611b2a565b949350505050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611eb757611eb7611e8e565b500190565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680611ee657607f821691505b6020821081036108a557634e487b7160e01b600052602260045260246000fd5b600060018201611f1857611f18611e8e565b5060010190565b600060208284031215611f3157600080fd5b81518015158114611e3457600080fd5b6000816000190483118215151615611f5b57611f5b611e8e565b500290565b606081526000611f736060830186611b2a565b8281036020840152611f858186611b2a565b91505082604083015294935050505056fea26469706673582212201fb06cb8e6fa9ad8854e55913873459ef119b70c111e329330be311d4c46330364736f6c634300080d0033608060405234801561001057600080fd5b506103ea806100206000396000f3fe6080604052600436106100385760003560e01c806301ffc9a714610044578063bc197c8114610079578063f23a6e61146100be57600080fd5b3661003f57005b600080fd5b34801561005057600080fd5b5061006461005f366004610121565b6100ea565b60405190151581526020015b60405180910390f35b34801561008557600080fd5b506100a56100943660046102a5565b63bc197c8160e01b95945050505050565b6040516001600160e01b03199091168152602001610070565b3480156100ca57600080fd5b506100a56100d936600461034f565b63f23a6e6160e01b95945050505050565b60006001600160e01b03198216630271189760e51b148061011b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006020828403121561013357600080fd5b81356001600160e01b03198116811461014b57600080fd5b9392505050565b80356001600160a01b038116811461016957600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156101ad576101ad61016e565b604052919050565b600082601f8301126101c657600080fd5b8135602067ffffffffffffffff8211156101e2576101e261016e565b8160051b6101f1828201610184565b928352848101820192828101908785111561020b57600080fd5b83870192505b8483101561022a57823582529183019190830190610211565b979650505050505050565b600082601f83011261024657600080fd5b813567ffffffffffffffff8111156102605761026061016e565b610273601f8201601f1916602001610184565b81815284602083860101111561028857600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156102bd57600080fd5b6102c686610152565b94506102d460208701610152565b9350604086013567ffffffffffffffff808211156102f157600080fd5b6102fd89838a016101b5565b9450606088013591508082111561031357600080fd5b61031f89838a016101b5565b9350608088013591508082111561033557600080fd5b5061034288828901610235565b9150509295509295909350565b600080600080600060a0868803121561036757600080fd5b61037086610152565b945061037e60208701610152565b93506040860135925060608601359150608086013567ffffffffffffffff8111156103a857600080fd5b6103428882890161023556fea2646970667358221220ade1cc242e38d235f060e21956cdf622211a20b426034409bd47f0c02814da2764736f6c634300080d0033a2646970667358221220f0fb8eac08609c696bef1deb128cba5ccdef310d19a02607d7bb4df727eb4ea364736f6c634300080d0033",
    "sourceMap": "443:6327:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;687:774;;;:::i;:::-;;321:38:1;;250:64;321:38;;;;;-1:-1:-1;;;;;189:32:22;;;171:51;;159:2;144:18;321:38:1;;;;;;;;3011:3711:19;;;:::i;1819:584:0:-;;;:::i;:::-;;;398:14:22;;391:22;373:41;;361:2;346:18;1819:584:0;233:187:22;1467:1538:19;;;:::i;170:28:1:-;;;;;;;;;;;;1572:26:0;;;;;;;;;687:774:19;721:6;:33;;-1:-1:-1;;;;;;721:33:19;1671:64:0;721:33:19;;;771:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;764:4:19;:17;;-1:-1:-1;;;;;;764:17:19;-1:-1:-1;;;;;764:17:19;;;;;;;;;796:35;;;;;:::i;:::-;-1:-1:-1;;;;;189:32:22;;;171:51;;159:2;144:18;796:35:19;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;791:2:19;:40;;-1:-1:-1;;;;;;791:40:19;-1:-1:-1;;;;;791:40:19;;;;;;;;;;857:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;841:5:19;:36;;-1:-1:-1;;;;;;841:36:19;-1:-1:-1;;;;;841:36:19;;;;;;;;;;901:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;887:3:19;:34;;-1:-1:-1;;;;;;887:34:19;-1:-1:-1;;;;;887:34:19;;;;;;;;;;946:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;931:4:19;:35;;-1:-1:-1;;;;;;931:35:19;-1:-1:-1;;;;;931:35:19;;;;;;;;;;991:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;976:4:19;:35;;-1:-1:-1;;;;;;976:35:19;-1:-1:-1;;;;;976:35:19;;;;;;1029:5;;1021:35;;1029:5;;;-1:-1:-1;;1045:10:19;;-1:-1:-1;1021:35:19;-1:-1:-1;1021:35:19;1045:10;1029:5;-1:-1:-1;1021:35:19;;;;;;;;;;;;;;;;;;;-1:-1:-1;1074:3:19;;1066:33;;-1:-1:-1;;;;;1074:3:19;;;;;;1088:10;;1074:3;1066:33;1074:3;1066:33;1088:10;1074:3;;1066:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;1110:4:19;;:41;;-1:-1:-1;;;1110:41:19;;1128:4;1110:41;;;839:51:22;1135:15:19;906:18:22;;;899:34;-1:-1:-1;;;;;1110:4:19;;;;:9;;812:18:22;;1110:41:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1161:4:19;;1171:5;;1161:33;;-1:-1:-1;;;1161:33:19;;-1:-1:-1;;;;;1171:5:19;;;1161:33;;;839:51:22;1178:15:19;906:18:22;;;899:34;1161:4:19;;;-1:-1:-1;1161:9:19;;-1:-1:-1;812:18:22;;1161:33:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1204:4:19;;1214:3;;1204:31;;-1:-1:-1;;;1204:31:19;;-1:-1:-1;;;;;1214:3:19;;;1204:31;;;839:51:22;1219:15:19;906:18:22;;;899:34;1204:4:19;;;-1:-1:-1;1204:9:19;;-1:-1:-1;812:18:22;;1204:31:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1246:4:19;;1267:2;;1246:44;;-1:-1:-1;;;1246:44:19;;-1:-1:-1;;;;;1267:2:19;;;1246:44;;;839:51:22;-1:-1:-1;;906:18:22;;;899:34;1246:4:19;;;-1:-1:-1;1246:12:19;;-1:-1:-1;812:18:22;;1246:44:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1300:6:19;;1313:5;;1300:19;;-1:-1:-1;;;1300:19:19;;-1:-1:-1;;;;;1313:5:19;;;1300:19;;;171:51:22;1300:6:19;;;:12;;144:18:22;;1300:19:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1329:4:19;;1350:2;;1329:44;;-1:-1:-1;;;1329:44:19;;-1:-1:-1;;;;;1350:2:19;;;1329:44;;;839:51:22;-1:-1:-1;;906:18:22;;;899:34;1329:4:19;;;-1:-1:-1;1329:12:19;;-1:-1:-1;812:18:22;;1329:44:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1383:6:19;;1396:3;;1383:17;;-1:-1:-1;;;1383:17:19;;-1:-1:-1;;;;;1396:3:19;;;1383:17;;;171:51:22;1383:6:19;;;:12;;144:18:22;;1383:17:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1410:4:19;;1431:2;;1410:44;;-1:-1:-1;;;1410:44:19;;-1:-1:-1;;;;;1431:2:19;;;1410:44;;;839:51:22;-1:-1:-1;;906:18:22;;;899:34;1410:4:19;;;-1:-1:-1;1410:12:19;;-1:-1:-1;812:18:22;;1410:44:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;687:774::o;3011:3711::-;3083:2;;:124;;-1:-1:-1;;;3083:124:19;;-1:-1:-1;;;;;3083:2:19;;;;:14;;:124;;3193:4;;3083:124;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3238:2:19;;:126;;-1:-1:-1;;;3238:126:19;;3217:18;;-1:-1:-1;;;;;;3238:2:19;;;;-1:-1:-1;3238:16:19;;:126;;3350:4;;3238:126;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3401:2;;:30;;-1:-1:-1;;;3401:30:19;;;;;2526:25:22;;;3217:147:19;;-1:-1:-1;3374:24:19;;-1:-1:-1;;;;;3401:2:19;;;;:18;;2499::22;;3401:30:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3401:30:19;;;;;;;;;;;;:::i;:::-;3374:57;;3441:66;3450:8;:23;;;3441:66;;;;;;;;;;;;;;;;;:8;:66::i;:::-;3544:6;;:17;;-1:-1:-1;;;3544:17:19;;3556:4;3544:17;;;2526:25:22;-1:-1:-1;;;;;3544:6:19;;;;:11;;2499:18:22;;3544:17:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3596:4:19;;:29;;-1:-1:-1;;;3596:29:19;;3619:4;3596:29;;;171:51:22;3571:22:19;;-1:-1:-1;;;;;;3596:4:19;;;;-1:-1:-1;3596:14:19;;144:18:22;;3596:29:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3635:2;;:40;;-1:-1:-1;;;3635:40:19;;3571:54;;-1:-1:-1;;;;;;3635:2:19;;:16;;:40;;3652:10;;3635:2;;:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3722:4:19;;:29;;-1:-1:-1;;;3722:29:19;;3745:4;3722:29;;;171:51:22;3697:66:19;;-1:-1:-1;3706:14:19;;-1:-1:-1;;;;;;3722:4:19;;;;:14;;144:18:22;;3722:29:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;3754:8;3722:40;:::i;:::-;3697:8;:66::i;:::-;3826:2;;:38;;-1:-1:-1;;;3826:38:19;;;;;2526:25:22;;;3799:24:19;;-1:-1:-1;;;;;3826:2:19;;:26;;2499:18:22;;3826:38:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3799:65;;3874:55;3891:8;:15;;;3883:24;;;;;;;;:::i;:::-;3917:10;3697:8;:66::i;3874:55::-;3996:4;;4011:3;;3996:19;;-1:-1:-1;;;3996:19:19;;-1:-1:-1;;;;;4011:3:19;;;3996:19;;;171:51:22;3968:25:19;;3996:4;;;;;:14;;144:18:22;;3996:19:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4025:6;;4038:3;;4025:17;;-1:-1:-1;;;4025:17:19;;-1:-1:-1;;;;;4038:3:19;;;4025:17;;;171:51:22;3968:47:19;;-1:-1:-1;4025:6:19;;:12;;144:18:22;;4025:17:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4052:2:19;;:30;;-1:-1:-1;;;4052:30:19;;;;;2526:25:22;;;-1:-1:-1;;;;;4052:2:19;;;;-1:-1:-1;4052:18:19;;-1:-1:-1;2499:18:22;;4052:30:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4120:4:19;;4135:3;;4120:19;;-1:-1:-1;;;4120:19:19;;-1:-1:-1;;;;;4135:3:19;;;4120:19;;;171:51:22;4092:59:19;;-1:-1:-1;4101:17:19;;-1:-1:-1;4120:4:19;;;:14;;144:18:22;;4120:19:19;14:214:22;4092:59:19;4216:6;;4228:2;;:19;;;-1:-1:-1;;;4228:19:19;;;;-1:-1:-1;;;;;4216:6:19;;;;:11;;4228:2;;:17;;:19;;;;;;;;;;;;;;:2;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;4250:4;4228:26;:::i;:::-;4216:39;;;;;;;;;;;;;2526:25:22;;2514:2;2499:18;;2380:177;4216:39:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4265:6:19;;:61;;-1:-1:-1;;;4265:61:19;;7922:2:22;4265:61:19;;;7904:21:22;7961:2;7941:18;;;7934:30;8000:34;7980:18;;;7973:62;-1:-1:-1;;;8051:18:22;;;8044:36;-1:-1:-1;;;;;4265:6:19;;;;-1:-1:-1;4265:19:19;;-1:-1:-1;8097:19:22;;4265:61:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4336:2:19;;:31;;-1:-1:-1;;;4336:31:19;;;;;2526:25:22;;;-1:-1:-1;;;;;4336:2:19;;;;-1:-1:-1;4336:19:19;;-1:-1:-1;2499:18:22;;4336:31:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4377:6:19;;:17;;-1:-1:-1;;;4377:17:19;;4389:4;4377:17;;;2526:25:22;-1:-1:-1;;;;;4377:6:19;;;;-1:-1:-1;4377:11:19;;-1:-1:-1;2499:18:22;;4377:17:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4429:6:19;;4442:5;;4429:19;;-1:-1:-1;;;4429:19:19;;-1:-1:-1;;;;;4442:5:19;;;4429:19;;;171:51:22;4429:6:19;;;-1:-1:-1;4429:12:19;;-1:-1:-1;144:18:22;;4429:19:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4458:2:19;;4519:40;;-1:-1:-1;;;;;4458:2:19;;;;-1:-1:-1;4458:13:19;;-1:-1:-1;4485:10:19;;4519:40;;4458:2;;4519:40;;;:::i;:::-;;;;;;;;;;;;;4509:51;;;;;;4458:112;;;;;;;;;;;;;;;8848:25:22;;;8904:2;8889:18;;8882:34;8836:2;8821:18;;8674:248;4458:112:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4580:6:19;;4593:3;;4580:17;;-1:-1:-1;;;4580:17:19;;-1:-1:-1;;;;;4593:3:19;;;4580:17;;;171:51:22;4580:6:19;;;-1:-1:-1;4580:12:19;;-1:-1:-1;144:18:22;;4580:17:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4607:2:19;;4668:37;;-1:-1:-1;;;;;4607:2:19;;;;-1:-1:-1;4607:13:19;;-1:-1:-1;4634:10:19;;4668:37;;4679:9;;4668:37;;;:::i;:::-;;;;;;;;;;;;;4658:48;;;;;;4607:109;;;;;;;;;;;;;;;8848:25:22;;;8904:2;8889:18;;8882:34;8836:2;8821:18;;8674:248;4607:109:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4726:6:19;;4739:4;;4726:18;;-1:-1:-1;;;4726:18:19;;-1:-1:-1;;;;;4739:4:19;;;4726:18;;;171:51:22;4726:6:19;;;-1:-1:-1;4726:12:19;;-1:-1:-1;144:18:22;;4726::19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4754:2:19;;4815:38;;-1:-1:-1;;;;;4754:2:19;;;;-1:-1:-1;4754:13:19;;-1:-1:-1;4781:10:19;;4815:38;;4826:9;;4815:38;;;:::i;:::-;;;;;;;;;;;;;4805:49;;;;;;4754:110;;;;;;;;;;;;;;;8848:25:22;;;8904:2;8889:18;;8882:34;8836:2;8821:18;;8674:248;4754:110:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4874:6:19;;4887:4;;4874:18;;-1:-1:-1;;;4874:18:19;;-1:-1:-1;;;;;4887:4:19;;;4874:18;;;171:51:22;4874:6:19;;;-1:-1:-1;4874:12:19;;-1:-1:-1;144:18:22;;4874::19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4902:2:19;;4963:39;;-1:-1:-1;;;;;4902:2:19;;;;-1:-1:-1;4902:13:19;;-1:-1:-1;4929:10:19;;4963:39;;4902:2;;4963:39;;;:::i;:::-;;;;;;;;;;;;;4953:50;;;;;;4902:111;;;;;;;;;;;;;;;8848:25:22;;;8904:2;8889:18;;8882:34;8836:2;8821:18;;8674:248;4902:111:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5023:6:19;;5036:4;;5023:18;;-1:-1:-1;;;5023:18:19;;-1:-1:-1;;;;;5036:4:19;;;5023:18;;;171:51:22;5023:6:19;;;-1:-1:-1;5023:12:19;;-1:-1:-1;144:18:22;;5023::19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5070:2:19;;5131:38;;-1:-1:-1;;;;;5070:2:19;;;;-1:-1:-1;5070:13:19;;-1:-1:-1;5097:10:19;;5131:38;;5142:9;;5131:38;;;:::i;:::-;;;;;;;;;;;;;5121:49;;;;;;5070:110;;;;;;;;;;;;;;;8848:25:22;;;8904:2;8889:18;;8882:34;8836:2;8821:18;;8674:248;5070:110:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5210:2:19;;:34;;-1:-1:-1;;;5210:34:19;;;;;2526:25:22;;;5191:16:19;;-1:-1:-1;;;;;;5210:2:19;;;;-1:-1:-1;5210:22:19;;2499:18:22;;5210:34:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5191:53;;5254:27;5263:4;:14;;;5279:1;5254:8;:27::i;:::-;5366:6;;5379:5;;5366:19;;-1:-1:-1;;;5366:19:19;;-1:-1:-1;;;;;5379:5:19;;;5366:19;;;171:51:22;5366:6:19;;;:12;;144:18:22;;5366:19:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5395:6:19;;:41;;-1:-1:-1;;;5395:41:19;;11501:2:22;5395:41:19;;;11483:21:22;11540:2;11520:18;;;11513:30;-1:-1:-1;;;11559:18:22;;;11552:48;-1:-1:-1;;;;;5395:6:19;;;;-1:-1:-1;5395:19:19;;-1:-1:-1;11617:18:22;;5395:41:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5446:2:19;;:61;;-1:-1:-1;;;5446:61:19;;-1:-1:-1;;;;;5446:2:19;;;;-1:-1:-1;5446:13:19;;-1:-1:-1;5446:61:19;;5460:10;;5446:2;;:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5518:6:19;;5531:5;;5518:19;;-1:-1:-1;;;5518:19:19;;-1:-1:-1;;;;;5531:5:19;;;5518:19;;;171:51:22;5518:6:19;;;-1:-1:-1;5518:12:19;;-1:-1:-1;144:18:22;;5518:19:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5547:2:19;;:55;;-1:-1:-1;;;5547:55:19;;-1:-1:-1;;;;;5547:2:19;;;;-1:-1:-1;5547:13:19;;-1:-1:-1;5547:55:19;;5561:10;;5547:2;;:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5612:6:19;;5625:3;;5612:17;;-1:-1:-1;;;5612:17:19;;-1:-1:-1;;;;;5625:3:19;;;5612:17;;;171:51:22;5612:6:19;;;-1:-1:-1;5612:12:19;;-1:-1:-1;144:18:22;;5612:17:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5639:2:19;;:52;;-1:-1:-1;;;5639:52:19;;-1:-1:-1;;;;;5639:2:19;;;;-1:-1:-1;5639:13:19;;-1:-1:-1;5639:52:19;;5653:10;;5665:9;;5639:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5737:6:19;;5750:3;;5737:17;;-1:-1:-1;;;5737:17:19;;-1:-1:-1;;;;;5750:3:19;;;5737:17;;;171:51:22;5737:6:19;;;-1:-1:-1;5737:12:19;;-1:-1:-1;144:18:22;;5737:17:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5764:6:19;;:41;;-1:-1:-1;;;5764:41:19;;11501:2:22;5764:41:19;;;11483:21:22;11540:2;11520:18;;;11513:30;-1:-1:-1;;;11559:18:22;;;11552:48;-1:-1:-1;;;;;5764:6:19;;;;-1:-1:-1;5764:19:19;;-1:-1:-1;11617:18:22;;5764:41:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5815:2:19;;:52;;-1:-1:-1;;;5815:52:19;;-1:-1:-1;;;;;5815:2:19;;;;-1:-1:-1;5815:13:19;;-1:-1:-1;5815:52:19;;5829:10;;5841:9;;5815:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5878:6:19;;5891:4;;5878:18;;-1:-1:-1;;;5878:18:19;;-1:-1:-1;;;;;5891:4:19;;;5878:18;;;171:51:22;5878:6:19;;;-1:-1:-1;5878:12:19;;-1:-1:-1;144:18:22;;5878::19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5906:2:19;;:53;;-1:-1:-1;;;5906:53:19;;-1:-1:-1;;;;;5906:2:19;;;;-1:-1:-1;5906:13:19;;-1:-1:-1;5906:53:19;;5920:10;;5932:9;;5906:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5969:6:19;;5982:4;;5969:18;;-1:-1:-1;;;5969:18:19;;-1:-1:-1;;;;;5982:4:19;;;5969:18;;;171:51:22;5969:6:19;;;-1:-1:-1;5969:12:19;;-1:-1:-1;144:18:22;;5969::19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5997:2:19;;:53;;-1:-1:-1;;;5997:53:19;;-1:-1:-1;;;;;5997:2:19;;;;-1:-1:-1;5997:13:19;;-1:-1:-1;5997:53:19;;6011:10;;6023:9;;5997:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6068:2:19;;:34;;-1:-1:-1;;;6068:34:19;;;;;2526:25:22;;;-1:-1:-1;;;;;6068:2:19;;;;-1:-1:-1;6068:22:19;;-1:-1:-1;2499:18:22;;6068:34:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6061:41;;6112:26;6121:4;:13;;;6136:1;6112:8;:26::i;:::-;6148:25;6157:4;:12;;;6171:1;6148:8;:25::i;:::-;6209:6;;6221:2;;:18;;;-1:-1:-1;;;6221:18:19;;;;-1:-1:-1;;;;;6209:6:19;;;;:11;;6221:2;;:16;;:18;;;;;;;;;;;;;;:2;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:25;;6242:4;6221:25;:::i;:::-;6209:38;;;;;;;;;;;;;2526:25:22;;2514:2;2499:18;;2380:177;6209:38:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6257:2:19;;:27;;-1:-1:-1;;;6257:27:19;;;;;2526:25:22;;;-1:-1:-1;;;;;6257:2:19;;;;-1:-1:-1;6257:15:19;;-1:-1:-1;2499:18:22;;6257:27:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6305:2:19;;:30;;-1:-1:-1;;;6305:30:19;;;;;2526:25:22;;;-1:-1:-1;;;;;6305:2:19;;;;-1:-1:-1;6305:18:19;;-1:-1:-1;2499:18:22;;6305:30:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6305:30:19;;;;;;;;;;;;:::i;:::-;6294:41;;6345:59;6362:8;:14;;;6354:23;;;;;;;;:::i;:::-;6387:15;3697:8;:66::i;6345:59::-;6414:54;6431:8;:15;;;6423:24;;;;;;;;:::i;:::-;6457:9;3697:8;:66::i;6414:54::-;6506:4;;6521:3;;6506:19;;-1:-1:-1;;;6506:19:19;;-1:-1:-1;;;;;6521:3:19;;;6506:19;;;171:51:22;6479:24:19;;6506:4;;;;;:14;;144:18:22;;6506:19:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6479:46;-1:-1:-1;6535:56:19;6479:46;6562:28;:17;6582:8;6562:28;:::i;6535:56::-;6626:4;;:29;;-1:-1:-1;;;6626:29:19;;6649:4;6626:29;;;171:51:22;6602:21:19;;-1:-1:-1;;;;;6626:4:19;;:14;;144:18:22;;6626:29:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6602:53;-1:-1:-1;6665:50:19;6602:53;6689:25;6706:8;6689:14;:25;:::i;6665:50::-;3049:3673;;;;;;;;3011:3711::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;839:51:22;;;-1:-1:-1;;;906:18:22;;;899:34;2196:43:0;;;;;;;;;812:18:22;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;1467:1538:19:-;1541:2;;:124;;-1:-1:-1;;;1541:124:19;;-1:-1:-1;;;;;1541:2:19;;;;:14;;:124;;1651:4;;1541:124;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1696:2:19;;:126;;-1:-1:-1;;;1696:126:19;;1675:18;;-1:-1:-1;;;;;;1696:2:19;;;;-1:-1:-1;1696:16:19;;:126;;1808:4;;1696:126;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1859:2;;:30;;-1:-1:-1;;;1859:30:19;;;;;2526:25:22;;;1675:147:19;;-1:-1:-1;1832:24:19;;-1:-1:-1;;;;;1859:2:19;;;;:18;;2499::22;;1859:30:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1859:30:19;;;;;;;;;;;;:::i;:::-;1832:57;;1899:66;1908:8;:23;;;1899:66;;;;;;;;;;;;;;;;;:8;:66::i;:::-;2002:6;;:17;;-1:-1:-1;;;2002:17:19;;2014:4;2002:17;;;2526:25:22;-1:-1:-1;;;;;2002:6:19;;;;:11;;2499:18:22;;2002:17:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2054:4:19;;:29;;-1:-1:-1;;;2054:29:19;;2077:4;2054:29;;;171:51:22;2029:22:19;;-1:-1:-1;;;;;;2054:4:19;;;;-1:-1:-1;2054:14:19;;144:18:22;;2054:29:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2093:2;;:40;;-1:-1:-1;;;2093:40:19;;2029:54;;-1:-1:-1;;;;;;2093:2:19;;:16;;:40;;2110:10;;2093:2;;:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2180:4:19;;:29;;-1:-1:-1;;;2180:29:19;;2203:4;2180:29;;;171:51:22;2155:66:19;;-1:-1:-1;2164:14:19;;-1:-1:-1;;;;;;2180:4:19;;;;:14;;144:18:22;;2180:29:19;14:214:22;2155:66:19;2284:2;;:38;;-1:-1:-1;;;2284:38:19;;;;;2526:25:22;;;2257:24:19;;-1:-1:-1;;;;;2284:2:19;;:26;;2499:18:22;;2284:38:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2257:65;;2332:55;2349:8;:15;;;2341:24;;;;;;;;:::i;2332:55::-;2427:6;;2439:2;;:19;;;-1:-1:-1;;;2439:19:19;;;;-1:-1:-1;;;;;2427:6:19;;;;:11;;2439:2;;:17;;:19;;;;;;;;;;;;;;:2;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;2461:4;2439:26;:::i;:::-;2427:39;;;;;;;;;;;;;2526:25:22;;2514:2;2499:18;;2380:177;2427:39:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2476:2:19;;:31;;-1:-1:-1;;;2476:31:19;;;;;2526:25:22;;;-1:-1:-1;;;;;2476:2:19;;;;-1:-1:-1;2476:19:19;;-1:-1:-1;2499:18:22;;2476:31:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2528:2:19;;:30;;-1:-1:-1;;;2528:30:19;;;;;2526:25:22;;;-1:-1:-1;;;;;2528:2:19;;;;-1:-1:-1;2528:18:19;;-1:-1:-1;2499:18:22;;2528:30:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2528:30:19;;;;;;;;;;;;:::i;:::-;2517:41;;2568:59;2585:8;:14;;;2577:23;;;;;;;;:::i;2568:59::-;2637:60;2654:8;:15;;;2646:24;;;;;;;;:::i;:::-;2680:8;:15;;;2672:24;;;;;;;;:::i;2637:60::-;2738:2;;:20;;;-1:-1:-1;;;2738:20:19;;;;2708:27;;-1:-1:-1;;;;;2738:2:19;;:18;;:20;;;;;2708:27;;2738:20;;;;;;;:2;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2738:20:19;;;;;;;;;;;;:::i;:::-;2779:2;;:30;;-1:-1:-1;;;2779:30:19;;;;;2526:25:22;;;2708:50:19;;-1:-1:-1;;;;;;2779:2:19;;:18;;2499::22;;2779:30:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2779:30:19;;;;;;;;;;;;:::i;:::-;2768:41;;2820:64;2837:9;2847:1;2837:12;;;;;;;;:::i;:::-;;;;;;;:19;;;2829:28;;;;;;;;:::i;:::-;2867:8;:15;;;2859:24;;;;;;;;:::i;2820:64::-;2919:4;;:29;;-1:-1:-1;;;2919:29:19;;2942:4;2919:29;;;171:51:22;2895:21:19;;-1:-1:-1;;;;;2919:4:19;;:14;;144:18:22;;2919:29:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2895:53;;2959:39;2968:13;2983:14;2959:8;:39::i;:::-;1507:1498;;;;;;1467:1538::o;14688:344:0:-;14824:1;14807:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14797:30;;;;;;14790:1;14773:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14763:30;;;;;;:64;14759:267;;14848:43;;;;;16838:2:22;16820:21;;;16877:2;16857:18;;;16850:30;16916:34;16911:2;16896:18;;16889:62;-1:-1:-1;;;16982:2:22;16967:18;;16960:34;17026:3;17011:19;;16636:400;14848:43:0;;;;;;;;14910:33;14941:1;14910:33;;;;;;:::i;:::-;;;;;;;;14962;14993:1;14962:33;;;;;;:::i;:::-;;;;;;;;15009:6;:4;:6::i;:::-;14688:344;;:::o;5202:262::-;5264:1;5259;:6;5255:203;;5286:41;;;;;18724:2:22;18706:21;;;18763:2;18743:18;;;18736:30;18802:34;18797:2;18782:18;;18775:62;-1:-1:-1;;;18868:2:22;18853:18;;18846:32;18910:3;18895:19;;18522:398;5286:41:0;;;;;;;;5346:31;5375:1;5346:31;;;;;;:::i;:::-;;;;;;;;5396;5425:1;5396:31;;;;;;:::i;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;19833:51:22;;;-1:-1:-1;;;19900:18:22;;;19893:34;;;;2705:4:0;19943:18:22;;;19936:34;2482:11:0;;1671:64;2579:43;;19806:18:22;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;1223:277:22:-;1290:6;1343:2;1331:9;1322:7;1318:23;1314:32;1311:52;;;1359:1;1356;1349:12;1311:52;1391:9;1385:16;1444:5;1437:13;1430:21;1423:5;1420:32;1410:60;;1466:1;1463;1456:12;1410:60;1489:5;1223:277;-1:-1:-1;;;1223:277:22:o;1505:681::-;1847:2;1829:21;;;1886:2;1866:18;;;1859:30;1926:31;1920:3;1905:19;;1898:60;1996:3;1989:4;1974:20;;1967:33;;;2037:2;2016:19;;;2009:31;-1:-1:-1;;;2071:3:22;2056:19;;2049:52;-1:-1:-1;2153:18:22;;2146:34;;;;2133:3;2118:19;;1505:681::o;2191:184::-;2261:6;2314:2;2302:9;2293:7;2289:23;2285:32;2282:52;;;2330:1;2327;2320:12;2282:52;-1:-1:-1;2353:16:22;;2191:184;-1:-1:-1;2191:184:22:o;2562:127::-;2623:10;2618:3;2614:20;2611:1;2604:31;2654:4;2651:1;2644:15;2678:4;2675:1;2668:15;2694:253;2766:2;2760:9;2808:4;2796:17;;2843:18;2828:34;;2864:22;;;2825:62;2822:88;;;2890:18;;:::i;:::-;2926:2;2919:22;2694:253;:::o;2952:275::-;3023:2;3017:9;3088:2;3069:13;;-1:-1:-1;;3065:27:22;3053:40;;3123:18;3108:34;;3144:22;;;3105:62;3102:88;;;3170:18;;:::i;:::-;3206:2;3199:22;2952:275;;-1:-1:-1;2952:275:22:o;3232:258::-;3304:1;3314:113;3328:6;3325:1;3322:13;3314:113;;;3404:11;;;3398:18;3385:11;;;3378:39;3350:2;3343:10;3314:113;;;3445:6;3442:1;3439:13;3436:48;;;3480:1;3471:6;3466:3;3462:16;3455:27;3436:48;;3232:258;;;:::o;3495:497::-;3549:5;3602:3;3595:4;3587:6;3583:17;3579:27;3569:55;;3620:1;3617;3610:12;3569:55;3649:6;3643:13;3675:18;3671:2;3668:26;3665:52;;;3697:18;;:::i;:::-;3741:55;3784:2;3765:13;;-1:-1:-1;;3761:27:22;3790:4;3757:38;3741:55;:::i;:::-;3821:2;3812:7;3805:19;3867:3;3860:4;3855:2;3847:6;3843:15;3839:26;3836:35;3833:55;;;3884:1;3881;3874:12;3833:55;3897:64;3958:2;3951:4;3942:7;3938:18;3931:4;3923:6;3919:17;3897:64;:::i;:::-;3979:7;3495:497;-1:-1:-1;;;;3495:497:22:o;3997:150::-;4079:13;;4121:1;4111:12;;4101:40;;4137:1;4134;4127:12;4152:151;4235:13;;4277:1;4267:12;;4257:40;;4293:1;4290;4283:12;4308:860;4374:5;4422:4;4410:9;4405:3;4401:19;4397:30;4394:50;;;4440:1;4437;4430:12;4394:50;4462:22;;:::i;:::-;4453:31;;4513:9;4507:16;4542:18;4583:2;4575:6;4572:14;4569:34;;;4599:1;4596;4589:12;4569:34;4626:57;4679:3;4670:6;4659:9;4655:22;4626:57;:::i;:::-;4619:5;4612:72;4730:2;4719:9;4715:18;4709:25;4693:41;;4759:2;4749:8;4746:16;4743:36;;;4775:1;4772;4765:12;4743:36;;4811:59;4866:3;4855:8;4844:9;4840:24;4811:59;:::i;:::-;4806:2;4799:5;4795:14;4788:83;;4924:2;4913:9;4909:18;4903:25;4898:2;4891:5;4887:14;4880:49;4982:2;4971:9;4967:18;4961:25;4956:2;4949:5;4945:14;4938:49;5020:53;5068:3;5057:9;5053:19;5020:53;:::i;:::-;5014:3;5007:5;5003:15;4996:78;5107:54;5156:3;5145:9;5141:19;5107:54;:::i;:::-;5101:3;5094:5;5090:15;5083:79;4308:860;;;;:::o;5173:363::-;5270:6;5323:2;5311:9;5302:7;5298:23;5294:32;5291:52;;;5339:1;5336;5329:12;5291:52;5372:9;5366:16;5405:18;5397:6;5394:30;5391:50;;;5437:1;5434;5427:12;5391:50;5460:70;5522:7;5513:6;5502:9;5498:22;5460:70;:::i;5923:127::-;5984:10;5979:3;5975:20;5972:1;5965:31;6015:4;6012:1;6005:15;6039:4;6036:1;6029:15;6055:234;6133:1;6126:5;6123:12;6113:143;;6178:10;6173:3;6169:20;6166:1;6159:31;6213:4;6210:1;6203:15;6241:4;6238:1;6231:15;6113:143;6265:18;;6055:234::o;6294:274::-;6478:25;;;6466:2;6451:18;;6512:50;6558:2;6543:18;;6535:6;6512:50;:::i;6573:127::-;6634:10;6629:3;6625:20;6622:1;6615:31;6665:4;6662:1;6655:15;6689:4;6686:1;6679:15;6705:128;6745:3;6776:1;6772:6;6769:1;6766:13;6763:39;;;6782:18;;:::i;:::-;-1:-1:-1;6818:9:22;;6705:128::o;6838:696::-;6935:6;6988:2;6976:9;6967:7;6963:23;6959:32;6956:52;;;7004:1;7001;6994:12;6956:52;7037:2;7031:9;7079:2;7071:6;7067:15;7148:6;7136:10;7133:22;7112:18;7100:10;7097:34;7094:62;7091:88;;;7159:18;;:::i;:::-;7195:2;7188:22;7232:16;;-1:-1:-1;;;;;7277:31:22;;7267:42;;7257:70;;7323:1;7320;7313:12;7257:70;7336:21;;7390:53;7439:2;7424:18;;7390:53;:::i;:::-;7385:2;7377:6;7373:15;7366:78;7498:2;7487:9;7483:18;7477:25;7472:2;7464:6;7460:15;7453:50;7522:6;7512:16;;;6838:696;;;;:::o;8295:374::-;8517:41;8548:9;8540:6;8517:41;:::i;:::-;8594:2;8589;8578:9;8574:18;8567:30;8498:4;8614:49;8659:2;8648:9;8644:18;8204:2;8192:15;;-1:-1:-1;;;8232:4:22;8223:14;;8216:40;8281:2;8272:12;;8127:163;9088:369;9310:41;9341:9;9333:6;9310:41;:::i;:::-;9387:2;9382;9371:9;9367:18;9360:30;9291:4;9407:44;9447:2;9436:9;9432:18;8999:2;8987:15;;-1:-1:-1;;;9027:4:22;9018:14;;9011:38;9074:2;9065:12;;8927:156;9629:374;9851:41;9882:9;9874:6;9851:41;:::i;:::-;9928:2;9923;9912:9;9908:18;9901:30;9832:4;9948:49;9993:2;9982:9;9978:18;9539:2;9527:15;;-1:-1:-1;;;9567:4:22;9558:14;;9551:39;9615:2;9606:12;;9462:162;10175:374;10397:41;10428:9;10420:6;10397:41;:::i;:::-;10474:2;10469;10458:9;10454:18;10447:30;10378:4;10494:49;10539:2;10528:9;10524:18;10085:2;10073:15;;-1:-1:-1;;;10113:4:22;10104:14;;10097:39;10161:2;10152:12;;10008:162;10554:741;10647:6;10700:3;10688:9;10679:7;10675:23;10671:33;10668:53;;;10717:1;10714;10707:12;10668:53;10750:2;10744:9;10792:3;10784:6;10780:16;10862:6;10850:10;10847:22;10826:18;10814:10;10811:34;10808:62;10805:88;;;10873:18;;:::i;:::-;10913:10;10909:2;10902:22;;10954:9;10948:16;10940:6;10933:32;11019:2;11008:9;11004:18;10998:25;10993:2;10985:6;10981:15;10974:50;11078:2;11067:9;11063:18;11057:25;11052:2;11044:6;11040:15;11033:50;11137:2;11126:9;11122:18;11116:25;11111:2;11103:6;11099:15;11092:50;11197:3;11186:9;11182:19;11176:26;11170:3;11162:6;11158:16;11151:52;11258:3;11247:9;11243:19;11237:26;11231:3;11223:6;11219:16;11212:52;11283:6;11273:16;;;10554:741;;;;:::o;11646:514::-;11914:6;11903:9;11896:25;11930:50;11976:2;11965:9;11961:18;11953:6;11930:50;:::i;:::-;12016:2;12011;11996:18;;11989:30;;;12055:2;12035:18;;;12028:30;-1:-1:-1;;;12089:3:22;12074:19;;12067:51;12150:3;12135:19;;11646:514;-1:-1:-1;;11646:514:22:o;12165:445::-;12433:6;12422:9;12415:25;12449:50;12495:2;12484:9;12480:18;12472:6;12449:50;:::i;:::-;12535:2;12530;12519:9;12515:18;12508:30;12396:4;12555:49;12600:2;12589:9;12585:18;8204:2;8192:15;;-1:-1:-1;;;8232:4:22;8223:14;;8216:40;8281:2;8272:12;;8127:163;12615:440;12883:6;12872:9;12865:25;12899:50;12945:2;12934:9;12930:18;12922:6;12899:50;:::i;:::-;12985:2;12980;12969:9;12965:18;12958:30;12846:4;13005:44;13045:2;13034:9;13030:18;8999:2;8987:15;;-1:-1:-1;;;9027:4:22;9018:14;;9011:38;9074:2;9065:12;;8927:156;13060:445;13328:6;13317:9;13310:25;13344:50;13390:2;13379:9;13375:18;13367:6;13344:50;:::i;:::-;13430:2;13425;13414:9;13410:18;13403:30;13291:4;13450:49;13495:2;13484:9;13480:18;9539:2;9527:15;;-1:-1:-1;;;9567:4:22;9558:14;;9551:39;9615:2;9606:12;;9462:162;13510:445;13778:6;13767:9;13760:25;13794:50;13840:2;13829:9;13825:18;13817:6;13794:50;:::i;:::-;13880:2;13875;13864:9;13860:18;13853:30;13741:4;13900:49;13945:2;13934:9;13930:18;10085:2;10073:15;;-1:-1:-1;;;10113:4:22;10104:14;;10097:39;10161:2;10152:12;;10008:162;13960:125;14000:4;14028:1;14025;14022:8;14019:34;;;14033:18;;:::i;:::-;-1:-1:-1;14070:9:22;;13960:125::o;14369:371::-;-1:-1:-1;;;;;;14554:33:22;;14542:46;;14611:13;;14524:3;;14633:61;14611:13;14683:1;14674:11;;14667:4;14655:17;;14633:61;:::i;:::-;14714:16;;;;14732:1;14710:24;;14369:371;-1:-1:-1;;;14369:371:22:o;14745:274::-;14874:3;14912:6;14906:13;14928:53;14974:6;14969:3;14962:4;14954:6;14950:17;14928:53;:::i;:::-;14997:16;;;;;14745:274;-1:-1:-1;;14745:274:22:o;15024:1194::-;15146:6;15177:2;15220;15208:9;15199:7;15195:23;15191:32;15188:52;;;15236:1;15233;15226:12;15188:52;15269:9;15263:16;15298:18;15339:2;15331:6;15328:14;15325:34;;;15355:1;15352;15345:12;15325:34;15393:6;15382:9;15378:22;15368:32;;15438:7;15431:4;15427:2;15423:13;15419:27;15409:55;;15460:1;15457;15450:12;15409:55;15489:2;15483:9;15511:2;15507;15504:10;15501:36;;;15517:18;;:::i;:::-;15563:2;15560:1;15556:10;15586:28;15610:2;15606;15602:11;15586:28;:::i;:::-;15648:15;;;15718:11;;;15714:20;;;15679:12;;;;15746:19;;;15743:39;;;15778:1;15775;15768:12;15743:39;15810:2;15806;15802:11;15791:22;;15822:366;15838:6;15833:3;15830:15;15822:366;;;15917:3;15911:10;15953:2;15940:11;15937:19;15934:109;;;15997:1;16026:2;16022;16015:14;15934:109;16068:77;16137:7;16132:2;16118:11;16114:2;16110:20;16106:29;16068:77;:::i;:::-;16056:90;;-1:-1:-1;15855:12:22;;;;16166;;;;15822:366;;;16207:5;15024:1194;-1:-1:-1;;;;;;;;;15024:1194:22:o;16223:127::-;16284:10;16279:3;16275:20;16272:1;16265:31;16315:4;16312:1;16305:15;16339:4;16336:1;16329:15;17205:258;17247:3;17285:5;17279:12;17312:6;17307:3;17300:19;17328:63;17384:6;17377:4;17372:3;17368:14;17361:4;17354:5;17350:16;17328:63;:::i;:::-;17445:2;17424:15;-1:-1:-1;;17420:29:22;17411:39;;;;17452:4;17407:50;;17205:258;-1:-1:-1;;17205:258:22:o;17468:440::-;17718:2;17707:9;17700:21;17681:4;17744:49;17789:2;17778:9;17774:18;17118:2;17106:15;;-1:-1:-1;;;17146:4:22;17137:14;;17130:36;17191:2;17182:12;;17041:159;17744:49;17841:9;17833:6;17829:22;17824:2;17813:9;17809:18;17802:50;17869:33;17895:6;17887;17869:33;:::i;18077:440::-;18327:2;18316:9;18309:21;18290:4;18353:49;18398:2;18387:9;18383:18;17990:2;17978:15;;-1:-1:-1;;;18018:4:22;18009:14;;18002:36;18063:2;18054:12;;17913:159;18925:348;19155:2;19144:9;19137:21;19118:4;19175:49;19220:2;19209:9;19205:18;17118:2;17106:15;;-1:-1:-1;;;17146:4:22;17137:14;;17130:36;17191:2;17182:12;;17041:159;19175:49;19167:57;;19260:6;19255:2;19244:9;19240:18;19233:34;18925:348;;;;:::o;19278:::-;19508:2;19497:9;19490:21;19471:4;19528:49;19573:2;19562:9;19558:18;17990:2;17978:15;;-1:-1:-1;;;18018:4:22;18009:14;;18002:36;18063:2;18054:12;;17913:159",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/Users/alexander/dev/opti/contracts/src/test/OptimisticOracleTest.sol",
    "exportedSymbols": {
      "CheatCodes": [
        25882
      ],
      "DSTest": [
        1786
      ],
      "ERC1155Holder": [
        23292
      ],
      "OPTI": [
        25910
      ],
      "OptimisticOracle": [
        24868
      ],
      "OptimisticOracleTest": [
        25826
      ],
      "Proposal": [
        24887
      ],
      "Question": [
        24915
      ],
      "Result": [
        24874
      ],
      "Script": [
        2049
      ],
      "Stage": [
        24879
      ],
      "StdStorage": [
        5077
      ],
      "Test": [
        4979
      ],
      "TokenReceiver": [
        25833
      ],
      "Vm": [
        7072
      ],
      "Vote": [
        24900
      ],
      "console": [
        15136
      ],
      "console2": [
        23200
      ],
      "stdError": [
        5049
      ],
      "stdJson": [
        2409
      ],
      "stdMath": [
        6318
      ],
      "stdStorage": [
        6179
      ]
    },
    "id": 25834,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 24972,
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:19"
      },
      {
        "absolutePath": "/Users/alexander/dev/opti/contracts/lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "id": 24973,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25834,
        "sourceUnit": 6319,
        "src": "64:28:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/opti/contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        "file": "openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        "id": 24975,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25834,
        "sourceUnit": 23293,
        "src": "93:101:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24974,
              "name": "ERC1155Holder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23292,
              "src": "101:13:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/opti/contracts/src/test/helpers/CheatCodes.sol",
        "file": "./helpers/CheatCodes.sol",
        "id": 24977,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25834,
        "sourceUnit": 25883,
        "src": "195:52:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24976,
              "name": "CheatCodes",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25882,
              "src": "203:10:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/opti/contracts/src/test/helpers/MockERC20.sol",
        "file": "./helpers/MockERC20.sol",
        "id": 24979,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25834,
        "sourceUnit": 25911,
        "src": "248:45:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24978,
              "name": "OPTI",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25910,
              "src": "256:4:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/opti/contracts/src/OptimisticOracle.sol",
        "file": "../OptimisticOracle.sol",
        "id": 24981,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25834,
        "sourceUnit": 24869,
        "src": "294:57:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24980,
              "name": "OptimisticOracle",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24868,
              "src": "302:16:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/opti/contracts/src/datastructures/structures.sol",
        "file": "../datastructures/structures.sol",
        "id": 24987,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25834,
        "sourceUnit": 24916,
        "src": "352:89:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24982,
              "name": "Result",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24874,
              "src": "360:6:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 24983,
              "name": "Stage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24879,
              "src": "368:5:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 24984,
              "name": "Proposal",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24887,
              "src": "375:8:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 24985,
              "name": "Question",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24915,
              "src": "385:8:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 24986,
              "name": "Vote",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24900,
              "src": "395:4:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24988,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4979,
              "src": "476:4:19"
            },
            "id": 24989,
            "nodeType": "InheritanceSpecifier",
            "src": "476:4:19"
          }
        ],
        "canonicalName": "OptimisticOracleTest",
        "contractDependencies": [
          24868,
          25833,
          25910
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 25826,
        "linearizedBaseContracts": [
          25826,
          4979,
          2049,
          1786
        ],
        "name": "OptimisticOracleTest",
        "nameLocation": "452:20:19",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 24992,
            "mutability": "mutable",
            "name": "oo",
            "nameLocation": "513:2:19",
            "nodeType": "VariableDeclaration",
            "scope": 25826,
            "src": "487:28:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
              "typeString": "contract OptimisticOracle"
            },
            "typeName": {
              "id": 24991,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24990,
                "name": "OptimisticOracle",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24868,
                "src": "487:16:19"
              },
              "referencedDeclaration": 24868,
              "src": "487:16:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                "typeString": "contract OptimisticOracle"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24995,
            "mutability": "mutable",
            "name": "cheats",
            "nameLocation": "541:6:19",
            "nodeType": "VariableDeclaration",
            "scope": 25826,
            "src": "521:26:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CheatCodes_$25882",
              "typeString": "contract CheatCodes"
            },
            "typeName": {
              "id": 24994,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24993,
                "name": "CheatCodes",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25882,
                "src": "521:10:19"
              },
              "referencedDeclaration": 25882,
              "src": "521:10:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CheatCodes_$25882",
                "typeString": "contract CheatCodes"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24998,
            "mutability": "mutable",
            "name": "opti",
            "nameLocation": "567:4:19",
            "nodeType": "VariableDeclaration",
            "scope": 25826,
            "src": "553:18:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OPTI_$25910",
              "typeString": "contract OPTI"
            },
            "typeName": {
              "id": 24997,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24996,
                "name": "OPTI",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25910,
                "src": "553:4:19"
              },
              "referencedDeclaration": 25910,
              "src": "553:4:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OPTI_$25910",
                "typeString": "contract OPTI"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 25000,
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "595:5:19",
            "nodeType": "VariableDeclaration",
            "scope": 25826,
            "src": "578:22:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 24999,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "578:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 25002,
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "623:3:19",
            "nodeType": "VariableDeclaration",
            "scope": 25826,
            "src": "606:20:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 25001,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "606:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 25004,
            "mutability": "mutable",
            "name": "john",
            "nameLocation": "649:4:19",
            "nodeType": "VariableDeclaration",
            "scope": 25826,
            "src": "632:21:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 25003,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "632:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 25006,
            "mutability": "mutable",
            "name": "kyle",
            "nameLocation": "676:4:19",
            "nodeType": "VariableDeclaration",
            "scope": 25826,
            "src": "659:21:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 25005,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "659:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 25167,
              "nodeType": "Block",
              "src": "711:750:19",
              "statements": [
                {
                  "expression": {
                    "id": 25013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25009,
                      "name": "cheats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24995,
                      "src": "721:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CheatCodes_$25882",
                        "typeString": "contract CheatCodes"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25011,
                          "name": "HEVM_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "741:12:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 25010,
                        "name": "CheatCodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25882,
                        "src": "730:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CheatCodes_$25882_$",
                          "typeString": "type(contract CheatCodes)"
                        }
                      },
                      "id": 25012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "730:24:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CheatCodes_$25882",
                        "typeString": "contract CheatCodes"
                      }
                    },
                    "src": "721:33:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CheatCodes_$25882",
                      "typeString": "contract CheatCodes"
                    }
                  },
                  "id": 25014,
                  "nodeType": "ExpressionStatement",
                  "src": "721:33:19"
                },
                {
                  "expression": {
                    "id": 25020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25015,
                      "name": "opti",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24998,
                      "src": "764:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OPTI_$25910",
                        "typeString": "contract OPTI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 25018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "771:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_OPTI_$25910_$",
                          "typeString": "function () returns (contract OPTI)"
                        },
                        "typeName": {
                          "id": 25017,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 25016,
                            "name": "OPTI",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 25910,
                            "src": "775:4:19"
                          },
                          "referencedDeclaration": 25910,
                          "src": "775:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OPTI_$25910",
                            "typeString": "contract OPTI"
                          }
                        }
                      },
                      "id": 25019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "771:10:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OPTI_$25910",
                        "typeString": "contract OPTI"
                      }
                    },
                    "src": "764:17:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OPTI_$25910",
                      "typeString": "contract OPTI"
                    }
                  },
                  "id": 25021,
                  "nodeType": "ExpressionStatement",
                  "src": "764:17:19"
                },
                {
                  "expression": {
                    "id": 25031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25022,
                      "name": "oo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24992,
                      "src": "791:2:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                        "typeString": "contract OptimisticOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 25028,
                              "name": "opti",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24998,
                              "src": "825:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OPTI_$25910",
                                "typeString": "contract OPTI"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OPTI_$25910",
                                "typeString": "contract OPTI"
                              }
                            ],
                            "id": 25027,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "817:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25026,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "817:7:19",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "817:13:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 25025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "796:20:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_OptimisticOracle_$24868_$",
                          "typeString": "function (address) returns (contract OptimisticOracle)"
                        },
                        "typeName": {
                          "id": 25024,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 25023,
                            "name": "OptimisticOracle",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24868,
                            "src": "800:16:19"
                          },
                          "referencedDeclaration": 24868,
                          "src": "800:16:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                            "typeString": "contract OptimisticOracle"
                          }
                        }
                      },
                      "id": 25030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "796:35:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                        "typeString": "contract OptimisticOracle"
                      }
                    },
                    "src": "791:40:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                      "typeString": "contract OptimisticOracle"
                    }
                  },
                  "id": 25032,
                  "nodeType": "ExpressionStatement",
                  "src": "791:40:19"
                },
                {
                  "expression": {
                    "id": 25041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25033,
                      "name": "alice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25000,
                      "src": "841:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 25038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "857:17:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TokenReceiver_$25833_$",
                              "typeString": "function () returns (contract TokenReceiver)"
                            },
                            "typeName": {
                              "id": 25037,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 25036,
                                "name": "TokenReceiver",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 25833,
                                "src": "861:13:19"
                              },
                              "referencedDeclaration": 25833,
                              "src": "861:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenReceiver_$25833",
                                "typeString": "contract TokenReceiver"
                              }
                            }
                          },
                          "id": 25039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "857:19:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenReceiver_$25833",
                            "typeString": "contract TokenReceiver"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TokenReceiver_$25833",
                            "typeString": "contract TokenReceiver"
                          }
                        ],
                        "id": 25035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "849:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 25034,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "849:7:19",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 25040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "849:28:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "841:36:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 25042,
                  "nodeType": "ExpressionStatement",
                  "src": "841:36:19"
                },
                {
                  "expression": {
                    "id": 25051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25043,
                      "name": "bob",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25002,
                      "src": "887:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 25048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "901:17:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TokenReceiver_$25833_$",
                              "typeString": "function () returns (contract TokenReceiver)"
                            },
                            "typeName": {
                              "id": 25047,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 25046,
                                "name": "TokenReceiver",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 25833,
                                "src": "905:13:19"
                              },
                              "referencedDeclaration": 25833,
                              "src": "905:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenReceiver_$25833",
                                "typeString": "contract TokenReceiver"
                              }
                            }
                          },
                          "id": 25049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "901:19:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenReceiver_$25833",
                            "typeString": "contract TokenReceiver"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TokenReceiver_$25833",
                            "typeString": "contract TokenReceiver"
                          }
                        ],
                        "id": 25045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "893:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 25044,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "893:7:19",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 25050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "893:28:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "887:34:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 25052,
                  "nodeType": "ExpressionStatement",
                  "src": "887:34:19"
                },
                {
                  "expression": {
                    "id": 25061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25053,
                      "name": "john",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25004,
                      "src": "931:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 25058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "946:17:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TokenReceiver_$25833_$",
                              "typeString": "function () returns (contract TokenReceiver)"
                            },
                            "typeName": {
                              "id": 25057,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 25056,
                                "name": "TokenReceiver",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 25833,
                                "src": "950:13:19"
                              },
                              "referencedDeclaration": 25833,
                              "src": "950:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenReceiver_$25833",
                                "typeString": "contract TokenReceiver"
                              }
                            }
                          },
                          "id": 25059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "946:19:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenReceiver_$25833",
                            "typeString": "contract TokenReceiver"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TokenReceiver_$25833",
                            "typeString": "contract TokenReceiver"
                          }
                        ],
                        "id": 25055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "938:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 25054,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "938:7:19",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 25060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "938:28:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "931:35:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 25062,
                  "nodeType": "ExpressionStatement",
                  "src": "931:35:19"
                },
                {
                  "expression": {
                    "id": 25071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25063,
                      "name": "kyle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25006,
                      "src": "976:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 25068,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "991:17:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TokenReceiver_$25833_$",
                              "typeString": "function () returns (contract TokenReceiver)"
                            },
                            "typeName": {
                              "id": 25067,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 25066,
                                "name": "TokenReceiver",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 25833,
                                "src": "995:13:19"
                              },
                              "referencedDeclaration": 25833,
                              "src": "995:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenReceiver_$25833",
                                "typeString": "contract TokenReceiver"
                              }
                            }
                          },
                          "id": 25069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "991:19:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenReceiver_$25833",
                            "typeString": "contract TokenReceiver"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TokenReceiver_$25833",
                            "typeString": "contract TokenReceiver"
                          }
                        ],
                        "id": 25065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "983:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 25064,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "983:7:19",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 25070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "983:28:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "976:35:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 25072,
                  "nodeType": "ExpressionStatement",
                  "src": "976:35:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 25078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1045:10:19",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 25075,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25000,
                            "src": "1029:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1021:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 25073,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1021:8:19",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1021:14:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 25077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1021:23:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 25079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1021:35:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25080,
                  "nodeType": "ExpressionStatement",
                  "src": "1021:35:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 25086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1088:10:19",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 25083,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25002,
                            "src": "1074:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1066:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 25081,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1066:8:19",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1066:12:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 25085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1066:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 25087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1066:33:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25088,
                  "nodeType": "ExpressionStatement",
                  "src": "1066:33:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25094,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1128:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$25826",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$25826",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          ],
                          "id": 25093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1120:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25092,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1120:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1120:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "315f3030305f303030",
                        "id": 25096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1135:15:19",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        "value": "1_000_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 25089,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24998,
                        "src": "1110:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25910",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 25091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25909,
                      "src": "1110:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 25097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1110:41:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25098,
                  "nodeType": "ExpressionStatement",
                  "src": "1110:41:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25102,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25000,
                        "src": "1171:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "315f3030305f303030",
                        "id": 25103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1178:15:19",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        "value": "1_000_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 25099,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24998,
                        "src": "1161:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25910",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 25101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25909,
                      "src": "1161:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 25104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1161:33:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25105,
                  "nodeType": "ExpressionStatement",
                  "src": "1161:33:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25109,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25002,
                        "src": "1214:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "315f3030305f303030",
                        "id": 25110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1219:15:19",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        "value": "1_000_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 25106,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24998,
                        "src": "1204:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25910",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 25108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25909,
                      "src": "1204:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 25111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1204:31:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25112,
                  "nodeType": "ExpressionStatement",
                  "src": "1204:31:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25118,
                            "name": "oo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24992,
                            "src": "1267:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                              "typeString": "contract OptimisticOracle"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                              "typeString": "contract OptimisticOracle"
                            }
                          ],
                          "id": 25117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1259:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25116,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1259:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1259:11:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 25122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1277:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 25121,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1277:7:19",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 25120,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1272:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 25123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1272:13:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 25124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1272:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25113,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24998,
                        "src": "1246:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25910",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 25115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23493,
                      "src": "1246:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 25125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1246:44:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25126,
                  "nodeType": "ExpressionStatement",
                  "src": "1246:44:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25130,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25000,
                        "src": "1313:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25127,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24995,
                        "src": "1300:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25882",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25840,
                      "src": "1300:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1300:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25132,
                  "nodeType": "ExpressionStatement",
                  "src": "1300:19:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25138,
                            "name": "oo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24992,
                            "src": "1350:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                              "typeString": "contract OptimisticOracle"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                              "typeString": "contract OptimisticOracle"
                            }
                          ],
                          "id": 25137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1342:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25136,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1342:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1342:11:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 25142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1360:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 25141,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1360:7:19",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 25140,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1355:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 25143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1355:13:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 25144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1355:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25133,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24998,
                        "src": "1329:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25910",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 25135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23493,
                      "src": "1329:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 25145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1329:44:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25146,
                  "nodeType": "ExpressionStatement",
                  "src": "1329:44:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25150,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25002,
                        "src": "1396:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25147,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24995,
                        "src": "1383:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25882",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25840,
                      "src": "1383:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1383:17:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25152,
                  "nodeType": "ExpressionStatement",
                  "src": "1383:17:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25158,
                            "name": "oo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24992,
                            "src": "1431:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                              "typeString": "contract OptimisticOracle"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                              "typeString": "contract OptimisticOracle"
                            }
                          ],
                          "id": 25157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1423:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25156,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1423:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1423:11:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 25162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1441:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 25161,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1441:7:19",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 25160,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1436:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 25163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1436:13:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 25164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1436:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25153,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24998,
                        "src": "1410:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25910",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 25155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23493,
                      "src": "1410:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 25165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1410:44:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25166,
                  "nodeType": "ExpressionStatement",
                  "src": "1410:44:19"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "id": 25168,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "696:5:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25007,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "701:2:19"
            },
            "returnParameters": {
              "id": 25008,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "711:0:19"
            },
            "scope": 25826,
            "src": "687:774:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 25355,
              "nodeType": "Block",
              "src": "1507:1498:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "77696c6c20455448206265206f76657220316b20746f6d6f72726f773f",
                        "id": 25174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1569:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        "value": "will ETH be over 1k tomorrow?"
                      },
                      {
                        "hexValue": "68747470733a2f2f636f696e6765636b6f2e636f6d",
                        "id": 25175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1614:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b23b3d4ae85f5b8d09e37316325b8a4548b8b7ce65630611242948ce5487ad7",
                          "typeString": "literal_string \"https://coingecko.com\""
                        },
                        "value": "https://coingecko.com"
                      },
                      {
                        "hexValue": "31303030",
                        "id": 25176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1651:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b23b3d4ae85f5b8d09e37316325b8a4548b8b7ce65630611242948ce5487ad7",
                          "typeString": "literal_string \"https://coingecko.com\""
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 25171,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24992,
                        "src": "1541:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "askQuestion",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24205,
                      "src": "1541:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,string memory,uint256) external"
                      }
                    },
                    "id": 25177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1541:124:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25178,
                  "nodeType": "ExpressionStatement",
                  "src": "1541:124:19"
                },
                {
                  "assignments": [
                    25180
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25180,
                      "mutability": "mutable",
                      "name": "questionId",
                      "nameLocation": "1683:10:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25355,
                      "src": "1675:18:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 25179,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1675:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25187,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "77696c6c20455448206265206f76657220316b20746f6d6f72726f773f",
                        "id": 25183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1726:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        "value": "will ETH be over 1k tomorrow?"
                      },
                      {
                        "hexValue": "68747470733a2f2f636f696e6765636b6f2e636f6d",
                        "id": 25184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1771:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b23b3d4ae85f5b8d09e37316325b8a4548b8b7ce65630611242948ce5487ad7",
                          "typeString": "literal_string \"https://coingecko.com\""
                        },
                        "value": "https://coingecko.com"
                      },
                      {
                        "hexValue": "31303030",
                        "id": 25185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1808:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b23b3d4ae85f5b8d09e37316325b8a4548b8b7ce65630611242948ce5487ad7",
                          "typeString": "literal_string \"https://coingecko.com\""
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 25181,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24992,
                        "src": "1696:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getQuestionId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24821,
                      "src": "1696:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory,uint256) pure external returns (bytes32)"
                      }
                    },
                    "id": 25186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1696:126:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1675:147:19"
                },
                {
                  "assignments": [
                    25190
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25190,
                      "mutability": "mutable",
                      "name": "question",
                      "nameLocation": "1848:8:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25355,
                      "src": "1832:24:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$24915_memory_ptr",
                        "typeString": "struct Question"
                      },
                      "typeName": {
                        "id": 25189,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 25188,
                          "name": "Question",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24915,
                          "src": "1832:8:19"
                        },
                        "referencedDeclaration": 24915,
                        "src": "1832:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$24915_storage_ptr",
                          "typeString": "struct Question"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25195,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25193,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25180,
                        "src": "1878:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25191,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24992,
                        "src": "1859:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getQuestionById",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24774,
                      "src": "1859:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Question_$24915_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct Question memory)"
                      }
                    },
                    "id": 25194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1859:30:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$24915_memory_ptr",
                      "typeString": "struct Question memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1832:57:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25197,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25190,
                          "src": "1908:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$24915_memory_ptr",
                            "typeString": "struct Question memory"
                          }
                        },
                        "id": 25198,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "questionString",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24902,
                        "src": "1908:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "77696c6c20455448206265206f76657220316b20746f6d6f72726f773f",
                        "id": 25199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1933:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        "value": "will ETH be over 1k tomorrow?"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        }
                      ],
                      "id": 25196,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 1639,
                      "src": "1899:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 25200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1899:66:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25201,
                  "nodeType": "ExpressionStatement",
                  "src": "1899:66:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 25205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2014:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 25202,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24995,
                        "src": "2002:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25882",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25855,
                      "src": "2002:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 25206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2002:17:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25207,
                  "nodeType": "ExpressionStatement",
                  "src": "2002:17:19"
                },
                {
                  "assignments": [
                    25209
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25209,
                      "mutability": "mutable",
                      "name": "initialBalance",
                      "nameLocation": "2037:14:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25355,
                      "src": "2029:22:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25208,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2029:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25217,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25214,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2077:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$25826",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$25826",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          ],
                          "id": 25213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2069:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25212,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2069:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2069:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25210,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24998,
                        "src": "2054:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25910",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 25211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23425,
                      "src": "2054:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 25216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2054:29:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2029:54:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25221,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25180,
                        "src": "2110:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 25222,
                          "name": "Result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24874,
                          "src": "2122:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Result_$24874_$",
                            "typeString": "type(enum Result)"
                          }
                        },
                        "id": 25223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "YES",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24872,
                        "src": "2122:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$24874",
                          "typeString": "enum Result"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_enum$_Result_$24874",
                          "typeString": "enum Result"
                        }
                      ],
                      "expression": {
                        "id": 25218,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24992,
                        "src": "2093:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proposeAnswer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24270,
                      "src": "2093:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_enum$_Result_$24874_$returns$__$",
                        "typeString": "function (bytes32,enum Result) external"
                      }
                    },
                    "id": 25224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2093:40:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25225,
                  "nodeType": "ExpressionStatement",
                  "src": "2093:40:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25227,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25209,
                        "src": "2164:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 25232,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2203:4:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OptimisticOracleTest_$25826",
                                    "typeString": "contract OptimisticOracleTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_OptimisticOracleTest_$25826",
                                    "typeString": "contract OptimisticOracleTest"
                                  }
                                ],
                                "id": 25231,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2195:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 25230,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2195:7:19",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 25233,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2195:13:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 25228,
                              "name": "opti",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24998,
                              "src": "2180:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OPTI_$25910",
                                "typeString": "contract OPTI"
                              }
                            },
                            "id": 25229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23425,
                            "src": "2180:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 25234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2180:29:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 25235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2212:8:19",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        "src": "2180:40:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25226,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2155:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2155:66:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25238,
                  "nodeType": "ExpressionStatement",
                  "src": "2155:66:19"
                },
                {
                  "assignments": [
                    25241
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25241,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nameLocation": "2273:8:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25355,
                      "src": "2257:24:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$24887_memory_ptr",
                        "typeString": "struct Proposal"
                      },
                      "typeName": {
                        "id": 25240,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 25239,
                          "name": "Proposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24887,
                          "src": "2257:8:19"
                        },
                        "referencedDeclaration": 24887,
                        "src": "2257:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$24887_storage_ptr",
                          "typeString": "struct Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25246,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25244,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25180,
                        "src": "2311:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25242,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24992,
                        "src": "2284:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getProposalByQuestionId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24787,
                      "src": "2284:26:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Proposal_$24887_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct Proposal memory)"
                      }
                    },
                    "id": 25245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2284:38:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$24887_memory_ptr",
                      "typeString": "struct Proposal memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2257:65:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25250,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25241,
                              "src": "2349:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$24887_memory_ptr",
                                "typeString": "struct Proposal memory"
                              }
                            },
                            "id": 25251,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "answer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24884,
                            "src": "2349:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24874",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24874",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2341:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25248,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2341:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2341:24:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25255,
                              "name": "Result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24874,
                              "src": "2375:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Result_$24874_$",
                                "typeString": "type(enum Result)"
                              }
                            },
                            "id": 25256,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "YES",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24872,
                            "src": "2375:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24874",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24874",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2367:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25253,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2367:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2367:19:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25247,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2332:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2332:55:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25259,
                  "nodeType": "ExpressionStatement",
                  "src": "2332:55:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 25263,
                              "name": "oo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24992,
                              "src": "2439:2:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                                "typeString": "contract OptimisticOracle"
                              }
                            },
                            "id": 25264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "DISPUTE_PERIOD",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24123,
                            "src": "2439:17:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 25265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2439:19:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31303031",
                          "id": 25266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2461:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1001_by_1",
                            "typeString": "int_const 1001"
                          },
                          "value": "1001"
                        },
                        "src": "2439:26:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25260,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24995,
                        "src": "2427:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25882",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25855,
                      "src": "2427:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 25268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2427:39:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25269,
                  "nodeType": "ExpressionStatement",
                  "src": "2427:39:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25273,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25180,
                        "src": "2496:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25270,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24992,
                        "src": "2476:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "finalizeProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24339,
                      "src": "2476:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 25274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2476:31:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25275,
                  "nodeType": "ExpressionStatement",
                  "src": "2476:31:19"
                },
                {
                  "expression": {
                    "id": 25281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25276,
                      "name": "question",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25190,
                      "src": "2517:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$24915_memory_ptr",
                        "typeString": "struct Question memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25279,
                          "name": "questionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25180,
                          "src": "2547:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 25277,
                          "name": "oo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24992,
                          "src": "2528:2:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                            "typeString": "contract OptimisticOracle"
                          }
                        },
                        "id": 25278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getQuestionById",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24774,
                        "src": "2528:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Question_$24915_memory_ptr_$",
                          "typeString": "function (bytes32) view external returns (struct Question memory)"
                        }
                      },
                      "id": 25280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2528:30:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$24915_memory_ptr",
                        "typeString": "struct Question memory"
                      }
                    },
                    "src": "2517:41:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$24915_memory_ptr",
                      "typeString": "struct Question memory"
                    }
                  },
                  "id": 25282,
                  "nodeType": "ExpressionStatement",
                  "src": "2517:41:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25286,
                              "name": "question",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25190,
                              "src": "2585:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Question_$24915_memory_ptr",
                                "typeString": "struct Question memory"
                              }
                            },
                            "id": 25287,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stage",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24911,
                            "src": "2585:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Stage_$24879",
                              "typeString": "enum Stage"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Stage_$24879",
                              "typeString": "enum Stage"
                            }
                          ],
                          "id": 25285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2577:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25284,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2577:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2577:23:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25291,
                              "name": "Stage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24879,
                              "src": "2610:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Stage_$24879_$",
                                "typeString": "type(enum Stage)"
                              }
                            },
                            "id": 25292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "FINALIZED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24878,
                            "src": "2610:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Stage_$24879",
                              "typeString": "enum Stage"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Stage_$24879",
                              "typeString": "enum Stage"
                            }
                          ],
                          "id": 25290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2602:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25289,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2602:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2602:24:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25283,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2568:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2568:59:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25295,
                  "nodeType": "ExpressionStatement",
                  "src": "2568:59:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25299,
                              "name": "question",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25190,
                              "src": "2654:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Question_$24915_memory_ptr",
                                "typeString": "struct Question memory"
                              }
                            },
                            "id": 25300,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "result",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24914,
                            "src": "2654:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24874",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24874",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2646:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25297,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2646:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2646:24:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25304,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25241,
                              "src": "2680:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$24887_memory_ptr",
                                "typeString": "struct Proposal memory"
                              }
                            },
                            "id": 25305,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "answer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24884,
                            "src": "2680:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24874",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24874",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2672:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25302,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2672:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2672:24:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25296,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2637:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2637:60:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25308,
                  "nodeType": "ExpressionStatement",
                  "src": "2637:60:19"
                },
                {
                  "assignments": [
                    25313
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25313,
                      "mutability": "mutable",
                      "name": "questions",
                      "nameLocation": "2726:9:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25355,
                      "src": "2708:27:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Question_$24915_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Question[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 25311,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 25310,
                            "name": "Question",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24915,
                            "src": "2708:8:19"
                          },
                          "referencedDeclaration": 24915,
                          "src": "2708:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$24915_storage_ptr",
                            "typeString": "struct Question"
                          }
                        },
                        "id": 25312,
                        "nodeType": "ArrayTypeName",
                        "src": "2708:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Question_$24915_storage_$dyn_storage_ptr",
                          "typeString": "struct Question[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25317,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 25314,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24992,
                        "src": "2738:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAllQuestions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24867,
                      "src": "2738:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_struct$_Question_$24915_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (struct Question memory[] memory)"
                      }
                    },
                    "id": 25316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2738:20:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Question_$24915_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Question memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2708:50:19"
                },
                {
                  "expression": {
                    "id": 25323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25318,
                      "name": "question",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25190,
                      "src": "2768:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$24915_memory_ptr",
                        "typeString": "struct Question memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25321,
                          "name": "questionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25180,
                          "src": "2798:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 25319,
                          "name": "oo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24992,
                          "src": "2779:2:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                            "typeString": "contract OptimisticOracle"
                          }
                        },
                        "id": 25320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getQuestionById",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24774,
                        "src": "2779:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Question_$24915_memory_ptr_$",
                          "typeString": "function (bytes32) view external returns (struct Question memory)"
                        }
                      },
                      "id": 25322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2779:30:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$24915_memory_ptr",
                        "typeString": "struct Question memory"
                      }
                    },
                    "src": "2768:41:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$24915_memory_ptr",
                      "typeString": "struct Question memory"
                    }
                  },
                  "id": 25324,
                  "nodeType": "ExpressionStatement",
                  "src": "2768:41:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 25328,
                                "name": "questions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25313,
                                "src": "2837:9:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Question_$24915_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct Question memory[] memory"
                                }
                              },
                              "id": 25330,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 25329,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2847:1:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2837:12:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Question_$24915_memory_ptr",
                                "typeString": "struct Question memory"
                              }
                            },
                            "id": 25331,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "result",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24914,
                            "src": "2837:19:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24874",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24874",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2829:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25326,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2829:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2829:28:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25335,
                              "name": "question",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25190,
                              "src": "2867:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Question_$24915_memory_ptr",
                                "typeString": "struct Question memory"
                              }
                            },
                            "id": 25336,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "result",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24914,
                            "src": "2867:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24874",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24874",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2859:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25333,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2859:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2859:24:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25325,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2820:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2820:64:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25339,
                  "nodeType": "ExpressionStatement",
                  "src": "2820:64:19"
                },
                {
                  "assignments": [
                    25341
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25341,
                      "mutability": "mutable",
                      "name": "endingBalance",
                      "nameLocation": "2903:13:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25355,
                      "src": "2895:21:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25340,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2895:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25349,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25346,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2942:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$25826",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$25826",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          ],
                          "id": 25345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2934:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25344,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2934:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2934:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25342,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24998,
                        "src": "2919:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25910",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 25343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23425,
                      "src": "2919:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 25348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2919:29:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2895:53:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25351,
                        "name": "endingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25341,
                        "src": "2968:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25352,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25209,
                        "src": "2983:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25350,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2959:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2959:39:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25354,
                  "nodeType": "ExpressionStatement",
                  "src": "2959:39:19"
                }
              ]
            },
            "functionSelector": "e3f90828",
            "id": 25356,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testQuestionHappyPath",
            "nameLocation": "1476:21:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1497:2:19"
            },
            "returnParameters": {
              "id": 25170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1507:0:19"
            },
            "scope": 25826,
            "src": "1467:1538:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 25820,
              "nodeType": "Block",
              "src": "3049:3673:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "77696c6c20455448206265206f76657220316b20746f6d6f72726f773f",
                        "id": 25362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3111:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        "value": "will ETH be over 1k tomorrow?"
                      },
                      {
                        "hexValue": "68747470733a2f2f636f696e6765636b6f2e636f6d",
                        "id": 25363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3156:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b23b3d4ae85f5b8d09e37316325b8a4548b8b7ce65630611242948ce5487ad7",
                          "typeString": "literal_string \"https://coingecko.com\""
                        },
                        "value": "https://coingecko.com"
                      },
                      {
                        "hexValue": "31303030",
                        "id": 25364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3193:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b23b3d4ae85f5b8d09e37316325b8a4548b8b7ce65630611242948ce5487ad7",
                          "typeString": "literal_string \"https://coingecko.com\""
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 25359,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24992,
                        "src": "3083:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "askQuestion",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24205,
                      "src": "3083:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,string memory,uint256) external"
                      }
                    },
                    "id": 25365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3083:124:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25366,
                  "nodeType": "ExpressionStatement",
                  "src": "3083:124:19"
                },
                {
                  "assignments": [
                    25368
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25368,
                      "mutability": "mutable",
                      "name": "questionId",
                      "nameLocation": "3225:10:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25820,
                      "src": "3217:18:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 25367,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3217:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25375,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "77696c6c20455448206265206f76657220316b20746f6d6f72726f773f",
                        "id": 25371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3268:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        "value": "will ETH be over 1k tomorrow?"
                      },
                      {
                        "hexValue": "68747470733a2f2f636f696e6765636b6f2e636f6d",
                        "id": 25372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3313:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b23b3d4ae85f5b8d09e37316325b8a4548b8b7ce65630611242948ce5487ad7",
                          "typeString": "literal_string \"https://coingecko.com\""
                        },
                        "value": "https://coingecko.com"
                      },
                      {
                        "hexValue": "31303030",
                        "id": 25373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3350:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b23b3d4ae85f5b8d09e37316325b8a4548b8b7ce65630611242948ce5487ad7",
                          "typeString": "literal_string \"https://coingecko.com\""
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 25369,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24992,
                        "src": "3238:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getQuestionId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24821,
                      "src": "3238:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory,uint256) pure external returns (bytes32)"
                      }
                    },
                    "id": 25374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3238:126:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3217:147:19"
                },
                {
                  "assignments": [
                    25378
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25378,
                      "mutability": "mutable",
                      "name": "question",
                      "nameLocation": "3390:8:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25820,
                      "src": "3374:24:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$24915_memory_ptr",
                        "typeString": "struct Question"
                      },
                      "typeName": {
                        "id": 25377,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 25376,
                          "name": "Question",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24915,
                          "src": "3374:8:19"
                        },
                        "referencedDeclaration": 24915,
                        "src": "3374:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$24915_storage_ptr",
                          "typeString": "struct Question"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25383,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25381,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25368,
                        "src": "3420:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25379,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24992,
                        "src": "3401:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getQuestionById",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24774,
                      "src": "3401:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Question_$24915_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct Question memory)"
                      }
                    },
                    "id": 25382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3401:30:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$24915_memory_ptr",
                      "typeString": "struct Question memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3374:57:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25385,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25378,
                          "src": "3450:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$24915_memory_ptr",
                            "typeString": "struct Question memory"
                          }
                        },
                        "id": 25386,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "questionString",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24902,
                        "src": "3450:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "77696c6c20455448206265206f76657220316b20746f6d6f72726f773f",
                        "id": 25387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3475:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        "value": "will ETH be over 1k tomorrow?"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        }
                      ],
                      "id": 25384,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 1639,
                      "src": "3441:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 25388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3441:66:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25389,
                  "nodeType": "ExpressionStatement",
                  "src": "3441:66:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 25393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3556:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 25390,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24995,
                        "src": "3544:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25882",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25855,
                      "src": "3544:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 25394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3544:17:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25395,
                  "nodeType": "ExpressionStatement",
                  "src": "3544:17:19"
                },
                {
                  "assignments": [
                    25397
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25397,
                      "mutability": "mutable",
                      "name": "initialBalance",
                      "nameLocation": "3579:14:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25820,
                      "src": "3571:22:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25396,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3571:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25405,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25402,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3619:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$25826",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$25826",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          ],
                          "id": 25401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3611:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25400,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3611:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3611:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25398,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24998,
                        "src": "3596:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25910",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 25399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23425,
                      "src": "3596:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 25404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3596:29:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3571:54:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25409,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25368,
                        "src": "3652:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 25410,
                          "name": "Result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24874,
                          "src": "3664:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Result_$24874_$",
                            "typeString": "type(enum Result)"
                          }
                        },
                        "id": 25411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "YES",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24872,
                        "src": "3664:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$24874",
                          "typeString": "enum Result"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_enum$_Result_$24874",
                          "typeString": "enum Result"
                        }
                      ],
                      "expression": {
                        "id": 25406,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24992,
                        "src": "3635:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proposeAnswer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24270,
                      "src": "3635:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_enum$_Result_$24874_$returns$__$",
                        "typeString": "function (bytes32,enum Result) external"
                      }
                    },
                    "id": 25412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3635:40:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25413,
                  "nodeType": "ExpressionStatement",
                  "src": "3635:40:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25415,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25397,
                        "src": "3706:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 25420,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3745:4:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OptimisticOracleTest_$25826",
                                    "typeString": "contract OptimisticOracleTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_OptimisticOracleTest_$25826",
                                    "typeString": "contract OptimisticOracleTest"
                                  }
                                ],
                                "id": 25419,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3737:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 25418,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3737:7:19",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 25421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3737:13:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 25416,
                              "name": "opti",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24998,
                              "src": "3722:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OPTI_$25910",
                                "typeString": "contract OPTI"
                              }
                            },
                            "id": 25417,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23425,
                            "src": "3722:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 25422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3722:29:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 25423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3754:8:19",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        "src": "3722:40:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25414,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3697:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3697:66:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25426,
                  "nodeType": "ExpressionStatement",
                  "src": "3697:66:19"
                },
                {
                  "assignments": [
                    25429
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25429,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nameLocation": "3815:8:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25820,
                      "src": "3799:24:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$24887_memory_ptr",
                        "typeString": "struct Proposal"
                      },
                      "typeName": {
                        "id": 25428,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 25427,
                          "name": "Proposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24887,
                          "src": "3799:8:19"
                        },
                        "referencedDeclaration": 24887,
                        "src": "3799:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$24887_storage_ptr",
                          "typeString": "struct Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25434,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25432,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25368,
                        "src": "3853:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25430,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24992,
                        "src": "3826:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getProposalByQuestionId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24787,
                      "src": "3826:26:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Proposal_$24887_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct Proposal memory)"
                      }
                    },
                    "id": 25433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3826:38:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$24887_memory_ptr",
                      "typeString": "struct Proposal memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3799:65:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25438,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25429,
                              "src": "3891:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$24887_memory_ptr",
                                "typeString": "struct Proposal memory"
                              }
                            },
                            "id": 25439,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "answer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24884,
                            "src": "3891:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24874",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24874",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3883:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25436,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3883:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3883:24:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25443,
                              "name": "Result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24874,
                              "src": "3917:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Result_$24874_$",
                                "typeString": "type(enum Result)"
                              }
                            },
                            "id": 25444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "YES",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24872,
                            "src": "3917:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24874",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24874",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3909:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25441,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3909:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3909:19:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25435,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3874:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3874:55:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25447,
                  "nodeType": "ExpressionStatement",
                  "src": "3874:55:19"
                },
                {
                  "assignments": [
                    25449
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25449,
                      "mutability": "mutable",
                      "name": "bobInitialBalance",
                      "nameLocation": "3976:17:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25820,
                      "src": "3968:25:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25448,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3968:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25454,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25452,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25002,
                        "src": "4011:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25450,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24998,
                        "src": "3996:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25910",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 25451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23425,
                      "src": "3996:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 25453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3996:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3968:47:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25458,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25002,
                        "src": "4038:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25455,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24995,
                        "src": "4025:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25882",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25840,
                      "src": "4025:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4025:17:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25460,
                  "nodeType": "ExpressionStatement",
                  "src": "4025:17:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25464,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25368,
                        "src": "4071:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25461,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24992,
                        "src": "4052:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "disputeProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24409,
                      "src": "4052:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 25465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4052:30:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25466,
                  "nodeType": "ExpressionStatement",
                  "src": "4052:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25468,
                        "name": "bobInitialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25449,
                        "src": "4101:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 25471,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25002,
                              "src": "4135:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 25469,
                              "name": "opti",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24998,
                              "src": "4120:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OPTI_$25910",
                                "typeString": "contract OPTI"
                              }
                            },
                            "id": 25470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23425,
                            "src": "4120:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 25472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4120:19:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 25473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4142:8:19",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        "src": "4120:30:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25467,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "4092:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4092:59:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25476,
                  "nodeType": "ExpressionStatement",
                  "src": "4092:59:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 25480,
                              "name": "oo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24992,
                              "src": "4228:2:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                                "typeString": "contract OptimisticOracle"
                              }
                            },
                            "id": 25481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "DISPUTE_PERIOD",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24123,
                            "src": "4228:17:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 25482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4228:19:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31303031",
                          "id": 25483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4250:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1001_by_1",
                            "typeString": "int_const 1001"
                          },
                          "value": "1001"
                        },
                        "src": "4228:26:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25477,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24995,
                        "src": "4216:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25882",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25855,
                      "src": "4216:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 25485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4216:39:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25486,
                  "nodeType": "ExpressionStatement",
                  "src": "4216:39:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "50726f706f73616c207761732064697370757465642c2063616e6e6f742066696e616c697a65",
                        "id": 25490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4285:40:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_89d58efc9aa98f6e7a3374d3a1dd910bdc732f644c38ae5e43799d7e1e9a03cb",
                          "typeString": "literal_string \"Proposal was disputed, cannot finalize\""
                        },
                        "value": "Proposal was disputed, cannot finalize"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_89d58efc9aa98f6e7a3374d3a1dd910bdc732f644c38ae5e43799d7e1e9a03cb",
                          "typeString": "literal_string \"Proposal was disputed, cannot finalize\""
                        }
                      ],
                      "expression": {
                        "id": 25487,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24995,
                        "src": "4265:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25882",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25845,
                      "src": "4265:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 25491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4265:61:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25492,
                  "nodeType": "ExpressionStatement",
                  "src": "4265:61:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25496,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25368,
                        "src": "4356:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25493,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24992,
                        "src": "4336:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "finalizeProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24339,
                      "src": "4336:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 25497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4336:31:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25498,
                  "nodeType": "ExpressionStatement",
                  "src": "4336:31:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 25502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4389:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 25499,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24995,
                        "src": "4377:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25882",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25855,
                      "src": "4377:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 25503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4377:17:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25504,
                  "nodeType": "ExpressionStatement",
                  "src": "4377:17:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25508,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25000,
                        "src": "4442:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25505,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24995,
                        "src": "4429:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25882",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25840,
                      "src": "4429:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4429:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25510,
                  "nodeType": "ExpressionStatement",
                  "src": "4429:19:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25514,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25368,
                        "src": "4485:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 25518,
                                  "name": "Result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24874,
                                  "src": "4530:6:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_Result_$24874_$",
                                    "typeString": "type(enum Result)"
                                  }
                                },
                                "id": 25519,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "YES",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24872,
                                "src": "4530:10:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Result_$24874",
                                  "typeString": "enum Result"
                                }
                              },
                              {
                                "hexValue": "616c6963652d70617373776f7264",
                                "id": 25520,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4542:16:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_67e19175cbda2eca1010705b00ac02c17dc4d8e64d0d5f4dee33876d02502012",
                                  "typeString": "literal_string \"alice-password\""
                                },
                                "value": "alice-password"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_Result_$24874",
                                  "typeString": "enum Result"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_67e19175cbda2eca1010705b00ac02c17dc4d8e64d0d5f4dee33876d02502012",
                                  "typeString": "literal_string \"alice-password\""
                                }
                              ],
                              "expression": {
                                "id": 25516,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4519:3:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 25517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "4519:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 25521,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4519:40:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 25515,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "4509:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 25522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4509:51:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25511,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24992,
                        "src": "4458:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "commitVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24497,
                      "src": "4458:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32) external"
                      }
                    },
                    "id": 25523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4458:112:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25524,
                  "nodeType": "ExpressionStatement",
                  "src": "4458:112:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25528,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25002,
                        "src": "4593:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25525,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24995,
                        "src": "4580:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25882",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25840,
                      "src": "4580:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4580:17:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25530,
                  "nodeType": "ExpressionStatement",
                  "src": "4580:17:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25534,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25368,
                        "src": "4634:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 25538,
                                  "name": "Result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24874,
                                  "src": "4679:6:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_Result_$24874_$",
                                    "typeString": "type(enum Result)"
                                  }
                                },
                                "id": 25539,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "NO",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24873,
                                "src": "4679:9:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Result_$24874",
                                  "typeString": "enum Result"
                                }
                              },
                              {
                                "hexValue": "626f622d70617373776f7264",
                                "id": 25540,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4690:14:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5724172cb55c6d710085e78e66fcf08560e6b85f5ee8f99239feb73e502cf8ad",
                                  "typeString": "literal_string \"bob-password\""
                                },
                                "value": "bob-password"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_Result_$24874",
                                  "typeString": "enum Result"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_5724172cb55c6d710085e78e66fcf08560e6b85f5ee8f99239feb73e502cf8ad",
                                  "typeString": "literal_string \"bob-password\""
                                }
                              ],
                              "expression": {
                                "id": 25536,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4668:3:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 25537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "4668:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 25541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4668:37:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 25535,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "4658:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 25542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4658:48:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25531,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24992,
                        "src": "4607:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "commitVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24497,
                      "src": "4607:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32) external"
                      }
                    },
                    "id": 25543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4607:109:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25544,
                  "nodeType": "ExpressionStatement",
                  "src": "4607:109:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25548,
                        "name": "john",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25004,
                        "src": "4739:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25545,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24995,
                        "src": "4726:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25882",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25840,
                      "src": "4726:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4726:18:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25550,
                  "nodeType": "ExpressionStatement",
                  "src": "4726:18:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25554,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25368,
                        "src": "4781:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 25558,
                                  "name": "Result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24874,
                                  "src": "4826:6:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_Result_$24874_$",
                                    "typeString": "type(enum Result)"
                                  }
                                },
                                "id": 25559,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "NO",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24873,
                                "src": "4826:9:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Result_$24874",
                                  "typeString": "enum Result"
                                }
                              },
                              {
                                "hexValue": "6a6f686e2d70617373776f7264",
                                "id": 25560,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4837:15:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_0294c98ce2ca626561061d6fd47382fd31694d9a2da2483933b2d7760632bda5",
                                  "typeString": "literal_string \"john-password\""
                                },
                                "value": "john-password"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_Result_$24874",
                                  "typeString": "enum Result"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_0294c98ce2ca626561061d6fd47382fd31694d9a2da2483933b2d7760632bda5",
                                  "typeString": "literal_string \"john-password\""
                                }
                              ],
                              "expression": {
                                "id": 25556,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4815:3:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 25557,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "4815:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 25561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4815:38:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 25555,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "4805:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 25562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4805:49:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25551,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24992,
                        "src": "4754:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "commitVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24497,
                      "src": "4754:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32) external"
                      }
                    },
                    "id": 25563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4754:110:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25564,
                  "nodeType": "ExpressionStatement",
                  "src": "4754:110:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25568,
                        "name": "kyle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25006,
                        "src": "4887:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25565,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24995,
                        "src": "4874:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25882",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25840,
                      "src": "4874:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4874:18:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25570,
                  "nodeType": "ExpressionStatement",
                  "src": "4874:18:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25574,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25368,
                        "src": "4929:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 25578,
                                  "name": "Result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24874,
                                  "src": "4974:6:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_Result_$24874_$",
                                    "typeString": "type(enum Result)"
                                  }
                                },
                                "id": 25579,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "YES",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24872,
                                "src": "4974:10:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Result_$24874",
                                  "typeString": "enum Result"
                                }
                              },
                              {
                                "hexValue": "6b796c652d70617373776f7264",
                                "id": 25580,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4986:15:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_f0184c7a86648a3ff18c4d2b1d2f9e8cff831d8dee128b5782079d72a1cfb75e",
                                  "typeString": "literal_string \"kyle-password\""
                                },
                                "value": "kyle-password"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_Result_$24874",
                                  "typeString": "enum Result"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_f0184c7a86648a3ff18c4d2b1d2f9e8cff831d8dee128b5782079d72a1cfb75e",
                                  "typeString": "literal_string \"kyle-password\""
                                }
                              ],
                              "expression": {
                                "id": 25576,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4963:3:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 25577,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "4963:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 25581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4963:39:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 25575,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "4953:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 25582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4953:50:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25571,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24992,
                        "src": "4902:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "commitVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24497,
                      "src": "4902:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32) external"
                      }
                    },
                    "id": 25583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4902:111:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25584,
                  "nodeType": "ExpressionStatement",
                  "src": "4902:111:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25588,
                        "name": "kyle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25006,
                        "src": "5036:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25585,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24995,
                        "src": "5023:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25882",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25840,
                      "src": "5023:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5023:18:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25590,
                  "nodeType": "ExpressionStatement",
                  "src": "5023:18:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25594,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25368,
                        "src": "5097:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 25598,
                                  "name": "Result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24874,
                                  "src": "5142:6:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_Result_$24874_$",
                                    "typeString": "type(enum Result)"
                                  }
                                },
                                "id": 25599,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "NO",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24873,
                                "src": "5142:9:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Result_$24874",
                                  "typeString": "enum Result"
                                }
                              },
                              {
                                "hexValue": "6b796c652d70617373776f7264",
                                "id": 25600,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5153:15:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_f0184c7a86648a3ff18c4d2b1d2f9e8cff831d8dee128b5782079d72a1cfb75e",
                                  "typeString": "literal_string \"kyle-password\""
                                },
                                "value": "kyle-password"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_Result_$24874",
                                  "typeString": "enum Result"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_f0184c7a86648a3ff18c4d2b1d2f9e8cff831d8dee128b5782079d72a1cfb75e",
                                  "typeString": "literal_string \"kyle-password\""
                                }
                              ],
                              "expression": {
                                "id": 25596,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "5131:3:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 25597,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "5131:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 25601,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5131:38:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 25595,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "5121:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 25602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5121:49:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25591,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24992,
                        "src": "5070:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "commitVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24497,
                      "src": "5070:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32) external"
                      }
                    },
                    "id": 25603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5070:110:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25604,
                  "nodeType": "ExpressionStatement",
                  "src": "5070:110:19"
                },
                {
                  "assignments": [
                    25607
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25607,
                      "mutability": "mutable",
                      "name": "vote",
                      "nameLocation": "5203:4:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25820,
                      "src": "5191:16:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vote_$24900_memory_ptr",
                        "typeString": "struct Vote"
                      },
                      "typeName": {
                        "id": 25606,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 25605,
                          "name": "Vote",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24900,
                          "src": "5191:4:19"
                        },
                        "referencedDeclaration": 24900,
                        "src": "5191:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vote_$24900_storage_ptr",
                          "typeString": "struct Vote"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25612,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25610,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25368,
                        "src": "5233:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25608,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24992,
                        "src": "5210:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getVoteByQuestionId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24800,
                      "src": "5210:22:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Vote_$24900_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct Vote memory)"
                      }
                    },
                    "id": 25611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5210:34:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vote_$24900_memory_ptr",
                      "typeString": "struct Vote memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5191:53:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25614,
                          "name": "vote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25607,
                          "src": "5263:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vote_$24900_memory_ptr",
                            "typeString": "struct Vote memory"
                          }
                        },
                        "id": 25615,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "voteCount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24895,
                        "src": "5263:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "34",
                        "id": 25616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5279:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "id": 25613,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "5254:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5254:27:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25618,
                  "nodeType": "ExpressionStatement",
                  "src": "5254:27:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25622,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25000,
                        "src": "5379:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25619,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24995,
                        "src": "5366:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25882",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25840,
                      "src": "5366:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5366:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25624,
                  "nodeType": "ExpressionStatement",
                  "src": "5366:19:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "48617368657320646f6e2774206d61746368",
                        "id": 25628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5415:20:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7e64a4e72c9f38a6141636a082d060b0b9c7c18a052f43e6039a3d01ab251b23",
                          "typeString": "literal_string \"Hashes don't match\""
                        },
                        "value": "Hashes don't match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7e64a4e72c9f38a6141636a082d060b0b9c7c18a052f43e6039a3d01ab251b23",
                          "typeString": "literal_string \"Hashes don't match\""
                        }
                      ],
                      "expression": {
                        "id": 25625,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24995,
                        "src": "5395:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25882",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25845,
                      "src": "5395:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 25629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5395:41:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25630,
                  "nodeType": "ExpressionStatement",
                  "src": "5395:41:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25634,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25368,
                        "src": "5460:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 25635,
                          "name": "Result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24874,
                          "src": "5472:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Result_$24874_$",
                            "typeString": "type(enum Result)"
                          }
                        },
                        "id": 25636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "YES",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24872,
                        "src": "5472:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$24874",
                          "typeString": "enum Result"
                        }
                      },
                      {
                        "hexValue": "616c6963652d70617373776f72642d77726f6e67",
                        "id": 25637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5484:22:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad705a4c43492aa0237cd06138c14bf11c7b05fa2d4af1fccaa6870c136aaf96",
                          "typeString": "literal_string \"alice-password-wrong\""
                        },
                        "value": "alice-password-wrong"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_enum$_Result_$24874",
                          "typeString": "enum Result"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad705a4c43492aa0237cd06138c14bf11c7b05fa2d4af1fccaa6870c136aaf96",
                          "typeString": "literal_string \"alice-password-wrong\""
                        }
                      ],
                      "expression": {
                        "id": 25631,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24992,
                        "src": "5446:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "revealVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24594,
                      "src": "5446:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_enum$_Result_$24874_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,enum Result,string memory) external"
                      }
                    },
                    "id": 25638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5446:61:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25639,
                  "nodeType": "ExpressionStatement",
                  "src": "5446:61:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25643,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25000,
                        "src": "5531:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25640,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24995,
                        "src": "5518:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25882",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25840,
                      "src": "5518:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5518:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25645,
                  "nodeType": "ExpressionStatement",
                  "src": "5518:19:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25649,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25368,
                        "src": "5561:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 25650,
                          "name": "Result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24874,
                          "src": "5573:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Result_$24874_$",
                            "typeString": "type(enum Result)"
                          }
                        },
                        "id": 25651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "YES",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24872,
                        "src": "5573:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$24874",
                          "typeString": "enum Result"
                        }
                      },
                      {
                        "hexValue": "616c6963652d70617373776f7264",
                        "id": 25652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5585:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67e19175cbda2eca1010705b00ac02c17dc4d8e64d0d5f4dee33876d02502012",
                          "typeString": "literal_string \"alice-password\""
                        },
                        "value": "alice-password"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_enum$_Result_$24874",
                          "typeString": "enum Result"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67e19175cbda2eca1010705b00ac02c17dc4d8e64d0d5f4dee33876d02502012",
                          "typeString": "literal_string \"alice-password\""
                        }
                      ],
                      "expression": {
                        "id": 25646,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24992,
                        "src": "5547:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "revealVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24594,
                      "src": "5547:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_enum$_Result_$24874_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,enum Result,string memory) external"
                      }
                    },
                    "id": 25653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5547:55:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25654,
                  "nodeType": "ExpressionStatement",
                  "src": "5547:55:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25658,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25002,
                        "src": "5625:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25655,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24995,
                        "src": "5612:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25882",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25840,
                      "src": "5612:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5612:17:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25660,
                  "nodeType": "ExpressionStatement",
                  "src": "5612:17:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25664,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25368,
                        "src": "5653:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 25665,
                          "name": "Result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24874,
                          "src": "5665:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Result_$24874_$",
                            "typeString": "type(enum Result)"
                          }
                        },
                        "id": 25666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "NO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24873,
                        "src": "5665:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$24874",
                          "typeString": "enum Result"
                        }
                      },
                      {
                        "hexValue": "626f622d70617373776f7264",
                        "id": 25667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5676:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5724172cb55c6d710085e78e66fcf08560e6b85f5ee8f99239feb73e502cf8ad",
                          "typeString": "literal_string \"bob-password\""
                        },
                        "value": "bob-password"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_enum$_Result_$24874",
                          "typeString": "enum Result"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5724172cb55c6d710085e78e66fcf08560e6b85f5ee8f99239feb73e502cf8ad",
                          "typeString": "literal_string \"bob-password\""
                        }
                      ],
                      "expression": {
                        "id": 25661,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24992,
                        "src": "5639:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "revealVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24594,
                      "src": "5639:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_enum$_Result_$24874_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,enum Result,string memory) external"
                      }
                    },
                    "id": 25668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5639:52:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25669,
                  "nodeType": "ExpressionStatement",
                  "src": "5639:52:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25673,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25002,
                        "src": "5750:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25670,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24995,
                        "src": "5737:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25882",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25840,
                      "src": "5737:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5737:17:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25675,
                  "nodeType": "ExpressionStatement",
                  "src": "5737:17:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "48617368657320646f6e2774206d61746368",
                        "id": 25679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5784:20:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7e64a4e72c9f38a6141636a082d060b0b9c7c18a052f43e6039a3d01ab251b23",
                          "typeString": "literal_string \"Hashes don't match\""
                        },
                        "value": "Hashes don't match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7e64a4e72c9f38a6141636a082d060b0b9c7c18a052f43e6039a3d01ab251b23",
                          "typeString": "literal_string \"Hashes don't match\""
                        }
                      ],
                      "expression": {
                        "id": 25676,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24995,
                        "src": "5764:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25882",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25845,
                      "src": "5764:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 25680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5764:41:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25681,
                  "nodeType": "ExpressionStatement",
                  "src": "5764:41:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25685,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25368,
                        "src": "5829:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 25686,
                          "name": "Result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24874,
                          "src": "5841:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Result_$24874_$",
                            "typeString": "type(enum Result)"
                          }
                        },
                        "id": 25687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "NO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24873,
                        "src": "5841:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$24874",
                          "typeString": "enum Result"
                        }
                      },
                      {
                        "hexValue": "626f622d70617373776f7264",
                        "id": 25688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5852:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5724172cb55c6d710085e78e66fcf08560e6b85f5ee8f99239feb73e502cf8ad",
                          "typeString": "literal_string \"bob-password\""
                        },
                        "value": "bob-password"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_enum$_Result_$24874",
                          "typeString": "enum Result"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5724172cb55c6d710085e78e66fcf08560e6b85f5ee8f99239feb73e502cf8ad",
                          "typeString": "literal_string \"bob-password\""
                        }
                      ],
                      "expression": {
                        "id": 25682,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24992,
                        "src": "5815:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "revealVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24594,
                      "src": "5815:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_enum$_Result_$24874_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,enum Result,string memory) external"
                      }
                    },
                    "id": 25689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5815:52:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25690,
                  "nodeType": "ExpressionStatement",
                  "src": "5815:52:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25694,
                        "name": "john",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25004,
                        "src": "5891:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25691,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24995,
                        "src": "5878:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25882",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25840,
                      "src": "5878:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5878:18:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25696,
                  "nodeType": "ExpressionStatement",
                  "src": "5878:18:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25700,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25368,
                        "src": "5920:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 25701,
                          "name": "Result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24874,
                          "src": "5932:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Result_$24874_$",
                            "typeString": "type(enum Result)"
                          }
                        },
                        "id": 25702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "NO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24873,
                        "src": "5932:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$24874",
                          "typeString": "enum Result"
                        }
                      },
                      {
                        "hexValue": "6a6f686e2d70617373776f7264",
                        "id": 25703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5943:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0294c98ce2ca626561061d6fd47382fd31694d9a2da2483933b2d7760632bda5",
                          "typeString": "literal_string \"john-password\""
                        },
                        "value": "john-password"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_enum$_Result_$24874",
                          "typeString": "enum Result"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0294c98ce2ca626561061d6fd47382fd31694d9a2da2483933b2d7760632bda5",
                          "typeString": "literal_string \"john-password\""
                        }
                      ],
                      "expression": {
                        "id": 25697,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24992,
                        "src": "5906:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "revealVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24594,
                      "src": "5906:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_enum$_Result_$24874_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,enum Result,string memory) external"
                      }
                    },
                    "id": 25704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5906:53:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25705,
                  "nodeType": "ExpressionStatement",
                  "src": "5906:53:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25709,
                        "name": "kyle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25006,
                        "src": "5982:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25706,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24995,
                        "src": "5969:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25882",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25840,
                      "src": "5969:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5969:18:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25711,
                  "nodeType": "ExpressionStatement",
                  "src": "5969:18:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25715,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25368,
                        "src": "6011:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 25716,
                          "name": "Result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24874,
                          "src": "6023:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Result_$24874_$",
                            "typeString": "type(enum Result)"
                          }
                        },
                        "id": 25717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "NO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24873,
                        "src": "6023:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$24874",
                          "typeString": "enum Result"
                        }
                      },
                      {
                        "hexValue": "6b796c652d70617373776f7264",
                        "id": 25718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6034:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f0184c7a86648a3ff18c4d2b1d2f9e8cff831d8dee128b5782079d72a1cfb75e",
                          "typeString": "literal_string \"kyle-password\""
                        },
                        "value": "kyle-password"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_enum$_Result_$24874",
                          "typeString": "enum Result"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f0184c7a86648a3ff18c4d2b1d2f9e8cff831d8dee128b5782079d72a1cfb75e",
                          "typeString": "literal_string \"kyle-password\""
                        }
                      ],
                      "expression": {
                        "id": 25712,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24992,
                        "src": "5997:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "revealVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24594,
                      "src": "5997:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_enum$_Result_$24874_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,enum Result,string memory) external"
                      }
                    },
                    "id": 25719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5997:53:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25720,
                  "nodeType": "ExpressionStatement",
                  "src": "5997:53:19"
                },
                {
                  "expression": {
                    "id": 25726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25721,
                      "name": "vote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25607,
                      "src": "6061:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vote_$24900_memory_ptr",
                        "typeString": "struct Vote memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25724,
                          "name": "questionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25368,
                          "src": "6091:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 25722,
                          "name": "oo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24992,
                          "src": "6068:2:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                            "typeString": "contract OptimisticOracle"
                          }
                        },
                        "id": 25723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getVoteByQuestionId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24800,
                        "src": "6068:22:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Vote_$24900_memory_ptr_$",
                          "typeString": "function (bytes32) view external returns (struct Vote memory)"
                        }
                      },
                      "id": 25725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6068:34:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vote_$24900_memory_ptr",
                        "typeString": "struct Vote memory"
                      }
                    },
                    "src": "6061:41:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vote_$24900_memory_ptr",
                      "typeString": "struct Vote memory"
                    }
                  },
                  "id": 25727,
                  "nodeType": "ExpressionStatement",
                  "src": "6061:41:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25729,
                          "name": "vote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25607,
                          "src": "6121:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vote_$24900_memory_ptr",
                            "typeString": "struct Vote memory"
                          }
                        },
                        "id": 25730,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "yesCount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24891,
                        "src": "6121:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 25731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6136:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 25728,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "6112:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6112:26:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25733,
                  "nodeType": "ExpressionStatement",
                  "src": "6112:26:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25735,
                          "name": "vote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25607,
                          "src": "6157:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vote_$24900_memory_ptr",
                            "typeString": "struct Vote memory"
                          }
                        },
                        "id": 25736,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "noCount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24893,
                        "src": "6157:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 25737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6171:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 25734,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "6148:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6148:25:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25739,
                  "nodeType": "ExpressionStatement",
                  "src": "6148:25:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 25743,
                              "name": "oo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24992,
                              "src": "6221:2:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                                "typeString": "contract OptimisticOracle"
                              }
                            },
                            "id": 25744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "VOTING_PERIOD",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24125,
                            "src": "6221:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 25745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6221:18:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31303031",
                          "id": 25746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6242:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1001_by_1",
                            "typeString": "int_const 1001"
                          },
                          "value": "1001"
                        },
                        "src": "6221:25:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25740,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24995,
                        "src": "6209:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25882",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25855,
                      "src": "6209:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 25748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6209:38:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25749,
                  "nodeType": "ExpressionStatement",
                  "src": "6209:38:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25753,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25368,
                        "src": "6273:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25750,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24992,
                        "src": "6257:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "finalizeVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24761,
                      "src": "6257:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 25754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6257:27:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25755,
                  "nodeType": "ExpressionStatement",
                  "src": "6257:27:19"
                },
                {
                  "expression": {
                    "id": 25761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25756,
                      "name": "question",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25378,
                      "src": "6294:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$24915_memory_ptr",
                        "typeString": "struct Question memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25759,
                          "name": "questionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25368,
                          "src": "6324:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 25757,
                          "name": "oo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24992,
                          "src": "6305:2:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracle_$24868",
                            "typeString": "contract OptimisticOracle"
                          }
                        },
                        "id": 25758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getQuestionById",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24774,
                        "src": "6305:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Question_$24915_memory_ptr_$",
                          "typeString": "function (bytes32) view external returns (struct Question memory)"
                        }
                      },
                      "id": 25760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6305:30:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$24915_memory_ptr",
                        "typeString": "struct Question memory"
                      }
                    },
                    "src": "6294:41:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$24915_memory_ptr",
                      "typeString": "struct Question memory"
                    }
                  },
                  "id": 25762,
                  "nodeType": "ExpressionStatement",
                  "src": "6294:41:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25766,
                              "name": "question",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25378,
                              "src": "6362:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Question_$24915_memory_ptr",
                                "typeString": "struct Question memory"
                              }
                            },
                            "id": 25767,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stage",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24911,
                            "src": "6362:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Stage_$24879",
                              "typeString": "enum Stage"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Stage_$24879",
                              "typeString": "enum Stage"
                            }
                          ],
                          "id": 25765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6354:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25764,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "6354:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6354:23:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25771,
                              "name": "Stage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24879,
                              "src": "6387:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Stage_$24879_$",
                                "typeString": "type(enum Stage)"
                              }
                            },
                            "id": 25772,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "FINALIZED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24878,
                            "src": "6387:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Stage_$24879",
                              "typeString": "enum Stage"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Stage_$24879",
                              "typeString": "enum Stage"
                            }
                          ],
                          "id": 25770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6379:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25769,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "6379:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6379:24:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25763,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "6345:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6345:59:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25775,
                  "nodeType": "ExpressionStatement",
                  "src": "6345:59:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25779,
                              "name": "question",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25378,
                              "src": "6431:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Question_$24915_memory_ptr",
                                "typeString": "struct Question memory"
                              }
                            },
                            "id": 25780,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "result",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24914,
                            "src": "6431:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24874",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24874",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6423:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25777,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "6423:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6423:24:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25784,
                              "name": "Result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24874,
                              "src": "6457:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Result_$24874_$",
                                "typeString": "type(enum Result)"
                              }
                            },
                            "id": 25785,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "NO",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24873,
                            "src": "6457:9:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24874",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24874",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6449:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25782,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "6449:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6449:18:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25776,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "6414:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6414:54:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25788,
                  "nodeType": "ExpressionStatement",
                  "src": "6414:54:19"
                },
                {
                  "assignments": [
                    25790
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25790,
                      "mutability": "mutable",
                      "name": "bobEndingBalance",
                      "nameLocation": "6487:16:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25820,
                      "src": "6479:24:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25789,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6479:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25795,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25793,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25002,
                        "src": "6521:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25791,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24998,
                        "src": "6506:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25910",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 25792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23425,
                      "src": "6506:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 25794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6506:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6479:46:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25797,
                        "name": "bobEndingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25790,
                        "src": "6544:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25798,
                          "name": "bobInitialBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25449,
                          "src": "6562:17:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 25799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6582:8:19",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        "src": "6562:28:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25796,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "6535:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6535:56:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25802,
                  "nodeType": "ExpressionStatement",
                  "src": "6535:56:19"
                },
                {
                  "assignments": [
                    25804
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25804,
                      "mutability": "mutable",
                      "name": "endingBalance",
                      "nameLocation": "6610:13:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25820,
                      "src": "6602:21:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25803,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6602:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25812,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25809,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6649:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$25826",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$25826",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          ],
                          "id": 25808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6641:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25807,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6641:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6641:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25805,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24998,
                        "src": "6626:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25910",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 25806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23425,
                      "src": "6626:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 25811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6626:29:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6602:53:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25814,
                        "name": "endingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25804,
                        "src": "6674:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25815,
                          "name": "initialBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25397,
                          "src": "6689:14:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 25816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6706:8:19",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        "src": "6689:25:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25813,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "6665:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6665:50:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25819,
                  "nodeType": "ExpressionStatement",
                  "src": "6665:50:19"
                }
              ]
            },
            "functionSelector": "74b9983a",
            "id": 25821,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testQuestionSadPath",
            "nameLocation": "3020:19:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3039:2:19"
            },
            "returnParameters": {
              "id": 25358,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3049:0:19"
            },
            "scope": 25826,
            "src": "3011:3711:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 25824,
              "nodeType": "Block",
              "src": "6766:2:19",
              "statements": []
            },
            "functionSelector": "6286ffd9",
            "id": 25825,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCannotVoteTwice",
            "nameLocation": "6737:19:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6756:2:19"
            },
            "returnParameters": {
              "id": 25823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6766:0:19"
            },
            "scope": 25826,
            "src": "6728:40:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 25834,
        "src": "443:6327:19",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25827,
              "name": "ERC1155Holder",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23292,
              "src": "6798:13:19"
            },
            "id": 25828,
            "nodeType": "InheritanceSpecifier",
            "src": "6798:13:19"
          }
        ],
        "canonicalName": "TokenReceiver",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 25833,
        "linearizedBaseContracts": [
          25833,
          23292,
          23326,
          23241,
          24062,
          24074
        ],
        "name": "TokenReceiver",
        "nameLocation": "6781:13:19",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 25831,
              "nodeType": "Block",
              "src": "6845:2:19",
              "statements": []
            },
            "id": 25832,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25829,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6825:2:19"
            },
            "returnParameters": {
              "id": 25830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6845:0:19"
            },
            "scope": 25833,
            "src": "6818:29:19",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 25834,
        "src": "6772:77:19",
        "usedErrors": []
      }
    ],
    "src": "39:6811:19"
  }
}