{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testQuestionHappyPath",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testQuestionSadPath",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "437:4810:19:-:0;;;1572:26:0;;;-1:-1:-1;;170:28:1;;;;;437:4810:19;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620000875760003560e01c8063ba414fa61162000062578063ba414fa614620000db578063e3f9082814620000f6578063f8ccbf471462000100578063fa7626d4146200011457600080fd5b80630a9254e4146200008c5780633a768463146200009857806374b9983a14620000d1575b600080fd5b6200009662000122565b005b620000b4737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6200009662000729565b620000e56200153b565b6040519015158152602001620000c8565b6200009662001670565b600054620000e59062010000900460ff1681565b600054620000e59060ff1681565b600980546001600160a01b031916737109709ecfa91a80626ff3989d68f67f5b1dd12d179055604051620001569062002127565b604051809103906000f08015801562000173573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b03929092169182179055604051620001a19062002135565b6001600160a01b039091168152602001604051809103906000f080158015620001ce573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b0392909216919091179055604051620001fd9062002143565b604051809103906000f0801580156200021a573d6000803e3d6000fd5b50600b80546001600160a01b0319166001600160a01b0392909216919091179055604051620002499062002143565b604051809103906000f08015801562000266573d6000803e3d6000fd5b50600c80546001600160a01b0319166001600160a01b0392909216919091179055604051620002959062002143565b604051809103906000f080158015620002b2573d6000803e3d6000fd5b50600d80546001600160a01b0319166001600160a01b0392909216919091179055604051620002e19062002143565b604051809103906000f080158015620002fe573d6000803e3d6000fd5b50600e80546001600160a01b0319166001600160a01b03928316179055600b54604051911690600090683635c9adc5dea000009082818181858883f1935050505015801562000351573d6000803e3d6000fd5b50600c546040516001600160a01b0390911690600090683635c9adc5dea000009082818181858883f1935050505015801562000391573d6000803e3d6000fd5b50600a546040516340c10f1960e01b815230600482015269d3c21bcecceda100000060248201526001600160a01b03909116906340c10f1990604401600060405180830381600087803b158015620003e857600080fd5b505af1158015620003fd573d6000803e3d6000fd5b5050600a54600b546040516340c10f1960e01b81526001600160a01b03918216600482015269d3c21bcecceda10000006024820152911692506340c10f199150604401600060405180830381600087803b1580156200045b57600080fd5b505af115801562000470573d6000803e3d6000fd5b5050600a54600c546040516340c10f1960e01b81526001600160a01b03918216600482015269d3c21bcecceda10000006024820152911692506340c10f199150604401600060405180830381600087803b158015620004ce57600080fd5b505af1158015620004e3573d6000803e3d6000fd5b5050600a5460085460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116925063095ea7b391506044016020604051808303816000875af11580156200053e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000564919062002151565b50600954600b5460405163ca669fa760e01b81526001600160a01b03918216600482015291169063ca669fa790602401600060405180830381600087803b158015620005af57600080fd5b505af1158015620005c4573d6000803e3d6000fd5b5050600a5460085460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116925063095ea7b391506044016020604051808303816000875af11580156200061f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000645919062002151565b50600954600c5460405163ca669fa760e01b81526001600160a01b03918216600482015291169063ca669fa790602401600060405180830381600087803b1580156200069057600080fd5b505af1158015620006a5573d6000803e3d6000fd5b5050600a5460085460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116925063095ea7b391506044016020604051808303816000875af115801562000700573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000726919062002151565b50565b600854604051630516fa9160e41b81526001600160a01b039091169063516fa910906200075d906103e8906004016200217c565b600060405180830381600087803b1580156200077857600080fd5b505af11580156200078d573d6000803e3d6000fd5b505060085460405163f23a033b60e01b8152600093506001600160a01b03909116915063f23a033b90620007c8906103e8906004016200217c565b602060405180830381865afa158015620007e6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200080c9190620021e8565b600854604051636342268360e11b8152600481018390529192506000916001600160a01b039091169063c6844d0690602401600060405180830381865afa1580156200085c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620008869190810190620023f2565b9050620008cd81600001516040518060400160405280601d81526020017f77696c6c20455448206265206f76657220316b20746f6d6f72726f773f00000081525062001de2565b6009546040516372eb5f8160e11b81526103e860048201526001600160a01b039091169063e5d6bf0290602401600060405180830381600087803b1580156200091557600080fd5b505af11580156200092a573d6000803e3d6000fd5b5050600a546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a0823190602401602060405180830381865afa1580156200097a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009a09190620021e8565b600854604051635d9032b960e01b81529192506001600160a01b031690635d9032b990620009d690869060019060040162002441565b600060405180830381600087803b158015620009f157600080fd5b505af115801562000a06573d6000803e3d6000fd5b5050600a546040516370a0823160e01b815230600482015262000a9b93508492506001600160a01b03909116906370a08231906024015b602060405180830381865afa15801562000a5b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a819190620021e8565b62000a9590678ac7230489e800006200248a565b62001f2f565b60085460405163c5be26a960e01b8152600481018590526000916001600160a01b03169063c5be26a990602401606060405180830381865afa15801562000ae6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b0c9190620024a5565b905062000b338160200151600281111562000b2b5762000b2b6200242b565b600162001f2f565b600a54600c546040516370a0823160e01b81526001600160a01b03918216600482015260009291909116906370a0823190602401602060405180830381865afa15801562000b85573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bab9190620021e8565b600954600c5460405163ca669fa760e01b81526001600160a01b039182166004820152929350169063ca669fa790602401600060405180830381600087803b15801562000bf757600080fd5b505af115801562000c0c573d6000803e3d6000fd5b5050600854604051636af97c0560e01b8152600481018990526001600160a01b039091169250636af97c059150602401600060405180830381600087803b15801562000c5757600080fd5b505af115801562000c6c573d6000803e3d6000fd5b5050600a54600c546040516370a0823160e01b81526001600160a01b03918216600482015262000cac94508593509116906370a082319060240162000a3d565b6009546008546040805163a5bbe22b60e01b815290516001600160a01b039384169363e5d6bf0293169163a5bbe22b9160048083019260209291908290030181865afa15801562000d01573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d279190620021e8565b62000d35906103e96200248a565b6040518263ffffffff1660e01b815260040162000d5491815260200190565b600060405180830381600087803b15801562000d6f57600080fd5b505af115801562000d84573d6000803e3d6000fd5b505060095460405163f28dceb360e01b815260206004820152602660248201527f50726f706f73616c207761732064697370757465642c2063616e6e6f742066696044820152656e616c697a6560d01b60648201526001600160a01b03909116925063f28dceb39150608401600060405180830381600087803b15801562000e0b57600080fd5b505af115801562000e20573d6000803e3d6000fd5b50506008546040516311f4368560e21b8152600481018990526001600160a01b0390911692506347d0da149150602401600060405180830381600087803b15801562000e6b57600080fd5b505af115801562000e80573d6000803e3d6000fd5b50506009546040516372eb5f8160e11b81526103e860048201526001600160a01b03909116925063e5d6bf029150602401600060405180830381600087803b15801562000ecc57600080fd5b505af115801562000ee1573d6000803e3d6000fd5b5050600954600b5460405163ca669fa760e01b81526001600160a01b0391821660048201529116925063ca669fa79150602401600060405180830381600087803b15801562000f2f57600080fd5b505af115801562000f44573d6000803e3d6000fd5b50506008546040516321f98a1560e01b81526001600160a01b0390911692506321f98a15915062000f7d90889060019060040162002441565b600060405180830381600087803b15801562000f9857600080fd5b505af115801562000fad573d6000803e3d6000fd5b5050600954600c5460405163ca669fa760e01b81526001600160a01b0391821660048201529116925063ca669fa79150602401600060405180830381600087803b15801562000ffb57600080fd5b505af115801562001010573d6000803e3d6000fd5b50506008546040516321f98a1560e01b81526001600160a01b0390911692506321f98a1591506200104990889060029060040162002441565b600060405180830381600087803b1580156200106457600080fd5b505af115801562001079573d6000803e3d6000fd5b5050600954600d5460405163ca669fa760e01b81526001600160a01b0391821660048201529116925063ca669fa79150602401600060405180830381600087803b158015620010c757600080fd5b505af1158015620010dc573d6000803e3d6000fd5b50506008546040516321f98a1560e01b81526001600160a01b0390911692506321f98a1591506200111590889060029060040162002441565b600060405180830381600087803b1580156200113057600080fd5b505af115801562001145573d6000803e3d6000fd5b5050600954600e5460405163ca669fa760e01b81526001600160a01b0391821660048201529116925063ca669fa79150602401600060405180830381600087803b1580156200119357600080fd5b505af1158015620011a8573d6000803e3d6000fd5b50506008546040516321f98a1560e01b81526001600160a01b0390911692506321f98a159150620011e190889060029060040162002441565b600060405180830381600087803b158015620011fc57600080fd5b505af115801562001211573d6000803e3d6000fd5b5050600954600854604080516358b086bf60e11b815290516001600160a01b03938416955063e5d6bf029450919092169163b1610d7e9160048083019260209291908290030181865afa1580156200126d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620012939190620021e8565b620012a1906103e96200248a565b6040518263ffffffff1660e01b8152600401620012c091815260200190565b600060405180830381600087803b158015620012db57600080fd5b505af1158015620012f0573d6000803e3d6000fd5b50506008546040516345baebad60e11b8152600481018990526001600160a01b039091169250638b75d75a9150602401600060405180830381600087803b1580156200133b57600080fd5b505af115801562001350573d6000803e3d6000fd5b5050600854604051636342268360e11b8152600481018990526001600160a01b03909116925063c6844d069150602401600060405180830381865afa1580156200139e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620013c89190810190620023f2565b9350620013ef84608001516003811115620013e757620013e76200242b565b600362001f2f565b620014148460a0015160028111156200140c576200140c6200242b565b600262001f2f565b600a54600c546040516370a0823160e01b81526001600160a01b03918216600482015260009291909116906370a0823190602401602060405180830381865afa15801562001466573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200148c9190620021e8565b9050620014a78162000a9584678ac7230489e800006200248a565b600a546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015620014f1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015179190620021e8565b9050620015328162000a95678ac7230489e800008862002522565b50505050505050565b60008054610100900460ff16156200155c5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156200166b5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091620015ed917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016200253c565b60408051601f198184030181529082905262001609916200256f565b6000604051808303816000865af19150503d806000811462001648576040519150601f19603f3d011682016040523d82523d6000602084013e6200164d565b606091505b509150508080602001905181019062001667919062002151565b9150505b919050565b600854604051630516fa9160e41b81526001600160a01b039091169063516fa91090620016a4906103e8906004016200217c565b600060405180830381600087803b158015620016bf57600080fd5b505af1158015620016d4573d6000803e3d6000fd5b505060085460405163f23a033b60e01b8152600093506001600160a01b03909116915063f23a033b906200170f906103e8906004016200217c565b602060405180830381865afa1580156200172d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620017539190620021e8565b600854604051636342268360e11b8152600481018390529192506000916001600160a01b039091169063c6844d0690602401600060405180830381865afa158015620017a3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620017cd9190810190620023f2565b90506200181481600001516040518060400160405280601d81526020017f77696c6c20455448206265206f76657220316b20746f6d6f72726f773f00000081525062001de2565b6009546040516372eb5f8160e11b81526103e860048201526001600160a01b039091169063e5d6bf0290602401600060405180830381600087803b1580156200185c57600080fd5b505af115801562001871573d6000803e3d6000fd5b5050600a546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a0823190602401602060405180830381865afa158015620018c1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620018e79190620021e8565b600854604051635d9032b960e01b81529192506001600160a01b031690635d9032b9906200191d90869060019060040162002441565b600060405180830381600087803b1580156200193857600080fd5b505af11580156200194d573d6000803e3d6000fd5b5050600a546040516370a0823160e01b81523060048201526200198993508492506001600160a01b03909116906370a082319060240162000a3d565b60085460405163c5be26a960e01b8152600481018590526000916001600160a01b03169063c5be26a990602401606060405180830381865afa158015620019d4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620019fa9190620024a5565b905062001a198160200151600281111562000b2b5762000b2b6200242b565b6009546008546040805163a5bbe22b60e01b815290516001600160a01b039384169363e5d6bf0293169163a5bbe22b9160048083019260209291908290030181865afa15801562001a6e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a949190620021e8565b62001aa2906103e96200248a565b6040518263ffffffff1660e01b815260040162001ac191815260200190565b600060405180830381600087803b15801562001adc57600080fd5b505af115801562001af1573d6000803e3d6000fd5b50506008546040516311f4368560e21b8152600481018890526001600160a01b0390911692506347d0da149150602401600060405180830381600087803b15801562001b3c57600080fd5b505af115801562001b51573d6000803e3d6000fd5b5050600854604051636342268360e11b8152600481018890526001600160a01b03909116925063c6844d069150602401600060405180830381865afa15801562001b9f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001bc99190810190620023f2565b925062001be883608001516003811115620013e757620013e76200242b565b62001c1e8360a00151600281111562001c055762001c056200242b565b8260200151600281111562000a955762000a956200242b565b6008546040805163157c99c760e11b815290516000926001600160a01b031691632af9338e91600480830192869291908290030181865afa15801562001c68573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001c9291908101906200258d565b600854604051636342268360e11b8152600481018890529192506001600160a01b03169063c6844d0690602401600060405180830381865afa15801562001cdd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001d079190810190620023f2565b935062001d5c8160008151811062001d235762001d236200265e565b602002602001015160a00151600281111562001d435762001d436200242b565b8560a00151600281111562000a955762000a956200242b565b600a546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801562001da6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001dcc9190620021e8565b905062001dda818562001f2f565b505050505050565b8060405160200162001df591906200256f565b604051602081830303815290604052805190602001208260405160200162001e1e91906200256f565b604051602081830303815290604052805190602001201462001f2b577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162001ea79060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838160405162001ee09190620026a2565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838260405162001f199190620026e1565b60405180910390a162001f2b62002014565b5050565b80821462001f2b577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162001fa29060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405162001fdb91906200270c565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162001f19919062002745565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620021165760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052620020b192916020016200253c565b60408051601f1981840301815290829052620020cd916200256f565b6000604051808303816000865af19150503d80600081146200210c576040519150601f19603f3d011682016040523d82523d6000602084013e62002111565b606091505b505050505b6000805461ff001916610100179055565b610a95806200277183390190565b611c70806200320683390190565b61040a8062004e7683390190565b6000602082840312156200216457600080fd5b815180151581146200217557600080fd5b9392505050565b6060808252601d908201527f77696c6c20455448206265206f76657220316b20746f6d6f72726f773f000000608082015260a0602082018190526015908201527468747470733a2f2f636f696e6765636b6f2e636f6d60581b60c0820152604081019190915260e00190565b600060208284031215620021fb57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156200223e576200223e62002202565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171562002270576200227062002202565b604052919050565b60005b83811015620022955781810151838201526020016200227b565b83811115620022a5576000848401525b50505050565b600082601f830112620022bd57600080fd5b815167ffffffffffffffff811115620022da57620022da62002202565b620022ef601f8201601f191660200162002244565b8181528460208386010111156200230557600080fd5b6200231882602083016020870162002278565b949350505050565b8051600481106200166b57600080fd5b8051600381106200166b57600080fd5b600060c082840312156200235357600080fd5b6200235d62002218565b9050815167ffffffffffffffff808211156200237857600080fd5b6200238685838601620022ab565b835260208401519150808211156200239d57600080fd5b50620023ac84828501620022ab565b6020830152506040820151604082015260608201516060820152620023d46080830162002320565b6080820152620023e760a0830162002330565b60a082015292915050565b6000602082840312156200240557600080fd5b815167ffffffffffffffff8111156200241d57600080fd5b620023188482850162002340565b634e487b7160e01b600052602160045260246000fd5b82815260408101600383106200246757634e487b7160e01b600052602160045260246000fd5b8260208301529392505050565b634e487b7160e01b600052601160045260246000fd5b60008219821115620024a057620024a062002474565b500190565b600060608284031215620024b857600080fd5b6040516060810181811067ffffffffffffffff82111715620024de57620024de62002202565b60405282516001600160a01b0381168114620024f957600080fd5b8152620025096020840162002330565b6020820152604083015160408201528091505092915050565b60008282101562002537576200253762002474565b500390565b6001600160e01b03198316815281516000906200256181600485016020870162002278565b919091016004019392505050565b600082516200258381846020870162002278565b9190910192915050565b60006020808385031215620025a157600080fd5b825167ffffffffffffffff80821115620025ba57600080fd5b818501915085601f830112620025cf57600080fd5b815181811115620025e457620025e462002202565b8060051b620025f585820162002244565b91825283810185019185810190898411156200261057600080fd5b86860192505b838310156200265157825185811115620026305760008081fd5b620026408b89838a010162002340565b835250918601919086019062002616565b9998505050505050505050565b634e487b7160e01b600052603260045260246000fd5b600081518084526200268e81602086016020860162002278565b601f01601f19169290920160200192915050565b604081526000620026cd60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b828103602084015262002318818562002674565b604081526000620026cd60408301600a815269080808081058dd1d585b60b21b602082015260400190565b6040815260006200273760408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b6040815260006200273760408301600a815269080808081058dd1d585b60b21b60208201526040019056fe608060405234801561001057600080fd5b506040805180820182526004808252634f50544960e01b60208084018281528551808701909652928552840152815191929161004e9160039161006a565b50805161006290600490602084019061006a565b50505061013d565b82805461007690610103565b90600052602060002090601f01602090048101928261009857600085556100de565b82601f106100b157805160ff19168380011785556100de565b828001600101855582156100de579182015b828111156100de5782518255916020019190600101906100c3565b506100ea9291506100ee565b5090565b5b808211156100ea57600081556001016100ef565b600181811c9082168061011757607f821691505b60208210810361013757634e487b7160e01b600052602260045260246000fd5b50919050565b6109498061014c6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461014157806370a082311461015657806395d89b411461017f578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101c0565b6040516100ce9190610787565b60405180910390f35b6100ea6100e53660046107f8565b610252565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a366004610822565b61026a565b604051601281526020016100ce565b6100ea61013c3660046107f8565b61028e565b61015461014f3660046107f8565b6102b0565b005b6100fe61016436600461085e565b6001600160a01b031660009081526020819052604090205490565b6100c16102be565b6100ea6101953660046107f8565b6102cd565b6100ea6101a83660046107f8565b61034d565b6100fe6101bb366004610880565b61035b565b6060600380546101cf906108b3565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb906108b3565b80156102485780601f1061021d57610100808354040283529160200191610248565b820191906000526020600020905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b600033610260818585610386565b5060019392505050565b6000336102788582856104aa565b610283858585610524565b506001949350505050565b6000336102608185856102a1838361035b565b6102ab91906108ed565b610386565b6102ba82826106c8565b5050565b6060600480546101cf906108b3565b600033816102db828661035b565b9050838110156103405760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102838286868403610386565b600033610260818585610524565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103e85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610337565b6001600160a01b0382166104495760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610337565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104b6848461035b565b9050600019811461051e57818110156105115760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610337565b61051e8484848403610386565b50505050565b6001600160a01b0383166105885760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610337565b6001600160a01b0382166105ea5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610337565b6001600160a01b038316600090815260208190526040902054818110156106625760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610337565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361051e565b6001600160a01b03821661071e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610337565b806002600082825461073091906108ed565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b818110156107b457858101830151858201604001528201610798565b818111156107c6576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146107f357600080fd5b919050565b6000806040838503121561080b57600080fd5b610814836107dc565b946020939093013593505050565b60008060006060848603121561083757600080fd5b610840846107dc565b925061084e602085016107dc565b9150604084013590509250925092565b60006020828403121561087057600080fd5b610879826107dc565b9392505050565b6000806040838503121561089357600080fd5b61089c836107dc565b91506108aa602084016107dc565b90509250929050565b600181811c908216806108c757607f821691505b6020821081036108e757634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561090e57634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212202befb42b7eb71f065c73653187486c60b319381473d4b3e2f05d98b55a62737064736f6c634300080d0033608060405234801561001057600080fd5b50604051611c70380380611c7083398101604081905261002f9161006b565b600580546001600160a01b0319166001600160a01b0392909216919091179055678ac7230489e80000600655610258600781905560085561009b565b60006020828403121561007d57600080fd5b81516001600160a01b038116811461009457600080fd5b9392505050565b611bc6806100aa6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063b1610d7e116100ad578063df6d798b11610071578063df6d798b1461029d578063e5a6b10f146102e9578063ed3dccaa14610314578063f03477831461033d578063f23a033b1461035057600080fd5b8063b1610d7e146101f4578063bcacc70a146101fd578063bfafb30e14610206578063c5be26a91461025d578063c6844d061461027d57600080fd5b8063516fa910116100f4578063516fa910146101915780635d9032b9146101a45780636af97c05146101b75780638b75d75a146101ca578063a5bbe22b146101dd57600080fd5b806321f98a15146101265780632af9338e1461013b578063369431ef1461015957806347d0da141461017e575b600080fd5b6101396101343660046116b4565b610363565b005b610143610479565b60405161015091906117e1565b60405180910390f35b61016c610167366004611843565b610727565b6040516101509695949392919061185c565b61013961018c366004611843565b610873565b61013961019f366004611958565b610a77565b6101396101b23660046116b4565b610bb5565b6101396101c5366004611843565b610da5565b6101396101d8366004611843565b610f40565b6101e660075481565b604051908152602001610150565b6101e660085481565b6101e660065481565b61023d610214366004611843565b600360208190526000918252604090912080546001820154600283015492909301549092919084565b604080519485526020850193909352918301526060820152608001610150565b61027061026b366004611843565b6112d6565b60405161015091906119c5565b61029061028b366004611843565b611362565b60405161015091906119f8565b6102da6102ab366004611843565b600160208190526000918252604090912080549101546001600160a01b03821691600160a01b900460ff169083565b60405161015093929190611a12565b6005546102fc906001600160a01b031681565b6040516001600160a01b039091168152602001610150565b6102fc610322366004611843565b6002602052600090815260409020546001600160a01b031681565b6101e661034b366004611843565b61155b565b6101e661035e366004611958565b61157c565b600082815260036020819052604082209081015490910361039f5760405162461bcd60e51b815260040161039690611a3d565b60405180910390fd5b806003015442106103f25760405162461bcd60e51b815260206004820152601760248201527f566f74696e6720706572696f642068617320656e6465640000000000000000006044820152606401610396565b600082600281111561040657610406611735565b0361042b5760018160000160008282546104209190611a9e565b909155506104749050565b600182600281111561043f5761043f611735565b036104595760018160010160008282546104209190611a9e565b600181600201600082825461046e9190611a9e565b90915550505b505050565b60045460609060009067ffffffffffffffff81111561049a5761049a6118b5565b60405190808252806020026020018201604052801561050357816020015b6104f06040805160c0810182526060808252602082018190526000928201839052810182905290608082019081526020016000905290565b8152602001906001900390816104b85790505b50905060005b600454811015610721576000806004838154811061052957610529611ab6565b906000526020600020015481526020019081526020016000206040518060c001604052908160008201805461055d90611acc565b80601f016020809104026020016040519081016040528092919081815260200182805461058990611acc565b80156105d65780601f106105ab576101008083540402835291602001916105d6565b820191906000526020600020905b8154815290600101906020018083116105b957829003601f168201915b505050505081526020016001820180546105ef90611acc565b80601f016020809104026020016040519081016040528092919081815260200182805461061b90611acc565b80156106685780601f1061063d57610100808354040283529160200191610668565b820191906000526020600020905b81548152906001019060200180831161064b57829003601f168201915b5050509183525050600282015460208201526003808301546040830152600483015460609092019160ff16908111156106a3576106a3611735565b60038111156106b4576106b4611735565b81526020016004820160019054906101000a900460ff1660028111156106dc576106dc611735565b60028111156106ed576106ed611735565b8152505082828151811061070357610703611ab6565b6020026020010181905250808061071990611b00565b915050610509565b50919050565b60006020819052908152604090208054819061074290611acc565b80601f016020809104026020016040519081016040528092919081815260200182805461076e90611acc565b80156107bb5780601f10610790576101008083540402835291602001916107bb565b820191906000526020600020905b81548152906001019060200180831161079e57829003601f168201915b5050505050908060010180546107d090611acc565b80601f01602080910402602001604051908101604052809291908181526020018280546107fc90611acc565b80156108495780601f1061081e57610100808354040283529160200191610849565b820191906000526020600020905b81548152906001019060200180831161082c57829003601f168201915b50505050600283015460038401546004909401549293909290915060ff8082169161010090041686565b600081815260016020908152604080832081516060810190925280546001600160a01b03811683529192909190830190600160a01b900460ff1660028111156108be576108be611735565b60028111156108cf576108cf611735565b8152602001600182015481525050905060075481604001516108f19190611a9e565b42116109375760405162461bcd60e51b8152602060048201526015602482015274546f6f206561726c7920746f2066696e616c697a6560581b6044820152606401610396565b6000828152600260205260409020546001600160a01b031680156109ac5760405162461bcd60e51b815260206004820152602660248201527f50726f706f73616c207761732064697370757465642c2063616e6e6f742066696044820152656e616c697a6560d01b6064820152608401610396565b600083815260208181526040909120600481018054600360ff1982168117835593860151929361ffff19909116176101008360028111156109ef576109ef611735565b0217905550600554835160065460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291169063a9059cbb906044016020604051808303816000875af1158015610a4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a709190611b19565b5050505050565b6000610a8484848461157c565b905060006040518060c0016040528086815260200185815260200184815260200183815260200160006003811115610abe57610abe611735565b8152602001600090526000838152602081815260409091208251805193945084939192610af09284929091019061161b565b506020828101518051610b09926001850192019061161b565b50604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690836003811115610b4857610b48611735565b021790555060a082015160048201805461ff001916610100836002811115610b7257610b72611735565b021790555050600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01929092555050505050565b60008281526020819052604090206002810154421015610c0b5760405162461bcd60e51b81526020600482015260116024820152704e6f74207965742061742065787069727960781b6044820152606401610396565b6000600482015460ff166003811115610c2657610c26611735565b14610c735760405162461bcd60e51b815260206004820181905260248201527f5175657374696f6e20616c7265616479206861766520612070726f706f73616c6044820152606401610396565b6040518060600160405280336001600160a01b03168152602001836002811115610c9f57610c9f611735565b81524260209182015260008581526001825260409020825181546001600160a01b039091166001600160a01b031982168117835592840151919283916001600160a81b03191617600160a01b836002811115610cfd57610cfd611735565b02179055506040919091015160019182015560048201805460ff1916828002179055506005546006546040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610d7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9f9190611b19565b50505050565b60008181526020819052604090206001600482015460ff166003811115610dce57610dce611735565b14610e1b5760405162461bcd60e51b815260206004820152601b60248201527f5175657374696f6e2063616e6e6f7420626520646973707574656400000000006044820152606401610396565b6000828152600160208190526040909120600754918101549091610e3e91611a9e565b4210610e825760405162461bcd60e51b8152602060048201526013602482015272746f6f206c61746520746f206469737075746560681b6044820152606401610396565b6004828101805460ff19166002908117909155600085815260209190915260409081902080546001600160a01b0319163390811790915560055460065492516323b872dd60e01b81529384019190915230602484015260448301919091526001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610f12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f369190611b19565b50610474836115b2565b60008181526003602081815260408084208151608081018352815481526001820154938101939093526002810154918301919091529091015460608201819052909103610f9f5760405162461bcd60e51b815260040161039690611a3d565b80606001514211610ff25760405162461bcd60e51b815260206004820152601b60248201527f566f74696e6720706572696f6420686173206e6f7420656e64656400000000006044820152606401610396565b600082815260016020908152604080832081516060810190925280546001600160a01b03811683529192909190830190600160a01b900460ff16600281111561103d5761103d611735565b600281111561104e5761104e611735565b8152600191909101546020918201526000858152600282526040808220548284529181902090860151928601519394506001600160a01b0390911692909110801561109d575083516020850151115b156111915760048101805461ff00191661010017905560015b836020015160028111156110cc576110cc611735565b0361116c5760055483516006546001600160a01b039092169163a9059cbb91906110f7906002611b3b565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611142573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111669190611b19565b506112c2565b6005546006546001600160a01b039091169063a9059cbb9084906110f7906002611b3b565b836040015184602001511080156111ac575083516040850151115b156111c95760048101805461ff00191661020017905560026110b6565b600554835160065460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291169063a9059cbb906044016020604051808303816000875af1158015611221573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112459190611b19565b5060055460065460405163a9059cbb60e01b81526001600160a01b038581166004830152602482019290925291169063a9059cbb906044016020604051808303816000875af115801561129c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c09190611b19565b505b600401805460ff1916600317905550505050565b604080516060810182526000808252602082018190529181019190915260008281526001602090815260409182902082516060810190935280546001600160a01b03811684529091830190600160a01b900460ff16600281111561133c5761133c611735565b600281111561134d5761134d611735565b81526020016001820154815250509050919050565b61139a6040805160c0810182526060808252602082018190526000928201839052810182905290608082019081526020016000905290565b60008281526020819052604090819020815160c081019092528054829082906113c290611acc565b80601f01602080910402602001604051908101604052809291908181526020018280546113ee90611acc565b801561143b5780601f106114105761010080835404028352916020019161143b565b820191906000526020600020905b81548152906001019060200180831161141e57829003601f168201915b5050505050815260200160018201805461145490611acc565b80601f016020809104026020016040519081016040528092919081815260200182805461148090611acc565b80156114cd5780601f106114a2576101008083540402835291602001916114cd565b820191906000526020600020905b8154815290600101906020018083116114b057829003601f168201915b5050509183525050600282015460208201526003808301546040830152600483015460609092019160ff169081111561150857611508611735565b600381111561151957611519611735565b81526020016004820160019054906101000a900460ff16600281111561154157611541611735565b600281111561155257611552611735565b90525092915050565b6004818154811061156b57600080fd5b600091825260209091200154905081565b600083838360405160200161159393929190611b5a565b6040516020818303038152906040528051906020012090509392505050565b60006040518060800160405280600081526020016000815260200160008152602001600854426115e29190611a9e565b90526000928352600360208181526040948590208351815590830151600182015593820151600285015560609091015192019190915550565b82805461162790611acc565b90600052602060002090601f016020900481019282611649576000855561168f565b82601f1061166257805160ff191683800117855561168f565b8280016001018555821561168f579182015b8281111561168f578251825591602001919060010190611674565b5061169b92915061169f565b5090565b5b8082111561169b57600081556001016116a0565b600080604083850312156116c757600080fd5b823591506020830135600381106116dd57600080fd5b809150509250929050565b6000815180845260005b8181101561170e576020818501810151868301820152016116f2565b81811115611720576000602083870101525b50601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b6004811061175b5761175b611735565b9052565b6003811061175b5761175b611735565b6000815160c0845261178460c08501826116e8565b90506020830151848203602086015261179d82826116e8565b915050604083015160408501526060830151606085015260808301516117c6608086018261174b565b5060a08301516117d960a086018261175f565b509392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561183657603f1988860301845261182485835161176f565b94509285019290850190600101611808565b5092979650505050505050565b60006020828403121561185557600080fd5b5035919050565b60c08152600061186f60c08301896116e8565b828103602084015261188181896116e8565b91505085604083015284606083015261189d608083018561174b565b6118aa60a083018461175f565b979650505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126118dc57600080fd5b813567ffffffffffffffff808211156118f7576118f76118b5565b604051601f8301601f19908116603f0116810190828211818310171561191f5761191f6118b5565b8160405283815286602085880101111561193857600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561196d57600080fd5b833567ffffffffffffffff8082111561198557600080fd5b611991878388016118cb565b945060208601359150808211156119a757600080fd5b506119b4868287016118cb565b925050604084013590509250925092565b81516001600160a01b0316815260208083015160608301916119e99084018261175f565b50604092830151919092015290565b602081526000611a0b602083018461176f565b9392505050565b6001600160a01b038416815260608101611a2f602083018561175f565b826040830152949350505050565b6020808252602b908201527f5468657265206973206e6f206f6e676f696e6720766f746520666f722074686960408201526a399038bab2b9ba34b7b71760a91b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008219821115611ab157611ab1611a88565b500190565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680611ae057607f821691505b60208210810361072157634e487b7160e01b600052602260045260246000fd5b600060018201611b1257611b12611a88565b5060010190565b600060208284031215611b2b57600080fd5b81518015158114611a0b57600080fd5b6000816000190483118215151615611b5557611b55611a88565b500290565b606081526000611b6d60608301866116e8565b8281036020840152611b7f81866116e8565b91505082604083015294935050505056fea2646970667358221220a7429712424ae7992305dbac0e2c783a326279a056527bba9b62299ea76fdaa664736f6c634300080d0033608060405234801561001057600080fd5b506103ea806100206000396000f3fe6080604052600436106100385760003560e01c806301ffc9a714610044578063bc197c8114610079578063f23a6e61146100be57600080fd5b3661003f57005b600080fd5b34801561005057600080fd5b5061006461005f366004610121565b6100ea565b60405190151581526020015b60405180910390f35b34801561008557600080fd5b506100a56100943660046102a5565b63bc197c8160e01b95945050505050565b6040516001600160e01b03199091168152602001610070565b3480156100ca57600080fd5b506100a56100d936600461034f565b63f23a6e6160e01b95945050505050565b60006001600160e01b03198216630271189760e51b148061011b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006020828403121561013357600080fd5b81356001600160e01b03198116811461014b57600080fd5b9392505050565b80356001600160a01b038116811461016957600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156101ad576101ad61016e565b604052919050565b600082601f8301126101c657600080fd5b8135602067ffffffffffffffff8211156101e2576101e261016e565b8160051b6101f1828201610184565b928352848101820192828101908785111561020b57600080fd5b83870192505b8483101561022a57823582529183019190830190610211565b979650505050505050565b600082601f83011261024657600080fd5b813567ffffffffffffffff8111156102605761026061016e565b610273601f8201601f1916602001610184565b81815284602083860101111561028857600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156102bd57600080fd5b6102c686610152565b94506102d460208701610152565b9350604086013567ffffffffffffffff808211156102f157600080fd5b6102fd89838a016101b5565b9450606088013591508082111561031357600080fd5b61031f89838a016101b5565b9350608088013591508082111561033557600080fd5b5061034288828901610235565b9150509295509295909350565b600080600080600060a0868803121561036757600080fd5b61037086610152565b945061037e60208701610152565b93506040860135925060608601359150608086013567ffffffffffffffff8111156103a857600080fd5b6103428882890161023556fea26469706673582212206afd3c5a9b9b7c75eebd8ce7c783d46c1ca87db994dfe9025a521622c379353d64736f6c634300080d0033a2646970667358221220438ccd32a7c81b98ca08facc2eedd37410b660a39363b1dff59737910fdcca1d64736f6c634300080d0033",
    "sourceMap": "437:4810:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;681:774;;;:::i;:::-;;321:38:1;;250:64;321:38;;;;;-1:-1:-1;;;;;189:32:22;;;171:51;;159:2;144:18;321:38:1;;;;;;;;3005:2240:19;;;:::i;1819:584:0:-;;;:::i;:::-;;;398:14:22;;391:22;373:41;;361:2;346:18;1819:584:0;233:187:22;1461:1538:19;;;:::i;170:28:1:-;;;;;;;;;;;;1572:26:0;;;;;;;;;681:774:19;715:6;:33;;-1:-1:-1;;;;;;715:33:19;1671:64:0;715:33:19;;;765:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;758:4:19;:17;;-1:-1:-1;;;;;;758:17:19;-1:-1:-1;;;;;758:17:19;;;;;;;;;790:35;;;;;:::i;:::-;-1:-1:-1;;;;;189:32:22;;;171:51;;159:2;144:18;790:35:19;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;785:2:19;:40;;-1:-1:-1;;;;;;785:40:19;-1:-1:-1;;;;;785:40:19;;;;;;;;;;851:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;835:5:19;:36;;-1:-1:-1;;;;;;835:36:19;-1:-1:-1;;;;;835:36:19;;;;;;;;;;895:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;881:3:19;:34;;-1:-1:-1;;;;;;881:34:19;-1:-1:-1;;;;;881:34:19;;;;;;;;;;940:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;925:4:19;:35;;-1:-1:-1;;;;;;925:35:19;-1:-1:-1;;;;;925:35:19;;;;;;;;;;985:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;970:4:19;:35;;-1:-1:-1;;;;;;970:35:19;-1:-1:-1;;;;;970:35:19;;;;;;1023:5;;1015:35;;1023:5;;;-1:-1:-1;;1039:10:19;;-1:-1:-1;1015:35:19;-1:-1:-1;1015:35:19;1039:10;1023:5;-1:-1:-1;1015:35:19;;;;;;;;;;;;;;;;;;;-1:-1:-1;1068:3:19;;1060:33;;-1:-1:-1;;;;;1068:3:19;;;;;;1082:10;;1068:3;1060:33;1068:3;1060:33;1082:10;1068:3;;1060:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;1104:4:19;;:41;;-1:-1:-1;;;1104:41:19;;1122:4;1104:41;;;839:51:22;1129:15:19;906:18:22;;;899:34;-1:-1:-1;;;;;1104:4:19;;;;:9;;812:18:22;;1104:41:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1155:4:19;;1165:5;;1155:33;;-1:-1:-1;;;1155:33:19;;-1:-1:-1;;;;;1165:5:19;;;1155:33;;;839:51:22;1172:15:19;906:18:22;;;899:34;1155:4:19;;;-1:-1:-1;1155:9:19;;-1:-1:-1;812:18:22;;1155:33:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1198:4:19;;1208:3;;1198:31;;-1:-1:-1;;;1198:31:19;;-1:-1:-1;;;;;1208:3:19;;;1198:31;;;839:51:22;1213:15:19;906:18:22;;;899:34;1198:4:19;;;-1:-1:-1;1198:9:19;;-1:-1:-1;812:18:22;;1198:31:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1240:4:19;;1261:2;;1240:44;;-1:-1:-1;;;1240:44:19;;-1:-1:-1;;;;;1261:2:19;;;1240:44;;;839:51:22;-1:-1:-1;;906:18:22;;;899:34;1240:4:19;;;-1:-1:-1;1240:12:19;;-1:-1:-1;812:18:22;;1240:44:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1294:6:19;;1307:5;;1294:19;;-1:-1:-1;;;1294:19:19;;-1:-1:-1;;;;;1307:5:19;;;1294:19;;;171:51:22;1294:6:19;;;:12;;144:18:22;;1294:19:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1323:4:19;;1344:2;;1323:44;;-1:-1:-1;;;1323:44:19;;-1:-1:-1;;;;;1344:2:19;;;1323:44;;;839:51:22;-1:-1:-1;;906:18:22;;;899:34;1323:4:19;;;-1:-1:-1;1323:12:19;;-1:-1:-1;812:18:22;;1323:44:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1377:6:19;;1390:3;;1377:17;;-1:-1:-1;;;1377:17:19;;-1:-1:-1;;;;;1390:3:19;;;1377:17;;;171:51:22;1377:6:19;;;:12;;144:18:22;;1377:17:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1404:4:19;;1425:2;;1404:44;;-1:-1:-1;;;1404:44:19;;-1:-1:-1;;;;;1425:2:19;;;1404:44;;;839:51:22;-1:-1:-1;;906:18:22;;;899:34;1404:4:19;;;-1:-1:-1;1404:12:19;;-1:-1:-1;812:18:22;;1404:44:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;681:774::o;3005:2240::-;3077:2;;:124;;-1:-1:-1;;;3077:124:19;;-1:-1:-1;;;;;3077:2:19;;;;:14;;:124;;3187:4;;3077:124;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3232:2:19;;:126;;-1:-1:-1;;;3232:126:19;;3211:18;;-1:-1:-1;;;;;;3232:2:19;;;;-1:-1:-1;3232:16:19;;:126;;3344:4;;3232:126;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3395:2;;:30;;-1:-1:-1;;;3395:30:19;;;;;2526:25:22;;;3211:147:19;;-1:-1:-1;3368:24:19;;-1:-1:-1;;;;;3395:2:19;;;;:18;;2499::22;;3395:30:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3395:30:19;;;;;;;;;;;;:::i;:::-;3368:57;;3435:66;3444:8;:23;;;3435:66;;;;;;;;;;;;;;;;;:8;:66::i;:::-;3538:6;;:17;;-1:-1:-1;;;3538:17:19;;3550:4;3538:17;;;2526:25:22;-1:-1:-1;;;;;3538:6:19;;;;:11;;2499:18:22;;3538:17:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3590:4:19;;:29;;-1:-1:-1;;;3590:29:19;;3613:4;3590:29;;;171:51:22;3565:22:19;;-1:-1:-1;;;;;;3590:4:19;;;;-1:-1:-1;3590:14:19;;144:18:22;;3590:29:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3629:2;;:40;;-1:-1:-1;;;3629:40:19;;3565:54;;-1:-1:-1;;;;;;3629:2:19;;:16;;:40;;3646:10;;3629:2;;:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3716:4:19;;:29;;-1:-1:-1;;;3716:29:19;;3739:4;3716:29;;;171:51:22;3691:66:19;;-1:-1:-1;3700:14:19;;-1:-1:-1;;;;;;3716:4:19;;;;:14;;144:18:22;;3716:29:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;3748:8;3716:40;:::i;:::-;3691:8;:66::i;:::-;3820:2;;:38;;-1:-1:-1;;;3820:38:19;;;;;2526:25:22;;;3793:24:19;;-1:-1:-1;;;;;3820:2:19;;:26;;2499:18:22;;3820:38:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3793:65;;3868:55;3885:8;:15;;;3877:24;;;;;;;;:::i;:::-;3911:10;3691:8;:66::i;3868:55::-;3990:4;;4005:3;;3990:19;;-1:-1:-1;;;3990:19:19;;-1:-1:-1;;;;;4005:3:19;;;3990:19;;;171:51:22;3962:25:19;;3990:4;;;;;:14;;144:18:22;;3990:19:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4019:6;;4032:3;;4019:17;;-1:-1:-1;;;4019:17:19;;-1:-1:-1;;;;;4032:3:19;;;4019:17;;;171:51:22;3962:47:19;;-1:-1:-1;4019:6:19;;:12;;144:18:22;;4019:17:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4046:2:19;;:30;;-1:-1:-1;;;4046:30:19;;;;;2526:25:22;;;-1:-1:-1;;;;;4046:2:19;;;;-1:-1:-1;4046:18:19;;-1:-1:-1;2499:18:22;;4046:30:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4114:4:19;;4129:3;;4114:19;;-1:-1:-1;;;4114:19:19;;-1:-1:-1;;;;;4129:3:19;;;4114:19;;;171:51:22;4086:59:19;;-1:-1:-1;4095:17:19;;-1:-1:-1;4114:4:19;;;:14;;144:18:22;;4114:19:19;14:214:22;4086:59:19;4210:6;;4222:2;;:19;;;-1:-1:-1;;;4222:19:19;;;;-1:-1:-1;;;;;4210:6:19;;;;:11;;4222:2;;:17;;:19;;;;;;;;;;;;;;:2;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;4244:4;4222:26;:::i;:::-;4210:39;;;;;;;;;;;;;2526:25:22;;2514:2;2499:18;;2380:177;4210:39:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4259:6:19;;:61;;-1:-1:-1;;;4259:61:19;;7820:2:22;4259:61:19;;;7802:21:22;7859:2;7839:18;;;7832:30;7898:34;7878:18;;;7871:62;-1:-1:-1;;;7949:18:22;;;7942:36;-1:-1:-1;;;;;4259:6:19;;;;-1:-1:-1;4259:19:19;;-1:-1:-1;7995:19:22;;4259:61:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4330:2:19;;:31;;-1:-1:-1;;;4330:31:19;;;;;2526:25:22;;;-1:-1:-1;;;;;4330:2:19;;;;-1:-1:-1;4330:19:19;;-1:-1:-1;2499:18:22;;4330:31:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4371:6:19;;:17;;-1:-1:-1;;;4371:17:19;;4383:4;4371:17;;;2526:25:22;-1:-1:-1;;;;;4371:6:19;;;;-1:-1:-1;4371:11:19;;-1:-1:-1;2499:18:22;;4371:17:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4417:6:19;;4430:5;;4417:19;;-1:-1:-1;;;4417:19:19;;-1:-1:-1;;;;;4430:5:19;;;4417:19;;;171:51:22;4417:6:19;;;-1:-1:-1;4417:12:19;;-1:-1:-1;144:18:22;;4417:19:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4446:2:19;;:35;;-1:-1:-1;;;4446:35:19;;-1:-1:-1;;;;;4446:2:19;;;;-1:-1:-1;4446:11:19;;-1:-1:-1;4446:35:19;;4458:10;;4446:2;;:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4491:6:19;;4504:3;;4491:17;;-1:-1:-1;;;4491:17:19;;-1:-1:-1;;;;;4504:3:19;;;4491:17;;;171:51:22;4491:6:19;;;-1:-1:-1;4491:12:19;;-1:-1:-1;144:18:22;;4491:17:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4518:2:19;;:34;;-1:-1:-1;;;4518:34:19;;-1:-1:-1;;;;;4518:2:19;;;;-1:-1:-1;4518:11:19;;-1:-1:-1;4518:34:19;;4530:10;;4542:9;;4518:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4562:6:19;;4575:4;;4562:18;;-1:-1:-1;;;4562:18:19;;-1:-1:-1;;;;;4575:4:19;;;4562:18;;;171:51:22;4562:6:19;;;-1:-1:-1;4562:12:19;;-1:-1:-1;144:18:22;;4562::19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4590:2:19;;:34;;-1:-1:-1;;;4590:34:19;;-1:-1:-1;;;;;4590:2:19;;;;-1:-1:-1;4590:11:19;;-1:-1:-1;4590:34:19;;4602:10;;4614:9;;4590:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4634:6:19;;4647:4;;4634:18;;-1:-1:-1;;;4634:18:19;;-1:-1:-1;;;;;4647:4:19;;;4634:18;;;171:51:22;4634:6:19;;;-1:-1:-1;4634:12:19;;-1:-1:-1;144:18:22;;4634::19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4662:2:19;;:34;;-1:-1:-1;;;4662:34:19;;-1:-1:-1;;;;;4662:2:19;;;;-1:-1:-1;4662:11:19;;-1:-1:-1;4662:34:19;;4674:10;;4686:9;;4662:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4732:6:19;;4744:2;;:18;;;-1:-1:-1;;;4744:18:19;;;;-1:-1:-1;;;;;4732:6:19;;;;-1:-1:-1;4732:11:19;;-1:-1:-1;4744:2:19;;;;;:16;;:18;;;;;;;;;;;;;;:2;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:25;;4765:4;4744:25;:::i;:::-;4732:38;;;;;;;;;;;;;2526:25:22;;2514:2;2499:18;;2380:177;4732:38:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4780:2:19;;:27;;-1:-1:-1;;;4780:27:19;;;;;2526:25:22;;;-1:-1:-1;;;;;4780:2:19;;;;-1:-1:-1;4780:15:19;;-1:-1:-1;2499:18:22;;4780:27:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4828:2:19;;:30;;-1:-1:-1;;;4828:30:19;;;;;2526:25:22;;;-1:-1:-1;;;;;4828:2:19;;;;-1:-1:-1;4828:18:19;;-1:-1:-1;2499:18:22;;4828:30:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4828:30:19;;;;;;;;;;;;:::i;:::-;4817:41;;4868:59;4885:8;:14;;;4877:23;;;;;;;;:::i;:::-;4910:15;3691:8;:66::i;4868:59::-;4937:54;4954:8;:15;;;4946:24;;;;;;;;:::i;:::-;4980:9;3691:8;:66::i;4937:54::-;5029:4;;5044:3;;5029:19;;-1:-1:-1;;;5029:19:19;;-1:-1:-1;;;;;5044:3:19;;;5029:19;;;171:51:22;5002:24:19;;5029:4;;;;;:14;;144:18:22;;5029:19:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5002:46;-1:-1:-1;5058:56:19;5002:46;5085:28;:17;5105:8;5085:28;:::i;5058:56::-;5149:4;;:29;;-1:-1:-1;;;5149:29:19;;5172:4;5149:29;;;171:51:22;5125:21:19;;-1:-1:-1;;;;;5149:4:19;;:14;;144:18:22;;5149:29:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5125:53;-1:-1:-1;5188:50:19;5125:53;5212:25;5229:8;5212:14;:25;:::i;5188:50::-;3043:2202;;;;;;;3005:2240::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;839:51:22;;;-1:-1:-1;;;906:18:22;;;899:34;2196:43:0;;;;;;;;;812:18:22;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;1461:1538:19:-;1535:2;;:124;;-1:-1:-1;;;1535:124:19;;-1:-1:-1;;;;;1535:2:19;;;;:14;;:124;;1645:4;;1535:124;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1690:2:19;;:126;;-1:-1:-1;;;1690:126:19;;1669:18;;-1:-1:-1;;;;;;1690:2:19;;;;-1:-1:-1;1690:16:19;;:126;;1802:4;;1690:126;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1853:2;;:30;;-1:-1:-1;;;1853:30:19;;;;;2526:25:22;;;1669:147:19;;-1:-1:-1;1826:24:19;;-1:-1:-1;;;;;1853:2:19;;;;:18;;2499::22;;1853:30:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1853:30:19;;;;;;;;;;;;:::i;:::-;1826:57;;1893:66;1902:8;:23;;;1893:66;;;;;;;;;;;;;;;;;:8;:66::i;:::-;1996:6;;:17;;-1:-1:-1;;;1996:17:19;;2008:4;1996:17;;;2526:25:22;-1:-1:-1;;;;;1996:6:19;;;;:11;;2499:18:22;;1996:17:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2048:4:19;;:29;;-1:-1:-1;;;2048:29:19;;2071:4;2048:29;;;171:51:22;2023:22:19;;-1:-1:-1;;;;;;2048:4:19;;;;-1:-1:-1;2048:14:19;;144:18:22;;2048:29:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2087:2;;:40;;-1:-1:-1;;;2087:40:19;;2023:54;;-1:-1:-1;;;;;;2087:2:19;;:16;;:40;;2104:10;;2087:2;;:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2174:4:19;;:29;;-1:-1:-1;;;2174:29:19;;2197:4;2174:29;;;171:51:22;2149:66:19;;-1:-1:-1;2158:14:19;;-1:-1:-1;;;;;;2174:4:19;;;;:14;;144:18:22;;2174:29:19;14:214:22;2149:66:19;2278:2;;:38;;-1:-1:-1;;;2278:38:19;;;;;2526:25:22;;;2251:24:19;;-1:-1:-1;;;;;2278:2:19;;:26;;2499:18:22;;2278:38:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2251:65;;2326:55;2343:8;:15;;;2335:24;;;;;;;;:::i;2326:55::-;2421:6;;2433:2;;:19;;;-1:-1:-1;;;2433:19:19;;;;-1:-1:-1;;;;;2421:6:19;;;;:11;;2433:2;;:17;;:19;;;;;;;;;;;;;;:2;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;2455:4;2433:26;:::i;:::-;2421:39;;;;;;;;;;;;;2526:25:22;;2514:2;2499:18;;2380:177;2421:39:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2470:2:19;;:31;;-1:-1:-1;;;2470:31:19;;;;;2526:25:22;;;-1:-1:-1;;;;;2470:2:19;;;;-1:-1:-1;2470:19:19;;-1:-1:-1;2499:18:22;;2470:31:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2522:2:19;;:30;;-1:-1:-1;;;2522:30:19;;;;;2526:25:22;;;-1:-1:-1;;;;;2522:2:19;;;;-1:-1:-1;2522:18:19;;-1:-1:-1;2499:18:22;;2522:30:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2522:30:19;;;;;;;;;;;;:::i;:::-;2511:41;;2562:59;2579:8;:14;;;2571:23;;;;;;;;:::i;2562:59::-;2631:60;2648:8;:15;;;2640:24;;;;;;;;:::i;:::-;2674:8;:15;;;2666:24;;;;;;;;:::i;2631:60::-;2732:2;;:20;;;-1:-1:-1;;;2732:20:19;;;;2702:27;;-1:-1:-1;;;;;2732:2:19;;:18;;:20;;;;;2702:27;;2732:20;;;;;;;:2;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2732:20:19;;;;;;;;;;;;:::i;:::-;2773:2;;:30;;-1:-1:-1;;;2773:30:19;;;;;2526:25:22;;;2702:50:19;;-1:-1:-1;;;;;;2773:2:19;;:18;;2499::22;;2773:30:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2773:30:19;;;;;;;;;;;;:::i;:::-;2762:41;;2814:64;2831:9;2841:1;2831:12;;;;;;;;:::i;:::-;;;;;;;:19;;;2823:28;;;;;;;;:::i;:::-;2861:8;:15;;;2853:24;;;;;;;;:::i;2814:64::-;2913:4;;:29;;-1:-1:-1;;;2913:29:19;;2936:4;2913:29;;;171:51:22;2889:21:19;;-1:-1:-1;;;;;2913:4:19;;:14;;144:18:22;;2913:29:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2889:53;;2953:39;2962:13;2977:14;2953:8;:39::i;:::-;1501:1498;;;;;;1461:1538::o;14688:344:0:-;14824:1;14807:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14797:30;;;;;;14790:1;14773:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14763:30;;;;;;:64;14759:267;;14848:43;;;;;10903:2:22;10885:21;;;10942:2;10922:18;;;10915:30;10981:34;10976:2;10961:18;;10954:62;-1:-1:-1;;;11047:2:22;11032:18;;11025:34;11091:3;11076:19;;10701:400;14848:43:0;;;;;;;;14910:33;14941:1;14910:33;;;;;;:::i;:::-;;;;;;;;14962;14993:1;14962:33;;;;;;:::i;:::-;;;;;;;;15009:6;:4;:6::i;:::-;14688:344;;:::o;5202:262::-;5264:1;5259;:6;5255:203;;5286:41;;;;;12789:2:22;12771:21;;;12828:2;12808:18;;;12801:30;12867:34;12862:2;12847:18;;12840:62;-1:-1:-1;;;12933:2:22;12918:18;;12911:32;12975:3;12960:19;;12587:398;5286:41:0;;;;;;;;5346:31;5375:1;5346:31;;;;;;:::i;:::-;;;;;;;;5396;5425:1;5396:31;;;;;;:::i;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;13898:51:22;;;-1:-1:-1;;;13965:18:22;;;13958:34;;;;2705:4:0;14008:18:22;;;14001:34;2482:11:0;;1671:64;2579:43;;13871:18:22;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;1223:277:22:-;1290:6;1343:2;1331:9;1322:7;1318:23;1314:32;1311:52;;;1359:1;1356;1349:12;1311:52;1391:9;1385:16;1444:5;1437:13;1430:21;1423:5;1420:32;1410:60;;1466:1;1463;1456:12;1410:60;1489:5;1223:277;-1:-1:-1;;;1223:277:22:o;1505:681::-;1847:2;1829:21;;;1886:2;1866:18;;;1859:30;1926:31;1920:3;1905:19;;1898:60;1996:3;1989:4;1974:20;;1967:33;;;2037:2;2016:19;;;2009:31;-1:-1:-1;;;2071:3:22;2056:19;;2049:52;-1:-1:-1;2153:18:22;;2146:34;;;;2133:3;2118:19;;1505:681::o;2191:184::-;2261:6;2314:2;2302:9;2293:7;2289:23;2285:32;2282:52;;;2330:1;2327;2320:12;2282:52;-1:-1:-1;2353:16:22;;2191:184;-1:-1:-1;2191:184:22:o;2562:127::-;2623:10;2618:3;2614:20;2611:1;2604:31;2654:4;2651:1;2644:15;2678:4;2675:1;2668:15;2694:253;2766:2;2760:9;2808:4;2796:17;;2843:18;2828:34;;2864:22;;;2825:62;2822:88;;;2890:18;;:::i;:::-;2926:2;2919:22;2694:253;:::o;2952:275::-;3023:2;3017:9;3088:2;3069:13;;-1:-1:-1;;3065:27:22;3053:40;;3123:18;3108:34;;3144:22;;;3105:62;3102:88;;;3170:18;;:::i;:::-;3206:2;3199:22;2952:275;;-1:-1:-1;2952:275:22:o;3232:258::-;3304:1;3314:113;3328:6;3325:1;3322:13;3314:113;;;3404:11;;;3398:18;3385:11;;;3378:39;3350:2;3343:10;3314:113;;;3445:6;3442:1;3439:13;3436:48;;;3480:1;3471:6;3466:3;3462:16;3455:27;3436:48;;3232:258;;;:::o;3495:497::-;3549:5;3602:3;3595:4;3587:6;3583:17;3579:27;3569:55;;3620:1;3617;3610:12;3569:55;3649:6;3643:13;3675:18;3671:2;3668:26;3665:52;;;3697:18;;:::i;:::-;3741:55;3784:2;3765:13;;-1:-1:-1;;3761:27:22;3790:4;3757:38;3741:55;:::i;:::-;3821:2;3812:7;3805:19;3867:3;3860:4;3855:2;3847:6;3843:15;3839:26;3836:35;3833:55;;;3884:1;3881;3874:12;3833:55;3897:64;3958:2;3951:4;3942:7;3938:18;3931:4;3923:6;3919:17;3897:64;:::i;:::-;3979:7;3495:497;-1:-1:-1;;;;3495:497:22:o;3997:150::-;4079:13;;4121:1;4111:12;;4101:40;;4137:1;4134;4127:12;4152:151;4235:13;;4277:1;4267:12;;4257:40;;4293:1;4290;4283:12;4308:860;4374:5;4422:4;4410:9;4405:3;4401:19;4397:30;4394:50;;;4440:1;4437;4430:12;4394:50;4462:22;;:::i;:::-;4453:31;;4513:9;4507:16;4542:18;4583:2;4575:6;4572:14;4569:34;;;4599:1;4596;4589:12;4569:34;4626:57;4679:3;4670:6;4659:9;4655:22;4626:57;:::i;:::-;4619:5;4612:72;4730:2;4719:9;4715:18;4709:25;4693:41;;4759:2;4749:8;4746:16;4743:36;;;4775:1;4772;4765:12;4743:36;;4811:59;4866:3;4855:8;4844:9;4840:24;4811:59;:::i;:::-;4806:2;4799:5;4795:14;4788:83;;4924:2;4913:9;4909:18;4903:25;4898:2;4891:5;4887:14;4880:49;4982:2;4971:9;4967:18;4961:25;4956:2;4949:5;4945:14;4938:49;5020:53;5068:3;5057:9;5053:19;5020:53;:::i;:::-;5014:3;5007:5;5003:15;4996:78;5107:54;5156:3;5145:9;5141:19;5107:54;:::i;:::-;5101:3;5094:5;5090:15;5083:79;4308:860;;;;:::o;5173:363::-;5270:6;5323:2;5311:9;5302:7;5298:23;5294:32;5291:52;;;5339:1;5336;5329:12;5291:52;5372:9;5366:16;5405:18;5397:6;5394:30;5391:50;;;5437:1;5434;5427:12;5391:50;5460:70;5522:7;5513:6;5502:9;5498:22;5460:70;:::i;5923:127::-;5984:10;5979:3;5975:20;5972:1;5965:31;6015:4;6012:1;6005:15;6039:4;6036:1;6029:15;6055:411;6239:25;;;6227:2;6212:18;;6294:1;6283:13;;6273:144;;6339:10;6334:3;6330:20;6327:1;6320:31;6374:4;6371:1;6364:15;6402:4;6399:1;6392:15;6273:144;6453:6;6448:2;6437:9;6433:18;6426:34;6055:411;;;;;:::o;6471:127::-;6532:10;6527:3;6523:20;6520:1;6513:31;6563:4;6560:1;6553:15;6587:4;6584:1;6577:15;6603:128;6643:3;6674:1;6670:6;6667:1;6664:13;6661:39;;;6680:18;;:::i;:::-;-1:-1:-1;6716:9:22;;6603:128::o;6736:696::-;6833:6;6886:2;6874:9;6865:7;6861:23;6857:32;6854:52;;;6902:1;6899;6892:12;6854:52;6935:2;6929:9;6977:2;6969:6;6965:15;7046:6;7034:10;7031:22;7010:18;6998:10;6995:34;6992:62;6989:88;;;7057:18;;:::i;:::-;7093:2;7086:22;7130:16;;-1:-1:-1;;;;;7175:31:22;;7165:42;;7155:70;;7221:1;7218;7211:12;7155:70;7234:21;;7288:53;7337:2;7322:18;;7288:53;:::i;:::-;7283:2;7275:6;7271:15;7264:78;7396:2;7385:9;7381:18;7375:25;7370:2;7362:6;7358:15;7351:50;7420:6;7410:16;;;6736:696;;;;:::o;8025:125::-;8065:4;8093:1;8090;8087:8;8084:34;;;8098:18;;:::i;:::-;-1:-1:-1;8135:9:22;;8025:125::o;8434:371::-;-1:-1:-1;;;;;;8619:33:22;;8607:46;;8676:13;;8589:3;;8698:61;8676:13;8748:1;8739:11;;8732:4;8720:17;;8698:61;:::i;:::-;8779:16;;;;8797:1;8775:24;;8434:371;-1:-1:-1;;;8434:371:22:o;8810:274::-;8939:3;8977:6;8971:13;8993:53;9039:6;9034:3;9027:4;9019:6;9015:17;8993:53;:::i;:::-;9062:16;;;;;8810:274;-1:-1:-1;;8810:274:22:o;9089:1194::-;9211:6;9242:2;9285;9273:9;9264:7;9260:23;9256:32;9253:52;;;9301:1;9298;9291:12;9253:52;9334:9;9328:16;9363:18;9404:2;9396:6;9393:14;9390:34;;;9420:1;9417;9410:12;9390:34;9458:6;9447:9;9443:22;9433:32;;9503:7;9496:4;9492:2;9488:13;9484:27;9474:55;;9525:1;9522;9515:12;9474:55;9554:2;9548:9;9576:2;9572;9569:10;9566:36;;;9582:18;;:::i;:::-;9628:2;9625:1;9621:10;9651:28;9675:2;9671;9667:11;9651:28;:::i;:::-;9713:15;;;9783:11;;;9779:20;;;9744:12;;;;9811:19;;;9808:39;;;9843:1;9840;9833:12;9808:39;9875:2;9871;9867:11;9856:22;;9887:366;9903:6;9898:3;9895:15;9887:366;;;9982:3;9976:10;10018:2;10005:11;10002:19;9999:109;;;10062:1;10091:2;10087;10080:14;9999:109;10133:77;10202:7;10197:2;10183:11;10179:2;10175:20;10171:29;10133:77;:::i;:::-;10121:90;;-1:-1:-1;9920:12:22;;;;10231;;;;9887:366;;;10272:5;9089:1194;-1:-1:-1;;;;;;;;;9089:1194:22:o;10288:127::-;10349:10;10344:3;10340:20;10337:1;10330:31;10380:4;10377:1;10370:15;10404:4;10401:1;10394:15;11270:258;11312:3;11350:5;11344:12;11377:6;11372:3;11365:19;11393:63;11449:6;11442:4;11437:3;11433:14;11426:4;11419:5;11415:16;11393:63;:::i;:::-;11510:2;11489:15;-1:-1:-1;;11485:29:22;11476:39;;;;11517:4;11472:50;;11270:258;-1:-1:-1;;11270:258:22:o;11533:440::-;11783:2;11772:9;11765:21;11746:4;11809:49;11854:2;11843:9;11839:18;11183:2;11171:15;;-1:-1:-1;;;11211:4:22;11202:14;;11195:36;11256:2;11247:12;;11106:159;11809:49;11906:9;11898:6;11894:22;11889:2;11878:9;11874:18;11867:50;11934:33;11960:6;11952;11934:33;:::i;12142:440::-;12392:2;12381:9;12374:21;12355:4;12418:49;12463:2;12452:9;12448:18;12055:2;12043:15;;-1:-1:-1;;;12083:4:22;12074:14;;12067:36;12128:2;12119:12;;11978:159;12990:348;13220:2;13209:9;13202:21;13183:4;13240:49;13285:2;13274:9;13270:18;11183:2;11171:15;;-1:-1:-1;;;11211:4:22;11202:14;;11195:36;11256:2;11247:12;;11106:159;13240:49;13232:57;;13325:6;13320:2;13309:9;13305:18;13298:34;12990:348;;;;:::o;13343:::-;13573:2;13562:9;13555:21;13536:4;13593:49;13638:2;13627:9;13623:18;12055:2;12043:15;;-1:-1:-1;;;12083:4:22;12074:14;;12067:36;12128:2;12119:12;;11978:159",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/Users/alexander/dev/opti/contracts/src/test/OptimisticOracleTest.sol",
    "exportedSymbols": {
      "CheatCodes": [
        25558
      ],
      "DSTest": [
        1786
      ],
      "ERC1155Holder": [
        23292
      ],
      "OPTI": [
        25586
      ],
      "OptimisticOracle": [
        24741
      ],
      "OptimisticOracleTest": [
        25502
      ],
      "Proposal": [
        24760
      ],
      "Question": [
        24784
      ],
      "Result": [
        24747
      ],
      "Script": [
        2049
      ],
      "Stage": [
        24752
      ],
      "StdStorage": [
        5077
      ],
      "Test": [
        4979
      ],
      "TokenReceiver": [
        25509
      ],
      "Vm": [
        7072
      ],
      "console": [
        15136
      ],
      "console2": [
        23200
      ],
      "stdError": [
        5049
      ],
      "stdJson": [
        2409
      ],
      "stdMath": [
        6318
      ],
      "stdStorage": [
        6179
      ]
    },
    "id": 25510,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 24832,
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:19"
      },
      {
        "absolutePath": "/Users/alexander/dev/opti/contracts/lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "id": 24833,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25510,
        "sourceUnit": 6319,
        "src": "64:28:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/opti/contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        "file": "openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        "id": 24835,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25510,
        "sourceUnit": 23293,
        "src": "93:101:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24834,
              "name": "ERC1155Holder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23292,
              "src": "101:13:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/opti/contracts/src/test/helpers/CheatCodes.sol",
        "file": "./helpers/CheatCodes.sol",
        "id": 24837,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25510,
        "sourceUnit": 25559,
        "src": "195:52:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24836,
              "name": "CheatCodes",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25558,
              "src": "203:10:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/opti/contracts/src/test/helpers/MockERC20.sol",
        "file": "./helpers/MockERC20.sol",
        "id": 24839,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25510,
        "sourceUnit": 25587,
        "src": "248:45:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24838,
              "name": "OPTI",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25586,
              "src": "256:4:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/opti/contracts/src/OptimisticOracle.sol",
        "file": "../OptimisticOracle.sol",
        "id": 24841,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25510,
        "sourceUnit": 24742,
        "src": "294:57:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24840,
              "name": "OptimisticOracle",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24741,
              "src": "302:16:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/opti/contracts/src/datastructures/structures.sol",
        "file": "../datastructures/structures.sol",
        "id": 24846,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25510,
        "sourceUnit": 24785,
        "src": "352:83:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24842,
              "name": "Result",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24747,
              "src": "360:6:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 24843,
              "name": "Stage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24752,
              "src": "368:5:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 24844,
              "name": "Proposal",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24760,
              "src": "375:8:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 24845,
              "name": "Question",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24784,
              "src": "385:8:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24847,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4979,
              "src": "470:4:19"
            },
            "id": 24848,
            "nodeType": "InheritanceSpecifier",
            "src": "470:4:19"
          }
        ],
        "canonicalName": "OptimisticOracleTest",
        "contractDependencies": [
          24741,
          25509,
          25586
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 25502,
        "linearizedBaseContracts": [
          25502,
          4979,
          2049,
          1786
        ],
        "name": "OptimisticOracleTest",
        "nameLocation": "446:20:19",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 24851,
            "mutability": "mutable",
            "name": "oo",
            "nameLocation": "507:2:19",
            "nodeType": "VariableDeclaration",
            "scope": 25502,
            "src": "481:28:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
              "typeString": "contract OptimisticOracle"
            },
            "typeName": {
              "id": 24850,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24849,
                "name": "OptimisticOracle",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24741,
                "src": "481:16:19"
              },
              "referencedDeclaration": 24741,
              "src": "481:16:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                "typeString": "contract OptimisticOracle"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24854,
            "mutability": "mutable",
            "name": "cheats",
            "nameLocation": "535:6:19",
            "nodeType": "VariableDeclaration",
            "scope": 25502,
            "src": "515:26:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CheatCodes_$25558",
              "typeString": "contract CheatCodes"
            },
            "typeName": {
              "id": 24853,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24852,
                "name": "CheatCodes",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25558,
                "src": "515:10:19"
              },
              "referencedDeclaration": 25558,
              "src": "515:10:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CheatCodes_$25558",
                "typeString": "contract CheatCodes"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24857,
            "mutability": "mutable",
            "name": "opti",
            "nameLocation": "561:4:19",
            "nodeType": "VariableDeclaration",
            "scope": 25502,
            "src": "547:18:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OPTI_$25586",
              "typeString": "contract OPTI"
            },
            "typeName": {
              "id": 24856,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24855,
                "name": "OPTI",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25586,
                "src": "547:4:19"
              },
              "referencedDeclaration": 25586,
              "src": "547:4:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OPTI_$25586",
                "typeString": "contract OPTI"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24859,
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "589:5:19",
            "nodeType": "VariableDeclaration",
            "scope": 25502,
            "src": "572:22:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 24858,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "572:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24861,
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "617:3:19",
            "nodeType": "VariableDeclaration",
            "scope": 25502,
            "src": "600:20:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 24860,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "600:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24863,
            "mutability": "mutable",
            "name": "john",
            "nameLocation": "643:4:19",
            "nodeType": "VariableDeclaration",
            "scope": 25502,
            "src": "626:21:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 24862,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "626:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24865,
            "mutability": "mutable",
            "name": "kyle",
            "nameLocation": "670:4:19",
            "nodeType": "VariableDeclaration",
            "scope": 25502,
            "src": "653:21:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 24864,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "653:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 25026,
              "nodeType": "Block",
              "src": "705:750:19",
              "statements": [
                {
                  "expression": {
                    "id": 24872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24868,
                      "name": "cheats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24854,
                      "src": "715:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CheatCodes_$25558",
                        "typeString": "contract CheatCodes"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 24870,
                          "name": "HEVM_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "735:12:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 24869,
                        "name": "CheatCodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25558,
                        "src": "724:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CheatCodes_$25558_$",
                          "typeString": "type(contract CheatCodes)"
                        }
                      },
                      "id": 24871,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "724:24:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CheatCodes_$25558",
                        "typeString": "contract CheatCodes"
                      }
                    },
                    "src": "715:33:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CheatCodes_$25558",
                      "typeString": "contract CheatCodes"
                    }
                  },
                  "id": 24873,
                  "nodeType": "ExpressionStatement",
                  "src": "715:33:19"
                },
                {
                  "expression": {
                    "id": 24879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24874,
                      "name": "opti",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24857,
                      "src": "758:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OPTI_$25586",
                        "typeString": "contract OPTI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 24877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "765:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_OPTI_$25586_$",
                          "typeString": "function () returns (contract OPTI)"
                        },
                        "typeName": {
                          "id": 24876,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24875,
                            "name": "OPTI",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 25586,
                            "src": "769:4:19"
                          },
                          "referencedDeclaration": 25586,
                          "src": "769:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OPTI_$25586",
                            "typeString": "contract OPTI"
                          }
                        }
                      },
                      "id": 24878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "765:10:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OPTI_$25586",
                        "typeString": "contract OPTI"
                      }
                    },
                    "src": "758:17:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OPTI_$25586",
                      "typeString": "contract OPTI"
                    }
                  },
                  "id": 24880,
                  "nodeType": "ExpressionStatement",
                  "src": "758:17:19"
                },
                {
                  "expression": {
                    "id": 24890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24881,
                      "name": "oo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24851,
                      "src": "785:2:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                        "typeString": "contract OptimisticOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 24887,
                              "name": "opti",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24857,
                              "src": "819:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OPTI_$25586",
                                "typeString": "contract OPTI"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OPTI_$25586",
                                "typeString": "contract OPTI"
                              }
                            ],
                            "id": 24886,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "811:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 24885,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "811:7:19",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "811:13:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 24884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "790:20:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_OptimisticOracle_$24741_$",
                          "typeString": "function (address) returns (contract OptimisticOracle)"
                        },
                        "typeName": {
                          "id": 24883,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24882,
                            "name": "OptimisticOracle",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24741,
                            "src": "794:16:19"
                          },
                          "referencedDeclaration": 24741,
                          "src": "794:16:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                            "typeString": "contract OptimisticOracle"
                          }
                        }
                      },
                      "id": 24889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "790:35:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                        "typeString": "contract OptimisticOracle"
                      }
                    },
                    "src": "785:40:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                      "typeString": "contract OptimisticOracle"
                    }
                  },
                  "id": 24891,
                  "nodeType": "ExpressionStatement",
                  "src": "785:40:19"
                },
                {
                  "expression": {
                    "id": 24900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24892,
                      "name": "alice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24859,
                      "src": "835:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 24897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "851:17:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TokenReceiver_$25509_$",
                              "typeString": "function () returns (contract TokenReceiver)"
                            },
                            "typeName": {
                              "id": 24896,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 24895,
                                "name": "TokenReceiver",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 25509,
                                "src": "855:13:19"
                              },
                              "referencedDeclaration": 25509,
                              "src": "855:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenReceiver_$25509",
                                "typeString": "contract TokenReceiver"
                              }
                            }
                          },
                          "id": 24898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "851:19:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenReceiver_$25509",
                            "typeString": "contract TokenReceiver"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TokenReceiver_$25509",
                            "typeString": "contract TokenReceiver"
                          }
                        ],
                        "id": 24894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "843:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 24893,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "843:7:19",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 24899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "843:28:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "835:36:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24901,
                  "nodeType": "ExpressionStatement",
                  "src": "835:36:19"
                },
                {
                  "expression": {
                    "id": 24910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24902,
                      "name": "bob",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24861,
                      "src": "881:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 24907,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "895:17:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TokenReceiver_$25509_$",
                              "typeString": "function () returns (contract TokenReceiver)"
                            },
                            "typeName": {
                              "id": 24906,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 24905,
                                "name": "TokenReceiver",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 25509,
                                "src": "899:13:19"
                              },
                              "referencedDeclaration": 25509,
                              "src": "899:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenReceiver_$25509",
                                "typeString": "contract TokenReceiver"
                              }
                            }
                          },
                          "id": 24908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "895:19:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenReceiver_$25509",
                            "typeString": "contract TokenReceiver"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TokenReceiver_$25509",
                            "typeString": "contract TokenReceiver"
                          }
                        ],
                        "id": 24904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "887:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 24903,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "887:7:19",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 24909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "887:28:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "881:34:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24911,
                  "nodeType": "ExpressionStatement",
                  "src": "881:34:19"
                },
                {
                  "expression": {
                    "id": 24920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24912,
                      "name": "john",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24863,
                      "src": "925:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 24917,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "940:17:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TokenReceiver_$25509_$",
                              "typeString": "function () returns (contract TokenReceiver)"
                            },
                            "typeName": {
                              "id": 24916,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 24915,
                                "name": "TokenReceiver",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 25509,
                                "src": "944:13:19"
                              },
                              "referencedDeclaration": 25509,
                              "src": "944:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenReceiver_$25509",
                                "typeString": "contract TokenReceiver"
                              }
                            }
                          },
                          "id": 24918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "940:19:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenReceiver_$25509",
                            "typeString": "contract TokenReceiver"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TokenReceiver_$25509",
                            "typeString": "contract TokenReceiver"
                          }
                        ],
                        "id": 24914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "932:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 24913,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "932:7:19",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 24919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "932:28:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "925:35:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24921,
                  "nodeType": "ExpressionStatement",
                  "src": "925:35:19"
                },
                {
                  "expression": {
                    "id": 24930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24922,
                      "name": "kyle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24865,
                      "src": "970:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 24927,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "985:17:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TokenReceiver_$25509_$",
                              "typeString": "function () returns (contract TokenReceiver)"
                            },
                            "typeName": {
                              "id": 24926,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 24925,
                                "name": "TokenReceiver",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 25509,
                                "src": "989:13:19"
                              },
                              "referencedDeclaration": 25509,
                              "src": "989:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenReceiver_$25509",
                                "typeString": "contract TokenReceiver"
                              }
                            }
                          },
                          "id": 24928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "985:19:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenReceiver_$25509",
                            "typeString": "contract TokenReceiver"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TokenReceiver_$25509",
                            "typeString": "contract TokenReceiver"
                          }
                        ],
                        "id": 24924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "977:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 24923,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "977:7:19",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 24929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "977:28:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "970:35:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24931,
                  "nodeType": "ExpressionStatement",
                  "src": "970:35:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 24937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1039:10:19",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 24934,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24859,
                            "src": "1023:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1015:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 24932,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1015:8:19",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1015:14:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 24936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1015:23:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 24938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1015:35:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24939,
                  "nodeType": "ExpressionStatement",
                  "src": "1015:35:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 24945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1082:10:19",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 24942,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24861,
                            "src": "1068:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1060:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 24940,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1060:8:19",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1060:12:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 24944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1060:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 24946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1060:33:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24947,
                  "nodeType": "ExpressionStatement",
                  "src": "1060:33:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24953,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1122:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$25502",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$25502",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          ],
                          "id": 24952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1114:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24951,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1114:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1114:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "315f3030305f303030",
                        "id": 24955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1129:15:19",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        "value": "1_000_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 24948,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24857,
                        "src": "1104:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25586",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 24950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25585,
                      "src": "1104:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 24956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1104:41:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24957,
                  "nodeType": "ExpressionStatement",
                  "src": "1104:41:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24961,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24859,
                        "src": "1165:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "315f3030305f303030",
                        "id": 24962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1172:15:19",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        "value": "1_000_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 24958,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24857,
                        "src": "1155:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25586",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 24960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25585,
                      "src": "1155:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 24963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1155:33:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24964,
                  "nodeType": "ExpressionStatement",
                  "src": "1155:33:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24968,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24861,
                        "src": "1208:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "315f3030305f303030",
                        "id": 24969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1213:15:19",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        "value": "1_000_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 24965,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24857,
                        "src": "1198:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25586",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 24967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25585,
                      "src": "1198:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 24970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1198:31:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24971,
                  "nodeType": "ExpressionStatement",
                  "src": "1198:31:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24977,
                            "name": "oo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24851,
                            "src": "1261:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                              "typeString": "contract OptimisticOracle"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                              "typeString": "contract OptimisticOracle"
                            }
                          ],
                          "id": 24976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1253:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24975,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1253:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1253:11:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 24981,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1271:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 24980,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1271:7:19",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 24979,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1266:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 24982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1266:13:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 24983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1266:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24972,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24857,
                        "src": "1240:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25586",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 24974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23493,
                      "src": "1240:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 24984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1240:44:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24985,
                  "nodeType": "ExpressionStatement",
                  "src": "1240:44:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24989,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24859,
                        "src": "1307:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24986,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24854,
                        "src": "1294:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25558",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 24988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25516,
                      "src": "1294:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 24990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1294:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24991,
                  "nodeType": "ExpressionStatement",
                  "src": "1294:19:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24997,
                            "name": "oo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24851,
                            "src": "1344:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                              "typeString": "contract OptimisticOracle"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                              "typeString": "contract OptimisticOracle"
                            }
                          ],
                          "id": 24996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1336:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24995,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1336:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1336:11:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 25001,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1354:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 25000,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1354:7:19",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 24999,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1349:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 25002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1349:13:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 25003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1349:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24992,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24857,
                        "src": "1323:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25586",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 24994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23493,
                      "src": "1323:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 25004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1323:44:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25005,
                  "nodeType": "ExpressionStatement",
                  "src": "1323:44:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25009,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24861,
                        "src": "1390:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25006,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24854,
                        "src": "1377:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25558",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25516,
                      "src": "1377:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1377:17:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25011,
                  "nodeType": "ExpressionStatement",
                  "src": "1377:17:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25017,
                            "name": "oo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24851,
                            "src": "1425:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                              "typeString": "contract OptimisticOracle"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                              "typeString": "contract OptimisticOracle"
                            }
                          ],
                          "id": 25016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1417:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25015,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1417:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1417:11:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 25021,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1435:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 25020,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1435:7:19",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 25019,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1430:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 25022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1430:13:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 25023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1430:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25012,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24857,
                        "src": "1404:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25586",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 25014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23493,
                      "src": "1404:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 25024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1404:44:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25025,
                  "nodeType": "ExpressionStatement",
                  "src": "1404:44:19"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "id": 25027,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "690:5:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24866,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "695:2:19"
            },
            "returnParameters": {
              "id": 24867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "705:0:19"
            },
            "scope": 25502,
            "src": "681:774:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 25214,
              "nodeType": "Block",
              "src": "1501:1498:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "77696c6c20455448206265206f76657220316b20746f6d6f72726f773f",
                        "id": 25033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1563:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        "value": "will ETH be over 1k tomorrow?"
                      },
                      {
                        "hexValue": "68747470733a2f2f636f696e6765636b6f2e636f6d",
                        "id": 25034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1608:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b23b3d4ae85f5b8d09e37316325b8a4548b8b7ce65630611242948ce5487ad7",
                          "typeString": "literal_string \"https://coingecko.com\""
                        },
                        "value": "https://coingecko.com"
                      },
                      {
                        "hexValue": "31303030",
                        "id": 25035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1645:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b23b3d4ae85f5b8d09e37316325b8a4548b8b7ce65630611242948ce5487ad7",
                          "typeString": "literal_string \"https://coingecko.com\""
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 25030,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24851,
                        "src": "1535:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "askQuestion",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24187,
                      "src": "1535:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,string memory,uint256) external"
                      }
                    },
                    "id": 25036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1535:124:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25037,
                  "nodeType": "ExpressionStatement",
                  "src": "1535:124:19"
                },
                {
                  "assignments": [
                    25039
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25039,
                      "mutability": "mutable",
                      "name": "questionId",
                      "nameLocation": "1677:10:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25214,
                      "src": "1669:18:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 25038,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1669:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25046,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "77696c6c20455448206265206f76657220316b20746f6d6f72726f773f",
                        "id": 25042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1720:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        "value": "will ETH be over 1k tomorrow?"
                      },
                      {
                        "hexValue": "68747470733a2f2f636f696e6765636b6f2e636f6d",
                        "id": 25043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1765:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b23b3d4ae85f5b8d09e37316325b8a4548b8b7ce65630611242948ce5487ad7",
                          "typeString": "literal_string \"https://coingecko.com\""
                        },
                        "value": "https://coingecko.com"
                      },
                      {
                        "hexValue": "31303030",
                        "id": 25044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1802:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b23b3d4ae85f5b8d09e37316325b8a4548b8b7ce65630611242948ce5487ad7",
                          "typeString": "literal_string \"https://coingecko.com\""
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 25040,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24851,
                        "src": "1690:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getQuestionId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24694,
                      "src": "1690:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory,uint256) pure external returns (bytes32)"
                      }
                    },
                    "id": 25045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1690:126:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1669:147:19"
                },
                {
                  "assignments": [
                    25049
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25049,
                      "mutability": "mutable",
                      "name": "question",
                      "nameLocation": "1842:8:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25214,
                      "src": "1826:24:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$24784_memory_ptr",
                        "typeString": "struct Question"
                      },
                      "typeName": {
                        "id": 25048,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 25047,
                          "name": "Question",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24784,
                          "src": "1826:8:19"
                        },
                        "referencedDeclaration": 24784,
                        "src": "1826:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$24784_storage_ptr",
                          "typeString": "struct Question"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25054,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25052,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25039,
                        "src": "1872:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25050,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24851,
                        "src": "1853:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getQuestionById",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24660,
                      "src": "1853:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Question_$24784_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct Question memory)"
                      }
                    },
                    "id": 25053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1853:30:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$24784_memory_ptr",
                      "typeString": "struct Question memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1826:57:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25056,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25049,
                          "src": "1902:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$24784_memory_ptr",
                            "typeString": "struct Question memory"
                          }
                        },
                        "id": 25057,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "questionString",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24771,
                        "src": "1902:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "77696c6c20455448206265206f76657220316b20746f6d6f72726f773f",
                        "id": 25058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1927:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        "value": "will ETH be over 1k tomorrow?"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        }
                      ],
                      "id": 25055,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 1639,
                      "src": "1893:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 25059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1893:66:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25060,
                  "nodeType": "ExpressionStatement",
                  "src": "1893:66:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 25064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2008:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 25061,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24854,
                        "src": "1996:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25558",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25531,
                      "src": "1996:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 25065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1996:17:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25066,
                  "nodeType": "ExpressionStatement",
                  "src": "1996:17:19"
                },
                {
                  "assignments": [
                    25068
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25068,
                      "mutability": "mutable",
                      "name": "initialBalance",
                      "nameLocation": "2031:14:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25214,
                      "src": "2023:22:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25067,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2023:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25076,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25073,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2071:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$25502",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$25502",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          ],
                          "id": 25072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2063:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25071,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2063:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2063:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25069,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24857,
                        "src": "2048:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25586",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 25070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23425,
                      "src": "2048:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 25075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2048:29:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2023:54:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25080,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25039,
                        "src": "2104:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 25081,
                          "name": "Result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24747,
                          "src": "2116:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Result_$24747_$",
                            "typeString": "type(enum Result)"
                          }
                        },
                        "id": 25082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "YES",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24745,
                        "src": "2116:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$24747",
                          "typeString": "enum Result"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_enum$_Result_$24747",
                          "typeString": "enum Result"
                        }
                      ],
                      "expression": {
                        "id": 25077,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24851,
                        "src": "2087:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proposeAnswer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24252,
                      "src": "2087:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_enum$_Result_$24747_$returns$__$",
                        "typeString": "function (bytes32,enum Result) external"
                      }
                    },
                    "id": 25083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2087:40:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25084,
                  "nodeType": "ExpressionStatement",
                  "src": "2087:40:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25086,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25068,
                        "src": "2158:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 25091,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2197:4:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OptimisticOracleTest_$25502",
                                    "typeString": "contract OptimisticOracleTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_OptimisticOracleTest_$25502",
                                    "typeString": "contract OptimisticOracleTest"
                                  }
                                ],
                                "id": 25090,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2189:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 25089,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2189:7:19",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 25092,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2189:13:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 25087,
                              "name": "opti",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24857,
                              "src": "2174:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OPTI_$25586",
                                "typeString": "contract OPTI"
                              }
                            },
                            "id": 25088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23425,
                            "src": "2174:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 25093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2174:29:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 25094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2206:8:19",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        "src": "2174:40:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25085,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2149:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2149:66:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25097,
                  "nodeType": "ExpressionStatement",
                  "src": "2149:66:19"
                },
                {
                  "assignments": [
                    25100
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25100,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nameLocation": "2267:8:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25214,
                      "src": "2251:24:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$24760_memory_ptr",
                        "typeString": "struct Proposal"
                      },
                      "typeName": {
                        "id": 25099,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 25098,
                          "name": "Proposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24760,
                          "src": "2251:8:19"
                        },
                        "referencedDeclaration": 24760,
                        "src": "2251:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$24760_storage_ptr",
                          "typeString": "struct Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25105,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25103,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25039,
                        "src": "2305:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25101,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24851,
                        "src": "2278:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getProposalByQuestionId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24673,
                      "src": "2278:26:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Proposal_$24760_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct Proposal memory)"
                      }
                    },
                    "id": 25104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2278:38:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$24760_memory_ptr",
                      "typeString": "struct Proposal memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2251:65:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25109,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25100,
                              "src": "2343:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$24760_memory_ptr",
                                "typeString": "struct Proposal memory"
                              }
                            },
                            "id": 25110,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "answer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24757,
                            "src": "2343:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24747",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24747",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2335:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25107,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2335:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2335:24:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25114,
                              "name": "Result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24747,
                              "src": "2369:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Result_$24747_$",
                                "typeString": "type(enum Result)"
                              }
                            },
                            "id": 25115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "YES",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24745,
                            "src": "2369:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24747",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24747",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2361:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25112,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2361:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2361:19:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25106,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2326:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2326:55:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25118,
                  "nodeType": "ExpressionStatement",
                  "src": "2326:55:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 25122,
                              "name": "oo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24851,
                              "src": "2433:2:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                                "typeString": "contract OptimisticOracle"
                              }
                            },
                            "id": 25123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "DISPUTE_PERIOD",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24117,
                            "src": "2433:17:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 25124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2433:19:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31303031",
                          "id": 25125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2455:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1001_by_1",
                            "typeString": "int_const 1001"
                          },
                          "value": "1001"
                        },
                        "src": "2433:26:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25119,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24854,
                        "src": "2421:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25558",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25531,
                      "src": "2421:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 25127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2421:39:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25128,
                  "nodeType": "ExpressionStatement",
                  "src": "2421:39:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25132,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25039,
                        "src": "2490:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25129,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24851,
                        "src": "2470:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "finalizeProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24321,
                      "src": "2470:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 25133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2470:31:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25134,
                  "nodeType": "ExpressionStatement",
                  "src": "2470:31:19"
                },
                {
                  "expression": {
                    "id": 25140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25135,
                      "name": "question",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25049,
                      "src": "2511:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$24784_memory_ptr",
                        "typeString": "struct Question memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25138,
                          "name": "questionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25039,
                          "src": "2541:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 25136,
                          "name": "oo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24851,
                          "src": "2522:2:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                            "typeString": "contract OptimisticOracle"
                          }
                        },
                        "id": 25137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getQuestionById",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24660,
                        "src": "2522:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Question_$24784_memory_ptr_$",
                          "typeString": "function (bytes32) view external returns (struct Question memory)"
                        }
                      },
                      "id": 25139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2522:30:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$24784_memory_ptr",
                        "typeString": "struct Question memory"
                      }
                    },
                    "src": "2511:41:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$24784_memory_ptr",
                      "typeString": "struct Question memory"
                    }
                  },
                  "id": 25141,
                  "nodeType": "ExpressionStatement",
                  "src": "2511:41:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25145,
                              "name": "question",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25049,
                              "src": "2579:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Question_$24784_memory_ptr",
                                "typeString": "struct Question memory"
                              }
                            },
                            "id": 25146,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stage",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24780,
                            "src": "2579:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Stage_$24752",
                              "typeString": "enum Stage"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Stage_$24752",
                              "typeString": "enum Stage"
                            }
                          ],
                          "id": 25144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2571:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25143,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2571:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2571:23:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25150,
                              "name": "Stage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24752,
                              "src": "2604:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Stage_$24752_$",
                                "typeString": "type(enum Stage)"
                              }
                            },
                            "id": 25151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "FINALIZED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24751,
                            "src": "2604:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Stage_$24752",
                              "typeString": "enum Stage"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Stage_$24752",
                              "typeString": "enum Stage"
                            }
                          ],
                          "id": 25149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2596:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25148,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2596:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2596:24:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25142,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2562:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2562:59:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25154,
                  "nodeType": "ExpressionStatement",
                  "src": "2562:59:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25158,
                              "name": "question",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25049,
                              "src": "2648:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Question_$24784_memory_ptr",
                                "typeString": "struct Question memory"
                              }
                            },
                            "id": 25159,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "result",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24783,
                            "src": "2648:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24747",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24747",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2640:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25156,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2640:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2640:24:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25163,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25100,
                              "src": "2674:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$24760_memory_ptr",
                                "typeString": "struct Proposal memory"
                              }
                            },
                            "id": 25164,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "answer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24757,
                            "src": "2674:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24747",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24747",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2666:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25161,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2666:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2666:24:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25155,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2631:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2631:60:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25167,
                  "nodeType": "ExpressionStatement",
                  "src": "2631:60:19"
                },
                {
                  "assignments": [
                    25172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25172,
                      "mutability": "mutable",
                      "name": "questions",
                      "nameLocation": "2720:9:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25214,
                      "src": "2702:27:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Question_$24784_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Question[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 25170,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 25169,
                            "name": "Question",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24784,
                            "src": "2702:8:19"
                          },
                          "referencedDeclaration": 24784,
                          "src": "2702:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$24784_storage_ptr",
                            "typeString": "struct Question"
                          }
                        },
                        "id": 25171,
                        "nodeType": "ArrayTypeName",
                        "src": "2702:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Question_$24784_storage_$dyn_storage_ptr",
                          "typeString": "struct Question[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25176,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 25173,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24851,
                        "src": "2732:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAllQuestions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24740,
                      "src": "2732:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_struct$_Question_$24784_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (struct Question memory[] memory)"
                      }
                    },
                    "id": 25175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2732:20:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Question_$24784_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Question memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2702:50:19"
                },
                {
                  "expression": {
                    "id": 25182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25177,
                      "name": "question",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25049,
                      "src": "2762:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$24784_memory_ptr",
                        "typeString": "struct Question memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25180,
                          "name": "questionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25039,
                          "src": "2792:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 25178,
                          "name": "oo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24851,
                          "src": "2773:2:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                            "typeString": "contract OptimisticOracle"
                          }
                        },
                        "id": 25179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getQuestionById",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24660,
                        "src": "2773:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Question_$24784_memory_ptr_$",
                          "typeString": "function (bytes32) view external returns (struct Question memory)"
                        }
                      },
                      "id": 25181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2773:30:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$24784_memory_ptr",
                        "typeString": "struct Question memory"
                      }
                    },
                    "src": "2762:41:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$24784_memory_ptr",
                      "typeString": "struct Question memory"
                    }
                  },
                  "id": 25183,
                  "nodeType": "ExpressionStatement",
                  "src": "2762:41:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 25187,
                                "name": "questions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25172,
                                "src": "2831:9:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Question_$24784_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct Question memory[] memory"
                                }
                              },
                              "id": 25189,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 25188,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2841:1:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2831:12:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Question_$24784_memory_ptr",
                                "typeString": "struct Question memory"
                              }
                            },
                            "id": 25190,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "result",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24783,
                            "src": "2831:19:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24747",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24747",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2823:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25185,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2823:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2823:28:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25194,
                              "name": "question",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25049,
                              "src": "2861:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Question_$24784_memory_ptr",
                                "typeString": "struct Question memory"
                              }
                            },
                            "id": 25195,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "result",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24783,
                            "src": "2861:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24747",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24747",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2853:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25192,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2853:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2853:24:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25184,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2814:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2814:64:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25198,
                  "nodeType": "ExpressionStatement",
                  "src": "2814:64:19"
                },
                {
                  "assignments": [
                    25200
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25200,
                      "mutability": "mutable",
                      "name": "endingBalance",
                      "nameLocation": "2897:13:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25214,
                      "src": "2889:21:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25199,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2889:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25208,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25205,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2936:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$25502",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$25502",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          ],
                          "id": 25204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2928:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25203,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2928:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2928:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25201,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24857,
                        "src": "2913:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25586",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 25202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23425,
                      "src": "2913:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 25207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2913:29:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2889:53:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25210,
                        "name": "endingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25200,
                        "src": "2962:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25211,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25068,
                        "src": "2977:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25209,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2953:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2953:39:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25213,
                  "nodeType": "ExpressionStatement",
                  "src": "2953:39:19"
                }
              ]
            },
            "functionSelector": "e3f90828",
            "id": 25215,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testQuestionHappyPath",
            "nameLocation": "1470:21:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25028,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1491:2:19"
            },
            "returnParameters": {
              "id": 25029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1501:0:19"
            },
            "scope": 25502,
            "src": "1461:1538:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 25500,
              "nodeType": "Block",
              "src": "3043:2202:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "77696c6c20455448206265206f76657220316b20746f6d6f72726f773f",
                        "id": 25221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3105:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        "value": "will ETH be over 1k tomorrow?"
                      },
                      {
                        "hexValue": "68747470733a2f2f636f696e6765636b6f2e636f6d",
                        "id": 25222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3150:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b23b3d4ae85f5b8d09e37316325b8a4548b8b7ce65630611242948ce5487ad7",
                          "typeString": "literal_string \"https://coingecko.com\""
                        },
                        "value": "https://coingecko.com"
                      },
                      {
                        "hexValue": "31303030",
                        "id": 25223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3187:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b23b3d4ae85f5b8d09e37316325b8a4548b8b7ce65630611242948ce5487ad7",
                          "typeString": "literal_string \"https://coingecko.com\""
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 25218,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24851,
                        "src": "3077:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "askQuestion",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24187,
                      "src": "3077:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,string memory,uint256) external"
                      }
                    },
                    "id": 25224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3077:124:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25225,
                  "nodeType": "ExpressionStatement",
                  "src": "3077:124:19"
                },
                {
                  "assignments": [
                    25227
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25227,
                      "mutability": "mutable",
                      "name": "questionId",
                      "nameLocation": "3219:10:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25500,
                      "src": "3211:18:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 25226,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3211:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25234,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "77696c6c20455448206265206f76657220316b20746f6d6f72726f773f",
                        "id": 25230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3262:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        "value": "will ETH be over 1k tomorrow?"
                      },
                      {
                        "hexValue": "68747470733a2f2f636f696e6765636b6f2e636f6d",
                        "id": 25231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3307:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b23b3d4ae85f5b8d09e37316325b8a4548b8b7ce65630611242948ce5487ad7",
                          "typeString": "literal_string \"https://coingecko.com\""
                        },
                        "value": "https://coingecko.com"
                      },
                      {
                        "hexValue": "31303030",
                        "id": 25232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3344:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b23b3d4ae85f5b8d09e37316325b8a4548b8b7ce65630611242948ce5487ad7",
                          "typeString": "literal_string \"https://coingecko.com\""
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 25228,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24851,
                        "src": "3232:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getQuestionId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24694,
                      "src": "3232:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory,uint256) pure external returns (bytes32)"
                      }
                    },
                    "id": 25233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3232:126:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3211:147:19"
                },
                {
                  "assignments": [
                    25237
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25237,
                      "mutability": "mutable",
                      "name": "question",
                      "nameLocation": "3384:8:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25500,
                      "src": "3368:24:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$24784_memory_ptr",
                        "typeString": "struct Question"
                      },
                      "typeName": {
                        "id": 25236,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 25235,
                          "name": "Question",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24784,
                          "src": "3368:8:19"
                        },
                        "referencedDeclaration": 24784,
                        "src": "3368:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$24784_storage_ptr",
                          "typeString": "struct Question"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25242,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25240,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25227,
                        "src": "3414:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25238,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24851,
                        "src": "3395:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getQuestionById",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24660,
                      "src": "3395:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Question_$24784_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct Question memory)"
                      }
                    },
                    "id": 25241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3395:30:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$24784_memory_ptr",
                      "typeString": "struct Question memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3368:57:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25244,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25237,
                          "src": "3444:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$24784_memory_ptr",
                            "typeString": "struct Question memory"
                          }
                        },
                        "id": 25245,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "questionString",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24771,
                        "src": "3444:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "77696c6c20455448206265206f76657220316b20746f6d6f72726f773f",
                        "id": 25246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3469:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        },
                        "value": "will ETH be over 1k tomorrow?"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_206899c58bdd21353ef677207d9ff93ac1c966e38b31a649b0c5e5b35485d21e",
                          "typeString": "literal_string \"will ETH be over 1k tomorrow?\""
                        }
                      ],
                      "id": 25243,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 1639,
                      "src": "3435:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 25247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3435:66:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25248,
                  "nodeType": "ExpressionStatement",
                  "src": "3435:66:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 25252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3550:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 25249,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24854,
                        "src": "3538:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25558",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25531,
                      "src": "3538:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 25253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3538:17:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25254,
                  "nodeType": "ExpressionStatement",
                  "src": "3538:17:19"
                },
                {
                  "assignments": [
                    25256
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25256,
                      "mutability": "mutable",
                      "name": "initialBalance",
                      "nameLocation": "3573:14:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25500,
                      "src": "3565:22:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25255,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3565:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25264,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25261,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3613:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$25502",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$25502",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          ],
                          "id": 25260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3605:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25259,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3605:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3605:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25257,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24857,
                        "src": "3590:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25586",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 25258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23425,
                      "src": "3590:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 25263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3590:29:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3565:54:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25268,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25227,
                        "src": "3646:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 25269,
                          "name": "Result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24747,
                          "src": "3658:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Result_$24747_$",
                            "typeString": "type(enum Result)"
                          }
                        },
                        "id": 25270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "YES",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24745,
                        "src": "3658:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$24747",
                          "typeString": "enum Result"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_enum$_Result_$24747",
                          "typeString": "enum Result"
                        }
                      ],
                      "expression": {
                        "id": 25265,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24851,
                        "src": "3629:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proposeAnswer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24252,
                      "src": "3629:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_enum$_Result_$24747_$returns$__$",
                        "typeString": "function (bytes32,enum Result) external"
                      }
                    },
                    "id": 25271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3629:40:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25272,
                  "nodeType": "ExpressionStatement",
                  "src": "3629:40:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25274,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25256,
                        "src": "3700:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 25279,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3739:4:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OptimisticOracleTest_$25502",
                                    "typeString": "contract OptimisticOracleTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_OptimisticOracleTest_$25502",
                                    "typeString": "contract OptimisticOracleTest"
                                  }
                                ],
                                "id": 25278,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3731:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 25277,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3731:7:19",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 25280,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3731:13:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 25275,
                              "name": "opti",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24857,
                              "src": "3716:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OPTI_$25586",
                                "typeString": "contract OPTI"
                              }
                            },
                            "id": 25276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23425,
                            "src": "3716:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 25281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3716:29:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 25282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3748:8:19",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        "src": "3716:40:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25273,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3691:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3691:66:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25285,
                  "nodeType": "ExpressionStatement",
                  "src": "3691:66:19"
                },
                {
                  "assignments": [
                    25288
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25288,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nameLocation": "3809:8:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25500,
                      "src": "3793:24:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$24760_memory_ptr",
                        "typeString": "struct Proposal"
                      },
                      "typeName": {
                        "id": 25287,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 25286,
                          "name": "Proposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24760,
                          "src": "3793:8:19"
                        },
                        "referencedDeclaration": 24760,
                        "src": "3793:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$24760_storage_ptr",
                          "typeString": "struct Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25293,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25291,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25227,
                        "src": "3847:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25289,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24851,
                        "src": "3820:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getProposalByQuestionId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24673,
                      "src": "3820:26:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Proposal_$24760_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct Proposal memory)"
                      }
                    },
                    "id": 25292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3820:38:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$24760_memory_ptr",
                      "typeString": "struct Proposal memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3793:65:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25297,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25288,
                              "src": "3885:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$24760_memory_ptr",
                                "typeString": "struct Proposal memory"
                              }
                            },
                            "id": 25298,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "answer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24757,
                            "src": "3885:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24747",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24747",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3877:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25295,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3877:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3877:24:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25302,
                              "name": "Result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24747,
                              "src": "3911:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Result_$24747_$",
                                "typeString": "type(enum Result)"
                              }
                            },
                            "id": 25303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "YES",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24745,
                            "src": "3911:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24747",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24747",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3903:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25300,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3903:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3903:19:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25294,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3868:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3868:55:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25306,
                  "nodeType": "ExpressionStatement",
                  "src": "3868:55:19"
                },
                {
                  "assignments": [
                    25308
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25308,
                      "mutability": "mutable",
                      "name": "bobInitialBalance",
                      "nameLocation": "3970:17:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25500,
                      "src": "3962:25:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25307,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3962:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25313,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25311,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24861,
                        "src": "4005:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25309,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24857,
                        "src": "3990:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25586",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 25310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23425,
                      "src": "3990:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 25312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3990:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3962:47:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25317,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24861,
                        "src": "4032:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25314,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24854,
                        "src": "4019:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25558",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25516,
                      "src": "4019:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4019:17:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25319,
                  "nodeType": "ExpressionStatement",
                  "src": "4019:17:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25323,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25227,
                        "src": "4065:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25320,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24851,
                        "src": "4046:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "disputeProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24391,
                      "src": "4046:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 25324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4046:30:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25325,
                  "nodeType": "ExpressionStatement",
                  "src": "4046:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25327,
                        "name": "bobInitialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25308,
                        "src": "4095:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 25330,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24861,
                              "src": "4129:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 25328,
                              "name": "opti",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24857,
                              "src": "4114:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OPTI_$25586",
                                "typeString": "contract OPTI"
                              }
                            },
                            "id": 25329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23425,
                            "src": "4114:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 25331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4114:19:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 25332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4136:8:19",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        "src": "4114:30:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25326,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "4086:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4086:59:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25335,
                  "nodeType": "ExpressionStatement",
                  "src": "4086:59:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 25339,
                              "name": "oo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24851,
                              "src": "4222:2:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                                "typeString": "contract OptimisticOracle"
                              }
                            },
                            "id": 25340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "DISPUTE_PERIOD",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24117,
                            "src": "4222:17:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 25341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4222:19:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31303031",
                          "id": 25342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4244:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1001_by_1",
                            "typeString": "int_const 1001"
                          },
                          "value": "1001"
                        },
                        "src": "4222:26:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25336,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24854,
                        "src": "4210:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25558",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25531,
                      "src": "4210:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 25344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4210:39:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25345,
                  "nodeType": "ExpressionStatement",
                  "src": "4210:39:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "50726f706f73616c207761732064697370757465642c2063616e6e6f742066696e616c697a65",
                        "id": 25349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4279:40:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_89d58efc9aa98f6e7a3374d3a1dd910bdc732f644c38ae5e43799d7e1e9a03cb",
                          "typeString": "literal_string \"Proposal was disputed, cannot finalize\""
                        },
                        "value": "Proposal was disputed, cannot finalize"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_89d58efc9aa98f6e7a3374d3a1dd910bdc732f644c38ae5e43799d7e1e9a03cb",
                          "typeString": "literal_string \"Proposal was disputed, cannot finalize\""
                        }
                      ],
                      "expression": {
                        "id": 25346,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24854,
                        "src": "4259:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25558",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25521,
                      "src": "4259:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 25350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4259:61:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25351,
                  "nodeType": "ExpressionStatement",
                  "src": "4259:61:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25355,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25227,
                        "src": "4350:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25352,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24851,
                        "src": "4330:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "finalizeProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24321,
                      "src": "4330:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 25356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4330:31:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25357,
                  "nodeType": "ExpressionStatement",
                  "src": "4330:31:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 25361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4383:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 25358,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24854,
                        "src": "4371:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25558",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25531,
                      "src": "4371:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 25362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4371:17:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25363,
                  "nodeType": "ExpressionStatement",
                  "src": "4371:17:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25367,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24859,
                        "src": "4430:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25364,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24854,
                        "src": "4417:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25558",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25516,
                      "src": "4417:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4417:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25369,
                  "nodeType": "ExpressionStatement",
                  "src": "4417:19:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25373,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25227,
                        "src": "4458:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 25374,
                          "name": "Result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24747,
                          "src": "4470:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Result_$24747_$",
                            "typeString": "type(enum Result)"
                          }
                        },
                        "id": 25375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "YES",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24745,
                        "src": "4470:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$24747",
                          "typeString": "enum Result"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_enum$_Result_$24747",
                          "typeString": "enum Result"
                        }
                      ],
                      "expression": {
                        "id": 25370,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24851,
                        "src": "4446:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "makeVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24480,
                      "src": "4446:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_enum$_Result_$24747_$returns$__$",
                        "typeString": "function (bytes32,enum Result) external"
                      }
                    },
                    "id": 25376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4446:35:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25377,
                  "nodeType": "ExpressionStatement",
                  "src": "4446:35:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25381,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24861,
                        "src": "4504:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25378,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24854,
                        "src": "4491:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25558",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25516,
                      "src": "4491:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4491:17:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25383,
                  "nodeType": "ExpressionStatement",
                  "src": "4491:17:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25387,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25227,
                        "src": "4530:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 25388,
                          "name": "Result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24747,
                          "src": "4542:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Result_$24747_$",
                            "typeString": "type(enum Result)"
                          }
                        },
                        "id": 25389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "NO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24746,
                        "src": "4542:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$24747",
                          "typeString": "enum Result"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_enum$_Result_$24747",
                          "typeString": "enum Result"
                        }
                      ],
                      "expression": {
                        "id": 25384,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24851,
                        "src": "4518:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "makeVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24480,
                      "src": "4518:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_enum$_Result_$24747_$returns$__$",
                        "typeString": "function (bytes32,enum Result) external"
                      }
                    },
                    "id": 25390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4518:34:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25391,
                  "nodeType": "ExpressionStatement",
                  "src": "4518:34:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25395,
                        "name": "john",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24863,
                        "src": "4575:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25392,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24854,
                        "src": "4562:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25558",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25516,
                      "src": "4562:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4562:18:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25397,
                  "nodeType": "ExpressionStatement",
                  "src": "4562:18:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25401,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25227,
                        "src": "4602:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 25402,
                          "name": "Result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24747,
                          "src": "4614:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Result_$24747_$",
                            "typeString": "type(enum Result)"
                          }
                        },
                        "id": 25403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "NO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24746,
                        "src": "4614:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$24747",
                          "typeString": "enum Result"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_enum$_Result_$24747",
                          "typeString": "enum Result"
                        }
                      ],
                      "expression": {
                        "id": 25398,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24851,
                        "src": "4590:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "makeVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24480,
                      "src": "4590:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_enum$_Result_$24747_$returns$__$",
                        "typeString": "function (bytes32,enum Result) external"
                      }
                    },
                    "id": 25404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4590:34:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25405,
                  "nodeType": "ExpressionStatement",
                  "src": "4590:34:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25409,
                        "name": "kyle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24865,
                        "src": "4647:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25406,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24854,
                        "src": "4634:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25558",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25516,
                      "src": "4634:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4634:18:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25411,
                  "nodeType": "ExpressionStatement",
                  "src": "4634:18:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25415,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25227,
                        "src": "4674:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 25416,
                          "name": "Result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24747,
                          "src": "4686:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Result_$24747_$",
                            "typeString": "type(enum Result)"
                          }
                        },
                        "id": 25417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "NO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24746,
                        "src": "4686:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$24747",
                          "typeString": "enum Result"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_enum$_Result_$24747",
                          "typeString": "enum Result"
                        }
                      ],
                      "expression": {
                        "id": 25412,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24851,
                        "src": "4662:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "makeVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24480,
                      "src": "4662:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_enum$_Result_$24747_$returns$__$",
                        "typeString": "function (bytes32,enum Result) external"
                      }
                    },
                    "id": 25418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4662:34:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25419,
                  "nodeType": "ExpressionStatement",
                  "src": "4662:34:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 25423,
                              "name": "oo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24851,
                              "src": "4744:2:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                                "typeString": "contract OptimisticOracle"
                              }
                            },
                            "id": 25424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "VOTING_PERIOD",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24119,
                            "src": "4744:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 25425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4744:18:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31303031",
                          "id": 25426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4765:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1001_by_1",
                            "typeString": "int_const 1001"
                          },
                          "value": "1001"
                        },
                        "src": "4744:25:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25420,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24854,
                        "src": "4732:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$25558",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 25422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25531,
                      "src": "4732:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 25428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4732:38:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25429,
                  "nodeType": "ExpressionStatement",
                  "src": "4732:38:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25433,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25227,
                        "src": "4796:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25430,
                        "name": "oo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24851,
                        "src": "4780:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                          "typeString": "contract OptimisticOracle"
                        }
                      },
                      "id": 25432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "finalizeVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24647,
                      "src": "4780:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 25434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4780:27:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25435,
                  "nodeType": "ExpressionStatement",
                  "src": "4780:27:19"
                },
                {
                  "expression": {
                    "id": 25441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25436,
                      "name": "question",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25237,
                      "src": "4817:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$24784_memory_ptr",
                        "typeString": "struct Question memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25439,
                          "name": "questionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25227,
                          "src": "4847:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 25437,
                          "name": "oo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24851,
                          "src": "4828:2:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracle_$24741",
                            "typeString": "contract OptimisticOracle"
                          }
                        },
                        "id": 25438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getQuestionById",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24660,
                        "src": "4828:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Question_$24784_memory_ptr_$",
                          "typeString": "function (bytes32) view external returns (struct Question memory)"
                        }
                      },
                      "id": 25440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4828:30:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$24784_memory_ptr",
                        "typeString": "struct Question memory"
                      }
                    },
                    "src": "4817:41:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$24784_memory_ptr",
                      "typeString": "struct Question memory"
                    }
                  },
                  "id": 25442,
                  "nodeType": "ExpressionStatement",
                  "src": "4817:41:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25446,
                              "name": "question",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25237,
                              "src": "4885:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Question_$24784_memory_ptr",
                                "typeString": "struct Question memory"
                              }
                            },
                            "id": 25447,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stage",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24780,
                            "src": "4885:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Stage_$24752",
                              "typeString": "enum Stage"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Stage_$24752",
                              "typeString": "enum Stage"
                            }
                          ],
                          "id": 25445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4877:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25444,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4877:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4877:23:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25451,
                              "name": "Stage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24752,
                              "src": "4910:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Stage_$24752_$",
                                "typeString": "type(enum Stage)"
                              }
                            },
                            "id": 25452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "FINALIZED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24751,
                            "src": "4910:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Stage_$24752",
                              "typeString": "enum Stage"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Stage_$24752",
                              "typeString": "enum Stage"
                            }
                          ],
                          "id": 25450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4902:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25449,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4902:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4902:24:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25443,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "4868:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4868:59:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25455,
                  "nodeType": "ExpressionStatement",
                  "src": "4868:59:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25459,
                              "name": "question",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25237,
                              "src": "4954:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Question_$24784_memory_ptr",
                                "typeString": "struct Question memory"
                              }
                            },
                            "id": 25460,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "result",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24783,
                            "src": "4954:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24747",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24747",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4946:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25457,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4946:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4946:24:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25464,
                              "name": "Result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24747,
                              "src": "4980:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Result_$24747_$",
                                "typeString": "type(enum Result)"
                              }
                            },
                            "id": 25465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "NO",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24746,
                            "src": "4980:9:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$24747",
                              "typeString": "enum Result"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Result_$24747",
                              "typeString": "enum Result"
                            }
                          ],
                          "id": 25463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4972:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 25462,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4972:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4972:18:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25456,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "4937:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4937:54:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25468,
                  "nodeType": "ExpressionStatement",
                  "src": "4937:54:19"
                },
                {
                  "assignments": [
                    25470
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25470,
                      "mutability": "mutable",
                      "name": "bobEndingBalance",
                      "nameLocation": "5010:16:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25500,
                      "src": "5002:24:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25469,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5002:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25475,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25473,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24861,
                        "src": "5044:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25471,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24857,
                        "src": "5029:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25586",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 25472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23425,
                      "src": "5029:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 25474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5029:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5002:46:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25477,
                        "name": "bobEndingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25470,
                        "src": "5067:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25478,
                          "name": "bobInitialBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25308,
                          "src": "5085:17:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 25479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5105:8:19",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        "src": "5085:28:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25476,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "5058:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5058:56:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25482,
                  "nodeType": "ExpressionStatement",
                  "src": "5058:56:19"
                },
                {
                  "assignments": [
                    25484
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25484,
                      "mutability": "mutable",
                      "name": "endingBalance",
                      "nameLocation": "5133:13:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25500,
                      "src": "5125:21:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25483,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5125:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25492,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25489,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5172:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$25502",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracleTest_$25502",
                              "typeString": "contract OptimisticOracleTest"
                            }
                          ],
                          "id": 25488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5164:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25487,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5164:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5164:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25485,
                        "name": "opti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24857,
                        "src": "5149:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OPTI_$25586",
                          "typeString": "contract OPTI"
                        }
                      },
                      "id": 25486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23425,
                      "src": "5149:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 25491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5149:29:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5125:53:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25494,
                        "name": "endingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25484,
                        "src": "5197:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25495,
                          "name": "initialBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25256,
                          "src": "5212:14:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 25496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5229:8:19",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        "src": "5212:25:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25493,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "5188:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5188:50:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25499,
                  "nodeType": "ExpressionStatement",
                  "src": "5188:50:19"
                }
              ]
            },
            "functionSelector": "74b9983a",
            "id": 25501,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testQuestionSadPath",
            "nameLocation": "3014:19:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3033:2:19"
            },
            "returnParameters": {
              "id": 25217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3043:0:19"
            },
            "scope": 25502,
            "src": "3005:2240:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 25510,
        "src": "437:4810:19",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25503,
              "name": "ERC1155Holder",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23292,
              "src": "5275:13:19"
            },
            "id": 25504,
            "nodeType": "InheritanceSpecifier",
            "src": "5275:13:19"
          }
        ],
        "canonicalName": "TokenReceiver",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 25509,
        "linearizedBaseContracts": [
          25509,
          23292,
          23326,
          23241,
          24062,
          24074
        ],
        "name": "TokenReceiver",
        "nameLocation": "5258:13:19",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 25507,
              "nodeType": "Block",
              "src": "5322:2:19",
              "statements": []
            },
            "id": 25508,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25505,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5302:2:19"
            },
            "returnParameters": {
              "id": 25506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5322:0:19"
            },
            "scope": 25509,
            "src": "5295:29:19",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 25510,
        "src": "5249:77:19",
        "usedErrors": []
      }
    ],
    "src": "39:5288:19"
  }
}